  MySql.Data.Resources.resources - Embedded, ContainedInManifestFile, 
  MySql.Data.ResourcesX.resources - Embedded, ContainedInManifestFile, 
  MySql.Data.keywords.txt - Embedded, ContainedInManifestFile, 
  MySql.Data.Properties.ReservedWords.txt - Embedded, ContainedInManifestFile, 
  MySql.Data.libzstd.dll - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly MySql.Data, Version=8.0.20.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Google.Protobuf, Version=3.6.1.0, Culture=neutral, PublicKeyToken=a7d26565bac4d604: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Zstandard.Net, Version=1.1.7.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d: 
	hash=None, flags=None
Assembly K4os.Compression.LZ4.Streams, Version=1.1.11.0, Culture=neutral, PublicKeyToken=2186fa9121ef231d: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly BouncyCastle.Crypto, Version=1.8.3.0, Culture=neutral, PublicKeyToken=0e99375e54769942: 
	hash=None, flags=None
Assembly Ubiety.Dns.Core, Version=2.2.1.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d: 
	hash=None, flags=None
Assembly Renci.SshNet, Version=2016.1.0.0, Culture=neutral, PublicKeyToken=1cee9f8bde3db106: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Transactions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class <>f__AnonymousType0`2[<key>j__TPar,<diff>j__TPar]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: <key>j__TPar
  Type parameter: <diff>j__TPar
    Void .ctor(<key>j__TPar, <diff>j__TPar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    <key>j__TPar key 'get ' : 
    <diff>j__TPar diff 'get ' : 
  Methods:
    get_key(): PrivateScope, Public, HideBySig, SpecialName
    get_diff(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mysqlx.MysqlxReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.ClientMessages: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.ClientMessages): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.ClientMessages]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.ClientMessages]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.ClientMessages]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.ClientMessages] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ClientMessages): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(ClientMessages): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.ServerMessages: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.ServerMessages): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.ServerMessages]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.ServerMessages]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.ServerMessages]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.ServerMessages] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ServerMessages): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(ServerMessages): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Ok: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Ok): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Ok]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Ok]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Ok]
  Fields:
    Int32 MsgFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Ok] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Msg 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Msg(): PrivateScope, Public, HideBySig, SpecialName
    set_Msg(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Ok): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Ok): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Error: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Error): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Error]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Error]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Error]
  Fields:
    Int32 SeverityFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 CodeFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 SqlStateFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 MsgFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Error] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Severity Severity 'get set' : 
    UInt32 Code 'get set' : 
    System.String SqlState 'get set' : 
    System.String Msg 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Severity(): PrivateScope, Public, HideBySig, SpecialName
    set_Severity(Severity): PrivateScope, Public, HideBySig, SpecialName
    get_Code(): PrivateScope, Public, HideBySig, SpecialName
    set_Code(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_SqlState(): PrivateScope, Public, HideBySig, SpecialName
    set_SqlState(String): PrivateScope, Public, HideBySig, SpecialName
    get_Msg(): PrivateScope, Public, HideBySig, SpecialName
    set_Msg(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Error): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Error): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Sql.MysqlxSqlReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Sql.StmtExecute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Sql.StmtExecute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Sql.StmtExecute]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Sql.StmtExecute]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Sql.StmtExecute]
  Fields:
    Int32 NamespaceFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 StmtFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ArgsFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 CompactMetadataFieldNumber = 4 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Sql.StmtExecute] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Namespace 'get set' : 
    Google.Protobuf.ByteString Stmt 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Any] Args 'get ' : 
    Boolean CompactMetadata 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, HideBySig, SpecialName
    get_Stmt(): PrivateScope, Public, HideBySig, SpecialName
    set_Stmt(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_Args(): PrivateScope, Public, HideBySig, SpecialName
    get_CompactMetadata(): PrivateScope, Public, HideBySig, SpecialName
    set_CompactMetadata(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(StmtExecute): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(StmtExecute): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Sql.StmtExecuteOk: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Sql.StmtExecuteOk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Sql.StmtExecuteOk]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Sql.StmtExecuteOk]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Sql.StmtExecuteOk]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Sql.StmtExecuteOk] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(StmtExecuteOk): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(StmtExecuteOk): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Session.MysqlxSessionReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Session.AuthenticateStart: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Session.AuthenticateStart): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Session.AuthenticateStart]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Session.AuthenticateStart]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Session.AuthenticateStart]
  Fields:
    Int32 MechNameFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 AuthDataFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 InitialResponseFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Session.AuthenticateStart] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String MechName 'get set' : 
    Google.Protobuf.ByteString AuthData 'get set' : 
    Google.Protobuf.ByteString InitialResponse 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_MechName(): PrivateScope, Public, HideBySig, SpecialName
    set_MechName(String): PrivateScope, Public, HideBySig, SpecialName
    get_AuthData(): PrivateScope, Public, HideBySig, SpecialName
    set_AuthData(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_InitialResponse(): PrivateScope, Public, HideBySig, SpecialName
    set_InitialResponse(ByteString): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(AuthenticateStart): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(AuthenticateStart): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Session.AuthenticateContinue: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Session.AuthenticateContinue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Session.AuthenticateContinue]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Session.AuthenticateContinue]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Session.AuthenticateContinue]
  Fields:
    Int32 AuthDataFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Session.AuthenticateContinue] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.ByteString AuthData 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AuthData(): PrivateScope, Public, HideBySig, SpecialName
    set_AuthData(ByteString): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(AuthenticateContinue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(AuthenticateContinue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Session.AuthenticateOk: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Session.AuthenticateOk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Session.AuthenticateOk]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Session.AuthenticateOk]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Session.AuthenticateOk]
  Fields:
    Int32 AuthDataFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Session.AuthenticateOk] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.ByteString AuthData 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AuthData(): PrivateScope, Public, HideBySig, SpecialName
    set_AuthData(ByteString): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(AuthenticateOk): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(AuthenticateOk): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Session.Reset: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Session.Reset): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Session.Reset]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Session.Reset]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Session.Reset]
  Fields:
    Int32 KeepOpenFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Session.Reset] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Boolean KeepOpen 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_KeepOpen(): PrivateScope, Public, HideBySig, SpecialName
    set_KeepOpen(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Reset): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Reset): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Session.Close: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Session.Close): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Session.Close]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Session.Close]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Session.Close]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Session.Close] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Resultset.MysqlxResultsetReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Mysqlx.Resultset.ContentType_BYTES: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mysqlx.Resultset.ContentType_BYTES Cbnone = 0 : Public, Static, Literal, HasDefault
    Mysqlx.Resultset.ContentType_BYTES Geometry = 1 : Public, Static, Literal, HasDefault
    Mysqlx.Resultset.ContentType_BYTES Json = 2 : Public, Static, Literal, HasDefault
    Mysqlx.Resultset.ContentType_BYTES Xml = 3 : Public, Static, Literal, HasDefault
Struct Mysqlx.Resultset.ContentType_DATETIME: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mysqlx.Resultset.ContentType_DATETIME Cdnone = 0 : Public, Static, Literal, HasDefault
    Mysqlx.Resultset.ContentType_DATETIME Date = 1 : Public, Static, Literal, HasDefault
    Mysqlx.Resultset.ContentType_DATETIME Datetime = 2 : Public, Static, Literal, HasDefault
Class Mysqlx.Resultset.FetchDoneMoreOutParams: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Resultset.FetchDoneMoreOutParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Resultset.FetchDoneMoreOutParams]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Resultset.FetchDoneMoreOutParams]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Resultset.FetchDoneMoreOutParams]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Resultset.FetchDoneMoreOutParams] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FetchDoneMoreOutParams): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(FetchDoneMoreOutParams): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Resultset.FetchDoneMoreResultsets: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Resultset.FetchDoneMoreResultsets): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Resultset.FetchDoneMoreResultsets]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Resultset.FetchDoneMoreResultsets]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Resultset.FetchDoneMoreResultsets]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Resultset.FetchDoneMoreResultsets] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FetchDoneMoreResultsets): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(FetchDoneMoreResultsets): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Resultset.FetchDone: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Resultset.FetchDone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Resultset.FetchDone]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Resultset.FetchDone]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Resultset.FetchDone]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Resultset.FetchDone] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FetchDone): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(FetchDone): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Resultset.FetchSuspended: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Resultset.FetchSuspended): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Resultset.FetchSuspended]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Resultset.FetchSuspended]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Resultset.FetchSuspended]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Resultset.FetchSuspended] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FetchSuspended): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(FetchSuspended): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Resultset.ColumnMetaData: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Resultset.ColumnMetaData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Resultset.ColumnMetaData]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Resultset.ColumnMetaData]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Resultset.ColumnMetaData]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 NameFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 OriginalNameFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 TableFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 OriginalTableFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 SchemaFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 CatalogFieldNumber = 7 : Public, Static, Literal, HasDefault
    Int32 CollationFieldNumber = 8 : Public, Static, Literal, HasDefault
    Int32 FractionalDigitsFieldNumber = 9 : Public, Static, Literal, HasDefault
    Int32 LengthFieldNumber = 10 : Public, Static, Literal, HasDefault
    Int32 FlagsFieldNumber = 11 : Public, Static, Literal, HasDefault
    Int32 ContentTypeFieldNumber = 12 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Resultset.ColumnMetaData] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    FieldType Type 'get set' : 
    Google.Protobuf.ByteString Name 'get set' : 
    Google.Protobuf.ByteString OriginalName 'get set' : 
    Google.Protobuf.ByteString Table 'get set' : 
    Google.Protobuf.ByteString OriginalTable 'get set' : 
    Google.Protobuf.ByteString Schema 'get set' : 
    Google.Protobuf.ByteString Catalog 'get set' : 
    UInt64 Collation 'get set' : 
    UInt32 FractionalDigits 'get set' : 
    UInt32 Length 'get set' : 
    UInt32 Flags 'get set' : 
    UInt32 ContentType 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(FieldType): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalName(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalName(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_Table(): PrivateScope, Public, HideBySig, SpecialName
    set_Table(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalTable(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalTable(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_Catalog(): PrivateScope, Public, HideBySig, SpecialName
    set_Catalog(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_Collation(): PrivateScope, Public, HideBySig, SpecialName
    set_Collation(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_FractionalDigits(): PrivateScope, Public, HideBySig, SpecialName
    set_FractionalDigits(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentType(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ColumnMetaData): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(ColumnMetaData): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Resultset.Row: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Resultset.Row): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Resultset.Row]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Resultset.Row]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Resultset.Row]
  Fields:
    Int32 FieldFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Resultset.Row] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Google.Protobuf.ByteString] Field 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Field(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Row): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Row): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Prepare.MysqlxPrepareReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Prepare.Prepare: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Prepare.Prepare): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Prepare.Prepare]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Prepare.Prepare]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Prepare.Prepare]
  Fields:
    Int32 StmtIdFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 StmtFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Prepare.Prepare] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 StmtId 'get set' : 
    OneOfMessage Stmt 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_StmtId(): PrivateScope, Public, HideBySig, SpecialName
    set_StmtId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Stmt(): PrivateScope, Public, HideBySig, SpecialName
    set_Stmt(OneOfMessage): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Prepare): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Prepare): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Prepare.Execute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Prepare.Execute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Prepare.Execute]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Prepare.Execute]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Prepare.Execute]
  Fields:
    Int32 StmtIdFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ArgsFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 CompactMetadataFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Prepare.Execute] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 StmtId 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Any] Args 'get ' : 
    Boolean CompactMetadata 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_StmtId(): PrivateScope, Public, HideBySig, SpecialName
    set_StmtId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Args(): PrivateScope, Public, HideBySig, SpecialName
    get_CompactMetadata(): PrivateScope, Public, HideBySig, SpecialName
    set_CompactMetadata(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Execute): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Execute): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Prepare.Deallocate: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Prepare.Deallocate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Prepare.Deallocate]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Prepare.Deallocate]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Prepare.Deallocate]
  Fields:
    Int32 StmtIdFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Prepare.Deallocate] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 StmtId 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_StmtId(): PrivateScope, Public, HideBySig, SpecialName
    set_StmtId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Deallocate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Deallocate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Notice.MysqlxNoticeReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Notice.Frame: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Notice.Frame): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Notice.Frame]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Notice.Frame]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Notice.Frame]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ScopeFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 PayloadFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Notice.Frame] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 Type 'get set' : 
    Scope Scope 'get set' : 
    Google.Protobuf.ByteString Payload 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    set_Scope(Scope): PrivateScope, Public, HideBySig, SpecialName
    get_Payload(): PrivateScope, Public, HideBySig, SpecialName
    set_Payload(ByteString): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Frame): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Frame): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Notice.Warning: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Notice.Warning): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Notice.Warning]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Notice.Warning]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Notice.Warning]
  Fields:
    Int32 LevelFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 CodeFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 MsgFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Notice.Warning] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Level Level 'get set' : 
    UInt32 Code 'get set' : 
    System.String Msg 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    set_Level(Level): PrivateScope, Public, HideBySig, SpecialName
    get_Code(): PrivateScope, Public, HideBySig, SpecialName
    set_Code(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Msg(): PrivateScope, Public, HideBySig, SpecialName
    set_Msg(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Warning): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Warning): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Notice.SessionVariableChanged: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Notice.SessionVariableChanged): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Notice.SessionVariableChanged]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Notice.SessionVariableChanged]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Notice.SessionVariableChanged]
  Fields:
    Int32 ParamFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ValueFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Notice.SessionVariableChanged] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Param 'get set' : 
    Mysqlx.Datatypes.Scalar Value 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Param(): PrivateScope, Public, HideBySig, SpecialName
    set_Param(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Scalar): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(SessionVariableChanged): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(SessionVariableChanged): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Notice.SessionStateChanged: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Notice.SessionStateChanged): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Notice.SessionStateChanged]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Notice.SessionStateChanged]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Notice.SessionStateChanged]
  Fields:
    Int32 ParamFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ValueFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Notice.SessionStateChanged] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Parameter Param 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Scalar] Value 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Param(): PrivateScope, Public, HideBySig, SpecialName
    set_Param(Parameter): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(SessionStateChanged): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(SessionStateChanged): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.MysqlxExprReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Expr.Expr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.Expr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.Expr]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.Expr]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.Expr]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 IdentifierFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 VariableFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 LiteralFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 FunctionCallFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 OperatorFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 PositionFieldNumber = 7 : Public, Static, Literal, HasDefault
    Int32 ObjectFieldNumber = 8 : Public, Static, Literal, HasDefault
    Int32 ArrayFieldNumber = 9 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.Expr] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Type Type  'get set' : 
    Mysqlx.Expr.ColumnIdentifier Identifier 'get set' : 
    System.String Variable 'get set' : 
    Mysqlx.Datatypes.Scalar Literal 'get set' : 
    Mysqlx.Expr.FunctionCall FunctionCall 'get set' : 
    Mysqlx.Expr.Operator Operator 'get set' : 
    UInt32 Position 'get set' : 
    Mysqlx.Expr.Object Object 'get set' : 
    Mysqlx.Expr.Array Array 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Identifier(ColumnIdentifier): PrivateScope, Public, HideBySig, SpecialName
    get_Variable(): PrivateScope, Public, HideBySig, SpecialName
    set_Variable(String): PrivateScope, Public, HideBySig, SpecialName
    get_Literal(): PrivateScope, Public, HideBySig, SpecialName
    set_Literal(Scalar): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    set_FunctionCall(FunctionCall): PrivateScope, Public, HideBySig, SpecialName
    get_Operator(): PrivateScope, Public, HideBySig, SpecialName
    set_Operator(Operator): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Object(): PrivateScope, Public, HideBySig, SpecialName
    set_Object(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
    set_Array(Array): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Expr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Expr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.Identifier: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.Identifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.Identifier]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.Identifier]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.Identifier]
  Fields:
    Int32 NameFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 SchemaNameFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.Identifier] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Name 'get set' : 
    System.String SchemaName 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_SchemaName(): PrivateScope, Public, HideBySig, SpecialName
    set_SchemaName(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Identifier): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Identifier): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.DocumentPathItem: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.DocumentPathItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.DocumentPathItem]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.DocumentPathItem]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.DocumentPathItem]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ValueFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 IndexFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.DocumentPathItem] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Type Type  'get set' : 
    System.String Value 'get set' : 
    UInt32 Index 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DocumentPathItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(DocumentPathItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.ColumnIdentifier: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.ColumnIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.ColumnIdentifier]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.ColumnIdentifier]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.ColumnIdentifier]
  Fields:
    Int32 DocumentPathFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 NameFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 TableNameFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 SchemaNameFieldNumber = 4 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.ColumnIdentifier] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.DocumentPathItem] DocumentPath 'get ' : 
    System.String Name 'get set' : 
    System.String TableName 'get set' : 
    System.String SchemaName 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DocumentPath(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TableName(): PrivateScope, Public, HideBySig, SpecialName
    set_TableName(String): PrivateScope, Public, HideBySig, SpecialName
    get_SchemaName(): PrivateScope, Public, HideBySig, SpecialName
    set_SchemaName(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ColumnIdentifier): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(ColumnIdentifier): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.FunctionCall: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.FunctionCall): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.FunctionCall]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.FunctionCall]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.FunctionCall]
  Fields:
    Int32 NameFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ParamFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.FunctionCall] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Expr.Identifier Name 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.Expr] Param 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(Identifier): PrivateScope, Public, HideBySig, SpecialName
    get_Param(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FunctionCall): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(FunctionCall): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.Operator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.Operator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.Operator]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.Operator]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.Operator]
  Fields:
    Int32 NameFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ParamFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.Operator] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Name 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.Expr] Param 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Param(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Operator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Operator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.Object: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.Object]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.Object]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.Object]
  Fields:
    Int32 FldFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.Object] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.Object+Types+ObjectField] Fld 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Fld(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expr.Array: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expr.Array): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.Array]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.Array]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.Array]
  Fields:
    Int32 ValueFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.Array] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.Expr] Value 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Array): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Array): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expect.MysqlxExpectReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Expect.Open: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expect.Open): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expect.Open]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expect.Open]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expect.Open]
  Fields:
    Int32 OpFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 CondFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expect.Open] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    CtxOperation Op 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expect.Open+Types+Condition] Cond 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Op(): PrivateScope, Public, HideBySig, SpecialName
    set_Op(CtxOperation): PrivateScope, Public, HideBySig, SpecialName
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Open): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Open): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Expect.Close: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Expect.Close): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expect.Close]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expect.Close]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expect.Close]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expect.Close] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Datatypes.MysqlxDatatypesReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Datatypes.Scalar: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Datatypes.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Datatypes.Scalar]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Datatypes.Scalar]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Datatypes.Scalar]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 VSignedIntFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 VUnsignedIntFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 VOctetsFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 VDoubleFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 VFloatFieldNumber = 7 : Public, Static, Literal, HasDefault
    Int32 VBoolFieldNumber = 8 : Public, Static, Literal, HasDefault
    Int32 VStringFieldNumber = 9 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Datatypes.Scalar] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Type Type  'get set' : 
    Int64 VSignedInt 'get set' : 
    UInt64 VUnsignedInt 'get set' : 
    Octets VOctets 'get set' : 
    Double VDouble 'get set' : 
    Single VFloat 'get set' : 
    Boolean VBool 'get set' : 
    String VString 'get set' : 
    DefaultOneOfOneofCase DefaultOneOfCase 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_VSignedInt(): PrivateScope, Public, HideBySig, SpecialName
    set_VSignedInt(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_VUnsignedInt(): PrivateScope, Public, HideBySig, SpecialName
    set_VUnsignedInt(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_VOctets(): PrivateScope, Public, HideBySig, SpecialName
    set_VOctets(Octets): PrivateScope, Public, HideBySig, SpecialName
    get_VDouble(): PrivateScope, Public, HideBySig, SpecialName
    set_VDouble(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VFloat(): PrivateScope, Public, HideBySig, SpecialName
    set_VFloat(Single): PrivateScope, Public, HideBySig, SpecialName
    get_VBool(): PrivateScope, Public, HideBySig, SpecialName
    set_VBool(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_VString(): PrivateScope, Public, HideBySig, SpecialName
    set_VString(String): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultOneOfCase(): PrivateScope, Public, HideBySig, SpecialName
    ClearDefaultOneOf(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Scalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Scalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Datatypes.Object: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Datatypes.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Datatypes.Object]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Datatypes.Object]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Datatypes.Object]
  Fields:
    Int32 FldFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Datatypes.Object] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Object+Types+ObjectField] Fld 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Fld(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Datatypes.Array: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Datatypes.Array): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Datatypes.Array]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Datatypes.Array]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Datatypes.Array]
  Fields:
    Int32 ValueFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Datatypes.Array] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Any] Value 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Array): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Array): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Datatypes.Any: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Datatypes.Any): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Datatypes.Any]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Datatypes.Any]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Datatypes.Any]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ScalarFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 ObjFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 ArrayFieldNumber = 4 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Datatypes.Any] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Type Type  'get set' : 
    Mysqlx.Datatypes.Scalar Scalar 'get set' : 
    Mysqlx.Datatypes.Object Obj 'get set' : 
    Mysqlx.Datatypes.Array Array 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Scalar(): PrivateScope, Public, HideBySig, SpecialName
    set_Scalar(Scalar): PrivateScope, Public, HideBySig, SpecialName
    get_Obj(): PrivateScope, Public, HideBySig, SpecialName
    set_Obj(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
    set_Array(Array): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Any): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Any): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Cursor.MysqlxCursorReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Cursor.Open: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Cursor.Open): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Cursor.Open]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Cursor.Open]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Cursor.Open]
  Fields:
    Int32 CursorIdFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 StmtFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 FetchRowsFieldNumber = 5 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Cursor.Open] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 CursorId 'get set' : 
    OneOfMessage Stmt 'get set' : 
    UInt64 FetchRows 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_CursorId(): PrivateScope, Public, HideBySig, SpecialName
    set_CursorId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Stmt(): PrivateScope, Public, HideBySig, SpecialName
    set_Stmt(OneOfMessage): PrivateScope, Public, HideBySig, SpecialName
    get_FetchRows(): PrivateScope, Public, HideBySig, SpecialName
    set_FetchRows(UInt64): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Open): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Open): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Cursor.Fetch: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Cursor.Fetch): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Cursor.Fetch]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Cursor.Fetch]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Cursor.Fetch]
  Fields:
    Int32 CursorIdFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 FetchRowsFieldNumber = 5 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Cursor.Fetch] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 CursorId 'get set' : 
    UInt64 FetchRows 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_CursorId(): PrivateScope, Public, HideBySig, SpecialName
    set_CursorId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_FetchRows(): PrivateScope, Public, HideBySig, SpecialName
    set_FetchRows(UInt64): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Fetch): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Fetch): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Cursor.Close: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Cursor.Close): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Cursor.Close]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Cursor.Close]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Cursor.Close]
  Fields:
    Int32 CursorIdFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Cursor.Close] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 CursorId 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_CursorId(): PrivateScope, Public, HideBySig, SpecialName
    set_CursorId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.MysqlxCrudReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Mysqlx.Crud.DataModel: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mysqlx.Crud.DataModel NoneDataModel = 0 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.DataModel Document = 1 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.DataModel Table = 2 : Public, Static, Literal, HasDefault
Struct Mysqlx.Crud.ViewAlgorithm: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mysqlx.Crud.ViewAlgorithm NoneViewAlgorithm = 0 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.ViewAlgorithm Undefined = 1 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.ViewAlgorithm Merge = 2 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.ViewAlgorithm Temptable = 3 : Public, Static, Literal, HasDefault
Struct Mysqlx.Crud.ViewSqlSecurity: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mysqlx.Crud.ViewSqlSecurity NoneViewSqlSecurity = 0 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.ViewSqlSecurity Invoker = 1 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.ViewSqlSecurity Definer = 2 : Public, Static, Literal, HasDefault
Struct Mysqlx.Crud.ViewCheckOption: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mysqlx.Crud.ViewCheckOption NoneViewCheckOption = 0 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.ViewCheckOption Local = 1 : Public, Static, Literal, HasDefault
    Mysqlx.Crud.ViewCheckOption Cascaded = 2 : Public, Static, Literal, HasDefault
Class Mysqlx.Crud.Column: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Column): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Column]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Column]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Column]
  Fields:
    Int32 NameFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 AliasFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 DocumentPathFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Column] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Name 'get set' : 
    System.String Alias 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.DocumentPathItem] DocumentPath 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Alias(): PrivateScope, Public, HideBySig, SpecialName
    set_Alias(String): PrivateScope, Public, HideBySig, SpecialName
    get_DocumentPath(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Column): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Column): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Projection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Projection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Projection]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Projection]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Projection]
  Fields:
    Int32 SourceFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 AliasFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Projection] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Expr.Expr Source 'get set' : 
    System.String Alias 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    set_Source(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Alias(): PrivateScope, Public, HideBySig, SpecialName
    set_Alias(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Projection): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Projection): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Collection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Collection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Collection]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Collection]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Collection]
  Fields:
    Int32 NameFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 SchemaFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Collection] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Name 'get set' : 
    System.String Schema 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Collection): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Collection): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Limit: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Limit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Limit]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Limit]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Limit]
  Fields:
    Int32 RowCountFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 OffsetFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Limit] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt64 RowCount 'get set' : 
    UInt64 Offset 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_RowCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RowCount(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt64): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Limit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Limit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.LimitExpr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.LimitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.LimitExpr]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.LimitExpr]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.LimitExpr]
  Fields:
    Int32 RowCountFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 OffsetFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.LimitExpr] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Expr.Expr RowCount 'get set' : 
    Mysqlx.Expr.Expr Offset 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_RowCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RowCount(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Expr): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(LimitExpr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(LimitExpr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Order: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Order): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Order]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Order]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Order]
  Fields:
    Int32 ExprFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 DirectionFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Order] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Expr.Expr Expr 'get set' : 
    Direction Direction 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Expr(): PrivateScope, Public, HideBySig, SpecialName
    set_Expr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(Direction): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Order): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Order): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.UpdateOperation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.UpdateOperation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.UpdateOperation]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.UpdateOperation]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.UpdateOperation]
  Fields:
    Int32 SourceFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 OperationFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 ValueFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.UpdateOperation] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Expr.ColumnIdentifier Source 'get set' : 
    UpdateType Operation 'get set' : 
    Mysqlx.Expr.Expr Value 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    set_Source(ColumnIdentifier): PrivateScope, Public, HideBySig, SpecialName
    get_Operation(): PrivateScope, Public, HideBySig, SpecialName
    set_Operation(UpdateType): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Expr): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(UpdateOperation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(UpdateOperation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Find: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Find): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Find]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Find]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Find]
  Fields:
    Int32 CollectionFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 DataModelFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 ProjectionFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 CriteriaFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 ArgsFieldNumber = 11 : Public, Static, Literal, HasDefault
    Int32 OrderFieldNumber = 7 : Public, Static, Literal, HasDefault
    Int32 GroupingFieldNumber = 8 : Public, Static, Literal, HasDefault
    Int32 GroupingCriteriaFieldNumber = 9 : Public, Static, Literal, HasDefault
    Int32 LockingFieldNumber = 12 : Public, Static, Literal, HasDefault
    Int32 LockingOptionsFieldNumber = 13 : Public, Static, Literal, HasDefault
    Int32 LimitFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 LimitExprFieldNumber = 14 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Find] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Crud.Collection Collection 'get set' : 
    Mysqlx.Crud.DataModel DataModel 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Crud.Projection] Projection 'get ' : 
    Mysqlx.Expr.Expr Criteria 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Scalar] Args 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Crud.Order] Order 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.Expr] Grouping 'get ' : 
    Mysqlx.Expr.Expr GroupingCriteria 'get set' : 
    RowLock Locking 'get set' : 
    RowLockOptions LockingOptions 'get set' : 
    Mysqlx.Crud.Limit Limit 'get set' : 
    Mysqlx.Crud.LimitExpr LimitExpr 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    set_Collection(Collection): PrivateScope, Public, HideBySig, SpecialName
    get_DataModel(): PrivateScope, Public, HideBySig, SpecialName
    set_DataModel(DataModel): PrivateScope, Public, HideBySig, SpecialName
    get_Projection(): PrivateScope, Public, HideBySig, SpecialName
    get_Criteria(): PrivateScope, Public, HideBySig, SpecialName
    set_Criteria(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Args(): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    get_Grouping(): PrivateScope, Public, HideBySig, SpecialName
    get_GroupingCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupingCriteria(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Locking(): PrivateScope, Public, HideBySig, SpecialName
    set_Locking(RowLock): PrivateScope, Public, HideBySig, SpecialName
    get_LockingOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_LockingOptions(RowLockOptions): PrivateScope, Public, HideBySig, SpecialName
    get_Limit(): PrivateScope, Public, HideBySig, SpecialName
    set_Limit(Limit): PrivateScope, Public, HideBySig, SpecialName
    get_LimitExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_LimitExpr(LimitExpr): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Find): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Find): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Insert: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Insert): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Insert]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Insert]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Insert]
  Fields:
    Int32 CollectionFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 DataModelFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 ProjectionFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 RowFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 ArgsFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 UpsertFieldNumber = 6 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Insert] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Crud.Collection Collection 'get set' : 
    Mysqlx.Crud.DataModel DataModel 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Crud.Column] Projection 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Crud.Insert+Types+TypedRow] Row 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Scalar] Args 'get ' : 
    Boolean Upsert 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    set_Collection(Collection): PrivateScope, Public, HideBySig, SpecialName
    get_DataModel(): PrivateScope, Public, HideBySig, SpecialName
    set_DataModel(DataModel): PrivateScope, Public, HideBySig, SpecialName
    get_Projection(): PrivateScope, Public, HideBySig, SpecialName
    get_Row(): PrivateScope, Public, HideBySig, SpecialName
    get_Args(): PrivateScope, Public, HideBySig, SpecialName
    get_Upsert(): PrivateScope, Public, HideBySig, SpecialName
    set_Upsert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Insert): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Insert): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Update: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Update): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Update]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Update]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Update]
  Fields:
    Int32 CollectionFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 DataModelFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 CriteriaFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 ArgsFieldNumber = 8 : Public, Static, Literal, HasDefault
    Int32 OrderFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 OperationFieldNumber = 7 : Public, Static, Literal, HasDefault
    Int32 LimitFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 LimitExprFieldNumber = 9 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Update] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Crud.Collection Collection 'get set' : 
    Mysqlx.Crud.DataModel DataModel 'get set' : 
    Mysqlx.Expr.Expr Criteria 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Scalar] Args 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Crud.Order] Order 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Crud.UpdateOperation] Operation 'get ' : 
    Mysqlx.Crud.Limit Limit 'get set' : 
    Mysqlx.Crud.LimitExpr LimitExpr 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    set_Collection(Collection): PrivateScope, Public, HideBySig, SpecialName
    get_DataModel(): PrivateScope, Public, HideBySig, SpecialName
    set_DataModel(DataModel): PrivateScope, Public, HideBySig, SpecialName
    get_Criteria(): PrivateScope, Public, HideBySig, SpecialName
    set_Criteria(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Args(): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    get_Operation(): PrivateScope, Public, HideBySig, SpecialName
    get_Limit(): PrivateScope, Public, HideBySig, SpecialName
    set_Limit(Limit): PrivateScope, Public, HideBySig, SpecialName
    get_LimitExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_LimitExpr(LimitExpr): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Update): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Update): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.Delete: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.Delete): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Delete]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Delete]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Delete]
  Fields:
    Int32 CollectionFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 DataModelFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 CriteriaFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 ArgsFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 OrderFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 LimitFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 LimitExprFieldNumber = 7 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Delete] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Crud.Collection Collection 'get set' : 
    Mysqlx.Crud.DataModel DataModel 'get set' : 
    Mysqlx.Expr.Expr Criteria 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Datatypes.Scalar] Args 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Crud.Order] Order 'get ' : 
    Mysqlx.Crud.Limit Limit 'get set' : 
    Mysqlx.Crud.LimitExpr LimitExpr 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    set_Collection(Collection): PrivateScope, Public, HideBySig, SpecialName
    get_DataModel(): PrivateScope, Public, HideBySig, SpecialName
    set_DataModel(DataModel): PrivateScope, Public, HideBySig, SpecialName
    get_Criteria(): PrivateScope, Public, HideBySig, SpecialName
    set_Criteria(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Args(): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    get_Limit(): PrivateScope, Public, HideBySig, SpecialName
    set_Limit(Limit): PrivateScope, Public, HideBySig, SpecialName
    get_LimitExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_LimitExpr(LimitExpr): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Delete): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Delete): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.CreateView: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.CreateView): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.CreateView]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.CreateView]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.CreateView]
  Fields:
    Int32 CollectionFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 DefinerFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 AlgorithmFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 SecurityFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 CheckFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 ColumnFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 StmtFieldNumber = 7 : Public, Static, Literal, HasDefault
    Int32 ReplaceExistingFieldNumber = 8 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.CreateView] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Crud.Collection Collection 'get set' : 
    System.String Definer 'get set' : 
    Mysqlx.Crud.ViewAlgorithm Algorithm 'get set' : 
    Mysqlx.Crud.ViewSqlSecurity Security 'get set' : 
    Mysqlx.Crud.ViewCheckOption Check 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[System.String] Column 'get ' : 
    Mysqlx.Crud.Find Stmt 'get set' : 
    Boolean ReplaceExisting 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    set_Collection(Collection): PrivateScope, Public, HideBySig, SpecialName
    get_Definer(): PrivateScope, Public, HideBySig, SpecialName
    set_Definer(String): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_Algorithm(ViewAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_Security(): PrivateScope, Public, HideBySig, SpecialName
    set_Security(ViewSqlSecurity): PrivateScope, Public, HideBySig, SpecialName
    get_Check(): PrivateScope, Public, HideBySig, SpecialName
    set_Check(ViewCheckOption): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    get_Stmt(): PrivateScope, Public, HideBySig, SpecialName
    set_Stmt(Find): PrivateScope, Public, HideBySig, SpecialName
    get_ReplaceExisting(): PrivateScope, Public, HideBySig, SpecialName
    set_ReplaceExisting(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CreateView): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CreateView): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.ModifyView: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.ModifyView): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.ModifyView]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.ModifyView]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.ModifyView]
  Fields:
    Int32 CollectionFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 DefinerFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 AlgorithmFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 SecurityFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 CheckFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 ColumnFieldNumber = 6 : Public, Static, Literal, HasDefault
    Int32 StmtFieldNumber = 7 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.ModifyView] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Crud.Collection Collection 'get set' : 
    System.String Definer 'get set' : 
    Mysqlx.Crud.ViewAlgorithm Algorithm 'get set' : 
    Mysqlx.Crud.ViewSqlSecurity Security 'get set' : 
    Mysqlx.Crud.ViewCheckOption Check 'get set' : 
    Google.Protobuf.Collections.RepeatedField`1[System.String] Column 'get ' : 
    Mysqlx.Crud.Find Stmt 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    set_Collection(Collection): PrivateScope, Public, HideBySig, SpecialName
    get_Definer(): PrivateScope, Public, HideBySig, SpecialName
    set_Definer(String): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_Algorithm(ViewAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_Security(): PrivateScope, Public, HideBySig, SpecialName
    set_Security(ViewSqlSecurity): PrivateScope, Public, HideBySig, SpecialName
    get_Check(): PrivateScope, Public, HideBySig, SpecialName
    set_Check(ViewCheckOption): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    get_Stmt(): PrivateScope, Public, HideBySig, SpecialName
    set_Stmt(Find): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ModifyView): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(ModifyView): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Crud.DropView: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Crud.DropView): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.DropView]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.DropView]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.DropView]
  Fields:
    Int32 CollectionFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 IfExistsFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.DropView] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Crud.Collection Collection 'get set' : 
    Boolean IfExists 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    set_Collection(Collection): PrivateScope, Public, HideBySig, SpecialName
    get_IfExists(): PrivateScope, Public, HideBySig, SpecialName
    set_IfExists(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DropView): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(DropView): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Connection.MysqlxConnectionReflection: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Google.Protobuf.Reflection.FileDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Mysqlx.Connection.Capability: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Connection.Capability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Connection.Capability]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Connection.Capability]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Connection.Capability]
  Fields:
    Int32 NameFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ValueFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Connection.Capability] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Name 'get set' : 
    Mysqlx.Datatypes.Any Value 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Any): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Capability): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Capability): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Connection.Capabilities: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Connection.Capabilities): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Connection.Capabilities]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Connection.Capabilities]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Connection.Capabilities]
  Fields:
    Int32 Capabilities_FieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Connection.Capabilities] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Connection.Capability] Capabilities_ 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Capabilities_(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Capabilities): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Capabilities): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Connection.CapabilitiesGet: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Connection.CapabilitiesGet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Connection.CapabilitiesGet]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Connection.CapabilitiesGet]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Connection.CapabilitiesGet]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Connection.CapabilitiesGet] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CapabilitiesGet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CapabilitiesGet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Connection.CapabilitiesSet: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Connection.CapabilitiesSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Connection.CapabilitiesSet]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Connection.CapabilitiesSet]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Connection.CapabilitiesSet]
  Fields:
    Int32 CapabilitiesFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Connection.CapabilitiesSet] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Mysqlx.Connection.Capabilities Capabilities 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Capabilities(): PrivateScope, Public, HideBySig, SpecialName
    set_Capabilities(Capabilities): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CapabilitiesSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CapabilitiesSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Connection.Close: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Connection.Close): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Connection.Close]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Connection.Close]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Connection.Close]
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Connection.Close] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Close): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Connection.Compression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mysqlx.Connection.Compression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Connection.Compression]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Connection.Compression]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Connection.Compression]
  Fields:
    Int32 UncompressedSizeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ServerMessagesFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 ClientMessagesFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 PayloadFieldNumber = 4 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Connection.Compression] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt64 UncompressedSize 'get set' : 
    Type ServerMessages 'get set' : 
    Type ClientMessages 'get set' : 
    Google.Protobuf.ByteString Payload 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_UncompressedSize(): PrivateScope, Public, HideBySig, SpecialName
    set_UncompressedSize(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_ServerMessages(): PrivateScope, Public, HideBySig, SpecialName
    set_ServerMessages(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ClientMessages(): PrivateScope, Public, HideBySig, SpecialName
    set_ClientMessages(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Payload(): PrivateScope, Public, HideBySig, SpecialName
    set_Payload(ByteString): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Compression): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Compression): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySqlX.XDevAPI.BaseSession: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.String, MySqlX.XDevAPI.Client): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, MySqlX.XDevAPI.Client): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySqlX.Sessions.InternalSession, MySqlX.XDevAPI.Client): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    MySqlX.Sessions.QueueTaskScheduler _scheduler : Assembly
  Properties:
    MySqlX.Sessions.InternalSession InternalSession 'get ' : 
    MySqlX.Sessions.XInternalSession XSession 'get ' : 
    System.DateTime IdleSince 'get set' : 
    MySql.Data.Common.DBVersion Version 'get ' : 
    Int32 ThreadId 'get ' : 
    Boolean SupportsPreparedStatements 'get set' : 
    MySqlX.XDevAPI.MySqlXConnectionStringBuilder Settings 'get set' : 
    MySqlX.XDevAPI.Schema Schema 'get set' : 
    MySqlX.XDevAPI.Schema DefaultSchema 'get set' : 
    System.String Uri 'get ' : 
  Methods:
    get_InternalSession(): PrivateScope, Assembly, HideBySig, SpecialName
    get_XSession(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IdleSince(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IdleSince(DateTime): PrivateScope, Assembly, HideBySig, SpecialName
    get_Version(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ThreadId(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsPreparedStatements(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SupportsPreparedStatements(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultSchema(): PrivateScope, Public, HideBySig, SpecialName
    get_Uri(): PrivateScope, Public, HideBySig, SpecialName
    DropSchema(String): PrivateScope, Public, HideBySig
    CreateSchema(String): PrivateScope, Public, HideBySig
    GetSchema(String): PrivateScope, Public, HideBySig
    GetSchemas(): PrivateScope, Public, HideBySig
    StartTransaction(): PrivateScope, Public, HideBySig
    Commit(): PrivateScope, Public, HideBySig
    Rollback(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    CloseFully(): PrivateScope, Assembly, HideBySig
    Reset(): PrivateScope, Assembly, HideBySig
    SetSavepoint(): PrivateScope, Public, HideBySig
    SetSavepoint(String): PrivateScope, Public, HideBySig
    ReleaseSavepoint(String): PrivateScope, Public, HideBySig
    RollbackTo(String): PrivateScope, Public, HideBySig
    IsUnixSocket(String): PrivateScope, Assembly, Static, HideBySig
    NormalizeUnixSocket(String): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MySqlX.XDevAPI.SessionState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.XDevAPI.SessionState Closed = 0 : Public, Static, Literal, HasDefault
    MySqlX.XDevAPI.SessionState Open = 1 : Public, Static, Literal, HasDefault
    MySqlX.XDevAPI.SessionState Connecting = 2 : Public, Static, Literal, HasDefault
    MySqlX.XDevAPI.SessionState Executing = 4 : Public, Static, Literal, HasDefault
Class MySqlX.XDevAPI.Client: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 DEMOTED_TIMEOUT = 120000 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Collections.Concurrent.ConcurrentQueue`1[MySql.Data.Failover.FailoverServer] DemotedHosts 'get set' : 
    System.Collections.Generic.List`1[MySql.Data.Failover.FailoverServer] Hosts 'get set' : 
    System.Threading.Timer DemotedServersTimer 'get set' : 
  Methods:
    get_DemotedHosts(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DemotedHosts(ConcurrentQueue`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_Hosts(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Hosts(List`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_DemotedServersTimer(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DemotedServersTimer(Timer): PrivateScope, Assembly, HideBySig, SpecialName
    ReleaseDemotedHosts(Object): PrivateScope, Assembly, HideBySig
    GetSession(): PrivateScope, Public, HideBySig
    ReleaseSession(BaseSession): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, HideBySig
    ParseConnectionOptions(Object): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySqlX.XDevAPI.Collection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.DatabaseObject
    Void .ctor(MySqlX.XDevAPI.Schema, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(Object[]): PrivateScope, Public, HideBySig
    Remove(String): PrivateScope, Public, HideBySig
    RemoveOne(Object): PrivateScope, Public, HideBySig
    Modify(String): PrivateScope, Public, HideBySig
    ReplaceOne(Object, Object): PrivateScope, Public, HideBySig
    AddOrReplaceOne(Object, Object): PrivateScope, Public, HideBySig
    Count(): PrivateScope, Public, HideBySig
    Find(String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateIndex(String, Object): PrivateScope, Public, HideBySig
    DropIndex(String): PrivateScope, Public, HideBySig
    ExistsInDatabase(): PrivateScope, Public, Virtual, HideBySig
    GetOne(Object): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.DatabaseObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(MySqlX.XDevAPI.Schema, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySqlX.XDevAPI.BaseSession Session 'get ' : 
    MySqlX.XDevAPI.Schema Schema 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Session(): PrivateScope, Public, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Schema): PrivateScope, Assembly, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    ExistsInDatabase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MySqlX.XDevAPI.DbDoc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Object] values : Assembly
  Properties:
    System.Object Item [System.String] 'get ' : 
    System.Object Id 'get set' : 
    Boolean HasId 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(Object): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasId(): PrivateScope, Public, HideBySig, SpecialName
    SetValue(String, Object): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.Collection`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :MySqlX.XDevAPI.Collection
    Void .ctor(MySqlX.XDevAPI.Schema, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(T): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Iterator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Open(String): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.MySqlExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String value : Public
Class MySqlX.XDevAPI.MySQLX: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetSession(String): PrivateScope, Public, Static, HideBySig
    GetSession(Object): PrivateScope, Public, Static, HideBySig
    GetClient(String, String): PrivateScope, Public, Static, HideBySig
    GetClient(String, Object): PrivateScope, Public, Static, HideBySig
    GetClient(Object, String): PrivateScope, Public, Static, HideBySig
    GetClient(Object, Object): PrivateScope, Public, Static, HideBySig
Class MySqlX.XDevAPI.MySqlXConnectionStringBuilder: AutoLayout, AnsiClass, Class, Public, Sealed
  :MySql.Data.MySqlClient.MySqlBaseConnectionStringBuilder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySql.Data.common.MySqlConnectionStringOptionCollection Options : Assembly, Static, InitOnly
  Properties:
    UInt32 ConnectTimeout 'get set' : 
    System.String ConnectionAttributes 'get set' : 
    MySql.Data.MySqlClient.MySqlAuthenticationMode Auth 'get set' : 
    System.String SslCrl 'get set' : 
    MySql.Data.MySqlClient.CompressionType Compression 'get set' : 
    System.Object Item [System.String] 'get set' : 
  Methods:
    get_ConnectTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectTimeout(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionAttributes(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionAttributes(String): PrivateScope, Public, HideBySig, SpecialName
    get_Auth(): PrivateScope, Public, HideBySig, SpecialName
    set_Auth(MySqlAuthenticationMode): PrivateScope, Public, HideBySig, SpecialName
    get_SslCrl(): PrivateScope, Public, HideBySig, SpecialName
    set_SslCrl(String): PrivateScope, Public, HideBySig, SpecialName
    get_Compression(): PrivateScope, Public, HideBySig, SpecialName
    set_Compression(CompressionType): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(String, Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig
    ContainsKey(String): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetOption(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetInternalValue(String, Object): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Remove(String): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.Schema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.DatabaseObject
    Void .ctor(MySqlX.XDevAPI.BaseSession, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySqlX.XDevAPI.BaseSession Session 'get set' : 
  Methods:
    get_Session(): PrivateScope, Public, HideBySig, SpecialName
    GetCollections(): PrivateScope, Public, HideBySig
    GetTables(): PrivateScope, Public, HideBySig
    GetCollection(String, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetCollection(String): PrivateScope, Public, HideBySig
    GetCollectionAsTable(String): PrivateScope, Public, HideBySig
    GetTable(String): PrivateScope, Public, HideBySig
    CreateCollection(String, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateCollection(String, CreateCollectionOptions): PrivateScope, Public, HideBySig
    ModifyCollection(String, Nullable`1): PrivateScope, Public, HideBySig
    DropCollection(String): PrivateScope, Public, HideBySig
    ExistsInDatabase(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.Session: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.BaseSession
    Void .ctor(System.String, MySqlX.XDevAPI.Client): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, MySqlX.XDevAPI.Client): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySqlX.Sessions.InternalSession, MySqlX.XDevAPI.Client): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SQL(String): PrivateScope, Public, HideBySig
    SetCurrentSchema(String): PrivateScope, Public, HideBySig
    GetCurrentSchema(): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Relational.Column: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySqlX.Protocol.ValueDecoder _decoder : Assembly
    UInt64 _collationNumber : Assembly
  Properties:
    System.String ColumnName 'get set' : 
    System.String ColumnLabel 'get set' : 
    System.String TableName 'get set' : 
    System.String TableLabel 'get set' : 
    System.String SchemaName 'get set' : 
    System.String DatabaseName 'get set' : 
    System.String CollationName 'get set' : 
    System.String CharacterSetName 'get set' : 
    UInt32 Length 'get set' : 
    UInt32 FractionalDigits 'get set' : 
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Type 'get set' : 
    System.Type ClrType 'get set' : 
    Boolean IsNumberSigned 'get set' : 
    Boolean IsPadded 'get set' : 
  Methods:
    get_ColumnName(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ColumnLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnLabel(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_TableName(): PrivateScope, Public, HideBySig, SpecialName
    set_TableName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_TableLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_TableLabel(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_SchemaName(): PrivateScope, Public, HideBySig, SpecialName
    set_SchemaName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_DatabaseName(): PrivateScope, Public, HideBySig, SpecialName
    set_DatabaseName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_CollationName(): PrivateScope, Public, HideBySig, SpecialName
    set_CollationName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_CharacterSetName(): PrivateScope, Public, HideBySig, SpecialName
    set_CharacterSetName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_FractionalDigits(): PrivateScope, Public, HideBySig, SpecialName
    set_FractionalDigits(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(ColumnType): PrivateScope, Assembly, HideBySig, SpecialName
    get_ClrType(): PrivateScope, Public, HideBySig, SpecialName
    set_ClrType(Type): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsNumberSigned(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNumberSigned(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsPadded(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPadded(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
Class MySqlX.XDevAPI.Relational.InternalRowResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.BufferingResult`1[MySqlX.XDevAPI.Relational.Row]
    Void .ctor(MySqlX.Sessions.InternalSession): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[MySqlX.XDevAPI.Relational.Column] Columns 'get ' : 
    Int32 ColumnCount 'get ' : 
    System.Collections.Generic.List`1[System.String] ColumnNames 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[MySqlX.XDevAPI.Relational.Row] Rows 'get ' : 
    System.Object Item [Int32] 'get ' : 
  Methods:
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnNames(): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    IndexOf(String): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Relational.Row: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.Dictionary`2[System.String,System.Int32], System.Object[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Item [Int32] 'get ' : 
    System.Object Item [System.String] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetString(String): PrivateScope, Public, HideBySig
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
Class MySqlX.XDevAPI.Relational.RowResult: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :MySqlX.XDevAPI.Relational.InternalRowResult
    Void .ctor(MySqlX.Sessions.InternalSession): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class MySqlX.XDevAPI.Relational.SqlResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Relational.InternalRowResult
    Void .ctor(MySqlX.Sessions.InternalSession): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasData 'get ' : 
  Methods:
    get_HasData(): PrivateScope, Public, HideBySig, SpecialName
    NextResult(): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Relational.SqlStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.BaseStatement`1[MySqlX.XDevAPI.Relational.SqlResult]
    Void .ctor(MySqlX.XDevAPI.Session, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SQL 'get set' : 
  Methods:
    get_SQL(): PrivateScope, Public, HideBySig, SpecialName
    Execute(): PrivateScope, Public, Virtual, HideBySig
    Bind(Object[]): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Relational.Table: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.DatabaseObject
    Void .ctor(MySqlX.XDevAPI.Schema, System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySqlX.XDevAPI.Schema, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsView 'get set' : 
  Methods:
    get_IsView(): PrivateScope, Public, HideBySig, SpecialName
    set_IsView(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Select(String[]): PrivateScope, Public, HideBySig
    Insert(String[]): PrivateScope, Public, HideBySig
    Update(): PrivateScope, Public, HideBySig
    Delete(): PrivateScope, Public, HideBySig
    Count(): PrivateScope, Public, HideBySig
    ExistsInDatabase(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.Relational.TableDeleteStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.FilterableStatement`3[MySqlX.XDevAPI.Relational.TableDeleteStatement,MySqlX.XDevAPI.Relational.Table,MySqlX.XDevAPI.Common.Result]
    Void .ctor(MySqlX.XDevAPI.Relational.Table, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    OrderBy(String[]): PrivateScope, Public, HideBySig
    Execute(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.Relational.TableInsertStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.TargetedBaseStatement`2[MySqlX.XDevAPI.Relational.Table,MySqlX.XDevAPI.Common.Result]
    Void .ctor(MySqlX.XDevAPI.Relational.Table, System.String[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String[] fields : Assembly
    System.Collections.Generic.List`1[System.Object[]] values : Assembly
    System.Object[] parameters : Assembly
  Methods:
    Execute(): PrivateScope, Public, Virtual, HideBySig
    Values(Object[]): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Relational.TableSelectStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.FilterableStatement`3[MySqlX.XDevAPI.Relational.TableSelectStatement,MySqlX.XDevAPI.Relational.Table,MySqlX.XDevAPI.Relational.RowResult]
    Void .ctor(MySqlX.XDevAPI.Relational.Table, System.String[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySqlX.XDevAPI.CRUD.FindParams findParams : Assembly
  Methods:
    Execute(): PrivateScope, Public, Virtual, HideBySig
    LockShared(LockContention(Optional, HasDefault)): PrivateScope, Public, HideBySig
    LockExclusive(LockContention(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GroupBy(String[]): PrivateScope, Public, HideBySig
    Having(String): PrivateScope, Public, HideBySig
    OrderBy(String[]): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Relational.TableUpdateStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.FilterableStatement`3[MySqlX.XDevAPI.Relational.TableUpdateStatement,MySqlX.XDevAPI.Relational.Table,MySqlX.XDevAPI.Common.Result]
    Void .ctor(MySqlX.XDevAPI.Relational.Table): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[MySqlX.XDevAPI.CRUD.UpdateSpec] updates : Assembly
  Methods:
    Execute(): PrivateScope, Public, Virtual, HideBySig
    Set(String, Object): PrivateScope, Public, HideBySig
    OrderBy(String[]): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.CRUD.AddStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.CRUD.CrudStatement`1[MySqlX.XDevAPI.Common.Result]
    Void .ctor(MySqlX.XDevAPI.Collection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean upsert : Assembly
  Methods:
    Add(Object[]): PrivateScope, Public, HideBySig
    Execute(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.CRUD.CreateCollectionIndexStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.CRUD.CrudStatement`1[MySqlX.XDevAPI.Common.Result]
    Void .ctor(MySqlX.XDevAPI.Collection, System.String, MySqlX.XDevAPI.DbDoc): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySqlX.XDevAPI.CRUD.CreateIndexParams createIndexParams : Assembly
  Methods:
    Execute(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.CRUD.CreateIndexParams: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, MySqlX.XDevAPI.DbDoc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String IndexName 'get ' : 
    System.String Type 'get ' : 
    System.Collections.Generic.List`1[MySqlX.XDevAPI.CRUD.CreateIndexParams+IndexField] Fields 'get ' : 
  Methods:
    get_IndexName(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Fields(): PrivateScope, Public, HideBySig, SpecialName
Class MySqlX.XDevAPI.CRUD.CrudStatement`1[TResult]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TResult, MySqlX.XDevAPI.Common.Result
  :MySqlX.XDevAPI.Common.TargetedBaseStatement`2[MySqlX.XDevAPI.Collection,TResult]
    Void .ctor(MySqlX.XDevAPI.Collection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class MySqlX.XDevAPI.CRUD.DocResult: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :MySqlX.XDevAPI.Common.BufferingResult`1[MySqlX.XDevAPI.DbDoc]
    Void .ctor(MySqlX.Sessions.InternalSession): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class MySqlX.XDevAPI.CRUD.FindParams: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.XDevAPI.Common.FilterParams
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String[] GroupBy : Public
    System.String GroupByCritieria : Public
    System.String[] Projection : Public
    MySqlX.Protocol.X.RowLock Locking : Public
    MySql.Data.MySqlClient.LockContention LockingOption : Public
Class MySqlX.XDevAPI.CRUD.FindStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.FilterableStatement`3[MySqlX.XDevAPI.CRUD.FindStatement,MySqlX.XDevAPI.Collection,MySqlX.XDevAPI.CRUD.DocResult]
    Void .ctor(MySqlX.XDevAPI.Collection, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySqlX.XDevAPI.CRUD.FindParams findParams : Assembly
  Methods:
    Fields(String[]): PrivateScope, Public, HideBySig
    Execute(): PrivateScope, Public, Virtual, HideBySig
    LockShared(LockContention(Optional, HasDefault)): PrivateScope, Public, HideBySig
    LockExclusive(LockContention(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GroupBy(String[]): PrivateScope, Public, HideBySig
    Having(String): PrivateScope, Public, HideBySig
    Sort(String[]): PrivateScope, Public, HideBySig
    Where(String): PrivateScope, Public, HideBySig (Obsolete)
Class MySqlX.XDevAPI.CRUD.ModifyStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.FilterableStatement`3[MySqlX.XDevAPI.CRUD.ModifyStatement,MySqlX.XDevAPI.Collection,MySqlX.XDevAPI.Common.Result]
    Void .ctor(MySqlX.XDevAPI.Collection, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[MySqlX.XDevAPI.CRUD.UpdateSpec] Updates : Assembly
  Methods:
    Set(String, Object): PrivateScope, Public, HideBySig
    Change(String, Object): PrivateScope, Public, HideBySig
    Unset(String[]): PrivateScope, Public, HideBySig
    Patch(Object): PrivateScope, Public, HideBySig
    ArrayInsert(String, Object): PrivateScope, Public, HideBySig
    ArrayAppend(String, Object): PrivateScope, Public, HideBySig
    Sort(String[]): PrivateScope, Public, HideBySig
    Where(String): PrivateScope, Public, HideBySig (Obsolete)
    Execute(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.CRUD.RemoveStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.FilterableStatement`3[MySqlX.XDevAPI.CRUD.RemoveStatement,MySqlX.XDevAPI.Collection,MySqlX.XDevAPI.Common.Result]
    Void .ctor(MySqlX.XDevAPI.Collection, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Sort(String[]): PrivateScope, Public, HideBySig
    Where(String): PrivateScope, Public, HideBySig (Obsolete)
    Execute(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.CRUD.UpdateSpec: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UpdateType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Path 'get set' : 
    UpdateType Type 'get set' : 
    System.Object Value 'get set' : 
    Boolean HasValue 'get ' : 
  Methods:
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_HasValue(): PrivateScope, Public, HideBySig, SpecialName
    GetValue(UpdateType): PrivateScope, Public, HideBySig
    GetSource(Boolean): PrivateScope, Public, HideBySig
    SetValue(Object): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Common.BaseResult: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(MySqlX.Sessions.InternalSession): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt64 _recordsAffected : Assembly
    UInt64 _affectedItemsCount : Assembly
    UInt64 _autoIncrementValue : Assembly
    MySqlX.Sessions.InternalSession _session : Assembly
    Boolean _hasData : Assembly
    Boolean _hasMoreResults : Assembly
    System.Collections.Generic.List`1[System.String] _documentIds : Assembly
  Properties:
    UInt64 AffectedItemsCount 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[MySqlX.XDevAPI.Common.WarningInfo] Warnings 'get ' : 
    Int32 WarningsCount 'get ' : 
  Methods:
    get_AffectedItemsCount(): PrivateScope, Public, HideBySig, SpecialName
    AddWarning(WarningInfo): PrivateScope, Assembly, HideBySig
    get_Warnings(): PrivateScope, Public, HideBySig, SpecialName
    get_WarningsCount(): PrivateScope, Public, HideBySig, SpecialName
Class MySqlX.XDevAPI.Common.BaseStatement`1[TResult]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TResult, MySqlX.XDevAPI.Common.BaseResult
    Void .ctor(MySqlX.XDevAPI.BaseSession): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean _hasChanged : Assembly
    Boolean _isPrepared : Assembly
  Properties:
    MySqlX.XDevAPI.BaseSession Session 'get set' : 
  Methods:
    get_Session(): PrivateScope, Public, HideBySig, SpecialName
    Execute(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ExecuteAsync(): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Common.BufferingResult`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  :MySqlX.XDevAPI.Common.BaseResult
    Void .ctor(MySqlX.Sessions.InternalSession): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Fields:
    System.Collections.Generic.List`1[MySqlX.XDevAPI.Relational.Column] _columns : Assembly
  Properties:
    Int32 PageSize 'get set' : 
    T Current  'get ' : 
  Methods:
    get_PageSize(): PrivateScope, Public, HideBySig, SpecialName
    FetchAll(): PrivateScope, Public, HideBySig
    Dump(): PrivateScope, Assembly, HideBySig
    FetchOne(): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySqlX.XDevAPI.Common.ErrorInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 Code : Public
    System.String SqlState : Public
    System.String Message : Public
Class MySqlX.XDevAPI.Common.FilterableStatement`3[T,TTarget,TResult]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, MySqlX.XDevAPI.Common.FilterableStatement`3[T,TTarget,TResult]
  Type parameter: TTarget, MySqlX.XDevAPI.DatabaseObject
  Type parameter: TResult, MySqlX.XDevAPI.Common.BaseResult
  :MySqlX.XDevAPI.Common.TargetedBaseStatement`2[TTarget,TResult]
    Void .ctor(TTarget, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySqlX.XDevAPI.Common.FilterParams FilterData 'get ' : 
  Methods:
    get_FilterData(): PrivateScope, Assembly, HideBySig, SpecialName
    Where(String): PrivateScope, Public, HideBySig
    Limit(Int64): PrivateScope, Public, HideBySig
    Offset(Int64): PrivateScope, Public, HideBySig
    Bind(String, Object): PrivateScope, Public, HideBySig
    Bind(DbDoc): PrivateScope, Public, HideBySig
    Bind(String): PrivateScope, Public, HideBySig
    Bind(Object): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySqlX.XDevAPI.Common.FilterParams: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 Limit : Public
    Int64 Offset : Public
    System.String Condition : Public
    System.Collections.Generic.Dictionary`2[System.String,System.Object] Parameters : Public
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] placeholderNameToPosition : Public
    Boolean IsRelational : Public
    System.String[] OrderBy : Public
    Boolean hadLimit : Public
    Boolean hadOffset : Public
  Properties:
    Boolean HasLimit 'get ' : 
  Methods:
    get_HasLimit(): PrivateScope, Public, HideBySig, SpecialName
    GetOrderByExpressions(Boolean): PrivateScope, Public, HideBySig
    GetConditionExpression(Boolean): PrivateScope, Public, HideBySig
    GetArgsExpression(Dictionary`2): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Class MySqlX.XDevAPI.Common.QueryStatement: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySqlX.XDevAPI.CRUD.FindStatement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySqlX.XDevAPI.Relational.TableSelectStatement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String schema : Assembly
    System.String collection : Assembly
    Boolean isRelational : Assembly
    MySqlX.XDevAPI.Common.FilterParams filter : Assembly
    MySqlX.XDevAPI.CRUD.FindParams findParams : Assembly
    MySqlX.XDevAPI.Relational.TableSelectStatement selectStatement : Assembly
    MySqlX.XDevAPI.CRUD.FindStatement findStatement : Assembly
Class MySqlX.XDevAPI.Common.Result: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySqlX.XDevAPI.Common.BaseResult
    Void .ctor(MySqlX.Sessions.InternalSession): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt64 AutoIncrementValue 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] GeneratedIds 'get ' : 
  Methods:
    get_AutoIncrementValue(): PrivateScope, Public, HideBySig, SpecialName
    get_GeneratedIds(): PrivateScope, Public, HideBySig, SpecialName
Class MySqlX.XDevAPI.Common.TargetedBaseStatement`2[TTarget,TResult]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TTarget, MySqlX.XDevAPI.DatabaseObject
  Type parameter: TResult, MySqlX.XDevAPI.Common.BaseResult
  :MySqlX.XDevAPI.Common.BaseStatement`1[TResult]
    Void .ctor(TTarget): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TTarget Target 'get set' : 
  Methods:
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
Class MySqlX.XDevAPI.Common.WarningInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 Code : Public
    System.String Message : Public
    UInt32 Level : Public
Class MySqlX.Sessions.InternalSession: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(MySqlX.XDevAPI.MySqlXConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    MySqlX.XDevAPI.Common.BaseResult ActiveResult : Assembly
  Properties:
    MySqlX.XDevAPI.SessionState SessionState 'get set' : 
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetProtocol(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_SessionState(): PrivateScope, Public, HideBySig, SpecialName
    GetSession(MySqlXConnectionStringBuilder): PrivateScope, Public, Static, HideBySig
    ExecuteSqlNonQuery(String, Object[]): PrivateScope, Public, HideBySig
    GetSqlRowResult(String): PrivateScope, Public, HideBySig
    GetSQLResult(String, Object[]): PrivateScope, Public, HideBySig
    ExecuteQueryAsScalar(String): PrivateScope, Public, HideBySig
    GetServerVersion(): PrivateScope, Assembly, HideBySig
    GetThreadId(): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySqlX.Sessions.QueueTaskScheduler: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Threading.Tasks.TaskScheduler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MySqlX.Sessions.XInternalSession: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Sessions.InternalSession
    Void .ctor(MySqlX.XDevAPI.MySqlXConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean _supportsPreparedStatements : Assembly
    System.Nullable`1[System.Boolean] sessionResetNoReauthentication : Assembly
  Methods:
    Authenticate(): PrivateScope, Assembly, HideBySig
    GetProtocol(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Close(): PrivateScope, Public, Virtual, HideBySig
    CreateCollection(String, String): PrivateScope, Public, HideBySig
    CreateCollection(String, String, CreateCollectionOptions): PrivateScope, Public, HideBySig
    ModifyCollection(String, String, Nullable`1): PrivateScope, Public, HideBySig
    DropCollection(String, String): PrivateScope, Public, HideBySig
    CreateCollectionIndex(CreateCollectionIndexStatement): PrivateScope, Public, HideBySig
    DropCollectionIndex(String, String, String): PrivateScope, Public, HideBySig
    TableCount(Schema, String, String): PrivateScope, Public, HideBySig
    TableExists(Schema, String): PrivateScope, Public, HideBySig
    GetObjectList(Schema, String[]): PrivateScope, Public, HideBySig
    GetObjectType(Schema, String): PrivateScope, Public, HideBySig
    GetRowResult(String, KeyValuePair`2[]): PrivateScope, Public, HideBySig
    Insert(Collection, DbDoc[], List`1, Boolean): PrivateScope, Public, HideBySig
    DeleteDocs(RemoveStatement): PrivateScope, Public, HideBySig
    DeleteRows(TableDeleteStatement): PrivateScope, Public, HideBySig
    ModifyDocs(ModifyStatement): PrivateScope, Public, HideBySig
    UpdateRows(TableUpdateStatement): PrivateScope, Public, HideBySig
    FindDocs(FindStatement): PrivateScope, Public, HideBySig
    FindRows(TableSelectStatement): PrivateScope, Public, HideBySig
    InsertRows(TableInsertStatement): PrivateScope, Public, HideBySig
    ExpectDocidGenerated(): PrivateScope, Public, HideBySig
    ResetSession(): PrivateScope, Public, HideBySig
    PrepareStatement(BaseStatement`1): PrivateScope, Public, HideBySig
    ExecutePreparedStatement(Int32, IEnumerable): PrivateScope, Public, HideBySig
    DeallocatePreparedStatement(Int32): PrivateScope, Public, HideBySig
    GetCompressionAlgorithm(Boolean): PrivateScope, Public, HideBySig
Class MySqlX.Serialization.JsonParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Parse(String): PrivateScope, Public, Static, HideBySig
Class MySqlX.RoutingServices.DefaultRoutingService: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.RoutingServices.RoutingServiceBase
    Void .ctor(MySqlX.XDevAPI.MySqlXConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCurrentConnection(ConnectionMode): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.RoutingServices.RoutingServiceBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(MySqlX.XDevAPI.MySqlXConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCurrentConnection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCurrentConnection(ConnectionMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MySqlX.Protocol.ProtocolBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    ReadRow(BaseResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SendSQL(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasData(BaseResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadColumnMetadata(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseResult(BaseResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MySqlX.Protocol.ValueDecoder: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Fields:
    ClrDecoderDelegate ClrValueDecoder : Public
  Properties:
    MySqlX.XDevAPI.Relational.Column Column 'get set' : 
    UInt32 Flags 'get set' : 
    UInt32 ContentType 'get set' : 
  Methods:
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    set_Column(Column): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentType(UInt32): PrivateScope, Public, HideBySig, SpecialName
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MySqlX.Protocol.XProtocol: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ProtocolBase
    Void .ctor(MySqlX.Communication.XPacketReaderWriter, MySqlX.Communication.XPacketReaderWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mysqlx.Connection.Capabilities Capabilities 'get set' : 
  Methods:
    get_Capabilities(): PrivateScope, Public, HideBySig, SpecialName
    SendAuthStart(String, Byte[], Byte[]): PrivateScope, Public, HideBySig
    ReadAuthContinue(): PrivateScope, Public, HideBySig
    SendAuthContinue(Byte[]): PrivateScope, Public, HideBySig
    ReadAuthOk(): PrivateScope, Public, HideBySig
    GetServerCapabilities(): PrivateScope, Public, HideBySig
    SetCapabilities(Dictionary`2): PrivateScope, Public, HideBySig
    SendSQL(String, Object[]): PrivateScope, Public, Virtual, HideBySig
    HasData(BaseResult): PrivateScope, Public, Virtual, HideBySig
    SendSessionClose(): PrivateScope, Public, HideBySig
    SendConnectionClose(): PrivateScope, Public, HideBySig
    CreateExecuteSQLStatement(String, Object[]): PrivateScope, Assembly, HideBySig
    SendExecuteSQLStatement(String, Object[]): PrivateScope, Public, HideBySig
    SendExecuteStatement(String, String, KeyValuePair`2[]): PrivateScope, Public, HideBySig
    SendExecuteStatementOptions(String, String, KeyValuePair`2[]): PrivateScope, Public, HideBySig
    SendCreateCollectionIndexStatement(String, String, KeyValuePair`2[]): PrivateScope, Public, HideBySig
    ReadRow(BaseResult): PrivateScope, Public, Virtual, HideBySig
    CloseResult(BaseResult): PrivateScope, Public, Virtual, HideBySig
    LoadColumnMetadata(): PrivateScope, Public, Virtual, HideBySig
    CreateInsertMessage(String, Boolean, String, Object[], String[], Boolean): PrivateScope, Assembly, HideBySig
    SendInsert(String, Boolean, String, Object[], String[], Boolean): PrivateScope, Public, HideBySig
    CreateDeleteMessage(String, String, Boolean, FilterParams): PrivateScope, Assembly, HideBySig
    SendDelete(String, String, Boolean, FilterParams): PrivateScope, Public, HideBySig
    CreateUpdateMessage(String, String, Boolean, FilterParams, List`1): PrivateScope, Assembly, HideBySig
    SendUpdate(String, String, Boolean, FilterParams, List`1): PrivateScope, Public, HideBySig
    CreateFindMessage(String, String, Boolean, FilterParams, FindParams): PrivateScope, Assembly, HideBySig
    SendFind(String, String, Boolean, FilterParams, FindParams): PrivateScope, Public, HideBySig
    SendExpectOpen(Key, Object(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SendResetSession(Boolean): PrivateScope, Public, HideBySig
    ReadOkClose(): PrivateScope, Assembly, HideBySig
    ReadOk(): PrivateScope, Assembly, HideBySig
    SetXPackets(XPacketReaderWriter, XPacketReaderWriter): PrivateScope, Assembly, HideBySig
    SendPrepareStatement(UInt32, PreparedStatementType, String, String, Boolean, FilterParams, FindParams, List`1(Optional, HasDefault), Object[](Optional, HasDefault), String[](Optional, HasDefault), Boolean(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SendExecutePreparedStatement(UInt32, IEnumerable): PrivateScope, Public, HideBySig
    AddArgs(Action`1, IEnumerable): PrivateScope, Public, HideBySig
    SendDeallocatePreparedStatement(UInt32): PrivateScope, Public, HideBySig
Class MySqlX.Protocol.X.BitDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.Protocol.X.ByteDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.Protocol.X.DecimalDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
Struct MySqlX.Protocol.X.NoticeType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.Protocol.X.NoticeType Warning = 1 : Public, Static, Literal, HasDefault
    MySqlX.Protocol.X.NoticeType SessionVariableChanged = 2 : Public, Static, Literal, HasDefault
    MySqlX.Protocol.X.NoticeType SessionStateChanged = 3 : Public, Static, Literal, HasDefault
Struct MySqlX.Protocol.X.RowLock: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.Protocol.X.RowLock SharedLock = 1 : Public, Static, Literal, HasDefault
    MySqlX.Protocol.X.RowLock ExclusiveLock = 2 : Public, Static, Literal, HasDefault
Class MySqlX.Protocol.X.XpluginStatementCommand: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String XPLUGIN_STMT_CREATE_COLLECTION : Public, Static, InitOnly
    System.String XPLUGIN_STMT_CREATE_COLLECTION_INDEX : Public, Static, InitOnly
    System.String XPLUGIN_STMT_DROP_COLLECTION : Public, Static, InitOnly
    System.String XPLUGIN_STMT_MODIFY_COLLECTION : Public, Static, InitOnly
    System.String XPLUGIN_STMT_DROP_COLLECTION_INDEX : Public, Static, InitOnly
    System.String XPLUGIN_STMT_PING : Public, Static, InitOnly
    System.String XPLUGIN_STMT_LIST_OBJECTS : Public, Static, InitOnly
    System.String XPLUGIN_STMT_ENABLE_NOTICES : Public, Static, InitOnly
    System.String XPLUGIN_STMT_DISABLE_NOTICES : Public, Static, InitOnly
    System.String XPLUGIN_STMT_LIST_NOTICES : Public, Static, InitOnly
Class MySqlX.Protocol.X.ExprParser: NotPublic
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[MySqlX.Protocol.X.ExprParser+Token] tokens : Assembly
    Int32 tokenPos : Assembly
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] placeholderNameToPosition : Assembly
    Int32 positionalPlaceholderCount : Assembly
  Methods:
    DocumentPath(): PrivateScope, Assembly, HideBySig
    DocumentField(): PrivateScope, Assembly, HideBySig
    Parse(): PrivateScope, Public, HideBySig
    ParseOrderSpec(): PrivateScope, Assembly, HideBySig
    ParseTableSelectProjection(): PrivateScope, Assembly, HideBySig
    ParseTableInsertField(): PrivateScope, Assembly, HideBySig
    ParseTableUpdateField(): PrivateScope, Assembly, HideBySig
    ParseDocumentProjection(): PrivateScope, Assembly, HideBySig
    ParseExprList(): PrivateScope, Assembly, HideBySig
    GetPositionalPlaceholderCount(): PrivateScope, Public, HideBySig
    GetPlaceholderNameToPositionMap(): PrivateScope, Public, HideBySig
Class MySqlX.Protocol.X.ExprUtil: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BuildLiteralNullScalar(): PrivateScope, Public, Static, HideBySig
    BuildLiteralScalar(Double): PrivateScope, Public, Static, HideBySig
    BuildLiteralScalar(Int64): PrivateScope, Public, Static, HideBySig
    BuildLiteralScalar(UInt64): PrivateScope, Public, Static, HideBySig
    BuildLiteralScalar(String): PrivateScope, Public, Static, HideBySig
    BuildLiteralScalar(Byte[]): PrivateScope, Public, Static, HideBySig
    BuildLiteralScalar(Boolean): PrivateScope, Public, Static, HideBySig
    BuildLiteralExpr(Scalar): PrivateScope, Public, Static, HideBySig
    NullScalar(): PrivateScope, Public, Static, HideBySig
    ScalarOf(Double): PrivateScope, Public, Static, HideBySig
    ScalarOf(Int64): PrivateScope, Public, Static, HideBySig
    ScalarOf(UInt64): PrivateScope, Public, Static, HideBySig
    ScalarOf(String): PrivateScope, Public, Static, HideBySig
    ScalarOf(Byte[]): PrivateScope, Public, Static, HideBySig
    ScalarOf(Boolean): PrivateScope, Public, Static, HideBySig
    BuildAny(String): PrivateScope, Public, Static, HideBySig
    BuildObject(String, Object, Boolean): PrivateScope, Public, Static, HideBySig
    BuildEmptyAny(Type): PrivateScope, Public, Static, HideBySig
    BuildAny(Boolean): PrivateScope, Public, Static, HideBySig
    BuildAny(Object): PrivateScope, Public, Static, HideBySig
    BuildAnyWithoutEvaluationExpression(Object): PrivateScope, Public, Static, HideBySig
    BuildCollection(String, String): PrivateScope, Public, Static, HideBySig
    ArgObjectToScalar(Object, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ArgObjectToExpr(Object, Boolean, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    JoinString(String[]): PrivateScope, Public, Static, HideBySig
    ParseAnonymousObject(Object): PrivateScope, Public, Static, HideBySig
Class MySqlX.Protocol.X.ExprUnparser: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    EscapeLiteral(String): PrivateScope, Public, Static, HideBySig
    QuoteIdentifier(String): PrivateScope, Public, Static, HideBySig
    QuoteJsonKey(String): PrivateScope, Public, Static, HideBySig
    QuoteDocumentPathMember(String): PrivateScope, Public, Static, HideBySig
    ExprToString(Expr): PrivateScope, Public, Static, HideBySig
Class MySqlX.Protocol.X.FloatDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.Protocol.X.IntegerDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
    SByteValueDecoder(Byte[]): PrivateScope, Public, HideBySig
    Int16ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
    Int32ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
    Int64ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
    ByteValueDecoder(Byte[]): PrivateScope, Public, HideBySig
    UInt16ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
    UInt32ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
    UInt64ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
Class MySqlX.Protocol.X.SetDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.Protocol.X.XDateTimeDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
    ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
Class MySqlX.Protocol.X.XTimeDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySqlX.Protocol.ValueDecoder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMetadata(): PrivateScope, Public, Virtual, HideBySig
    ValueDecoder(Byte[]): PrivateScope, Public, HideBySig
Class MySqlX.Protocol.X.XValueDecoderFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetValueDecoder(Column, FieldType): PrivateScope, Public, Static, HideBySig
Struct MySqlX.DataAccess.ConnectionMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.DataAccess.ConnectionMode Offline = 0 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.ConnectionMode ReadOnly = 1 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.ConnectionMode WriteOnly = 2 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.ConnectionMode ReadWrite = 3 : Public, Static, Literal, HasDefault
Struct MySqlX.DataAccess.AuthenticationMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.DataAccess.AuthenticationMode PlainAccess = 0 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.AuthenticationMode MySQL41 = 1 : Public, Static, Literal, HasDefault
Struct MySqlX.DataAccess.OS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.DataAccess.OS Unknown = 0 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.OS Windows = 1 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.OS Linux = 2 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.OS MacOS = 3 : Public, Static, Literal, HasDefault
Struct MySqlX.DataAccess.PreparedStatementType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.DataAccess.PreparedStatementType Find = 0 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.PreparedStatementType Insert = 1 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.PreparedStatementType Update = 2 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.PreparedStatementType Delete = 3 : Public, Static, Literal, HasDefault
    MySqlX.DataAccess.PreparedStatementType SqlStatement = 4 : Public, Static, Literal, HasDefault
Class MySqlX.Data.CollationMap: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCollationName(Int32): PrivateScope, Public, Static, HideBySig
Class MySqlX.Communication.CommunicationPacket: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] Buffer : Public
    Int32 MessageType : Public
    Int32 Length : Public
Struct MySqlX.Communication.ClientMessageId: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.Communication.ClientMessageId CON_CAPABILITIES_GET = 1 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId CON_CAPABILITIES_SET = 2 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId CON_CLOSE = 3 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId SESS_AUTHENTICATE_START = 4 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId SESS_AUTHENTICATE_CONTINUE = 5 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId SESS_RESET = 6 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId SESS_CLOSE = 7 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId SQL_STMT_EXECUTE = 12 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId CRUD_FIND = 17 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId CRUD_INSERT = 18 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId CRUD_UPDATE = 19 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId CRUD_DELETE = 20 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId EXPECT_OPEN = 24 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId EXPECT_CLOSE = 25 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ClientMessageId COMPRESSION = 46 : Public, Static, Literal, HasDefault
Struct MySqlX.Communication.ServerMessageId: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySqlX.Communication.ServerMessageId OK = 0 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId ERROR = 1 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId CONN_CAPABILITIES = 2 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId SESS_AUTHENTICATE_CONTINUE = 3 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId SESS_AUTHENTICATE_OK = 4 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId NOTICE = 11 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId RESULTSET_COLUMN_META_DATA = 12 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId RESULTSET_ROW = 13 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId RESULTSET_FETCH_DONE = 14 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId RESULTSET_FETCH_SUSPENDED = 15 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId RESULTSET_FETCH_DONE_MORE_RESULTSETS = 16 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId SQL_STMT_EXECUTE_OK = 17 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId RESULTSET_FETCH_DONE_MORE_OUT_PARAMS = 18 : Public, Static, Literal, HasDefault
    MySqlX.Communication.ServerMessageId COMPRESSION = 19 : Public, Static, Literal, HasDefault
Class MySqlX.Communication.XPacketReaderWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, MySql.Data.X.Communication.XCompressionController): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.X.Communication.XCompressionController CompressionController 'get set' : 
  Methods:
    get_CompressionController(): PrivateScope, Public, HideBySig, SpecialName
    Write(Int32, IMessage): PrivateScope, Public, HideBySig
    Write(ClientMessageId, IMessage): PrivateScope, Public, HideBySig
    Read(): PrivateScope, Public, HideBySig
Class MySqlX.Common.Tools: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDictionaryFromAnonymous(Object): PrivateScope, Public, Static, HideBySig
    CompareGuids(String, String): PrivateScope, Assembly, Static, HideBySig
    CompareGuids(Guid, Guid): PrivateScope, Assembly, Static, HideBySig
Class MySqlX.Security.ExternalAuthenticationPlugin: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySqlX.XDevAPI.MySqlXConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PluginName 'get ' : 
    System.String AuthName 'get ' : 
  Methods:
    get_PluginName(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthName(): PrivateScope, Public, HideBySig, SpecialName
Class MySqlX.Security.MySQL41AuthenticationPlugin: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.Authentication.MySqlNativePasswordPlugin
    Void .ctor(MySqlX.XDevAPI.MySqlXConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PluginName 'get ' : 
    System.String AuthName 'get ' : 
  Methods:
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuthName(): PrivateScope, Public, HideBySig, SpecialName
    Continue(Byte[]): PrivateScope, Public, HideBySig
Class MySqlX.Security.PlainAuthenticationPlugin: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.Authentication.Sha256AuthenticationPlugin
    Void .ctor(MySqlX.XDevAPI.MySqlXConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PluginName 'get ' : 
    System.String AuthName 'get ' : 
  Methods:
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuthName(): PrivateScope, Public, HideBySig, SpecialName
    GetAuthData(): PrivateScope, Public, HideBySig
Class MySql.Web.Security.Runtime: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsMono 'get ' : 
  Methods:
    get_IsMono(): PrivateScope, Public, Static, HideBySig, SpecialName
Class MySql.Data.Resources: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String AdapterIsNull 'get ' : 
    System.String AdapterSelectIsNull 'get ' : 
    System.String AttemptToAccessBeforeRead 'get ' : 
    System.String AuthenticationFailed 'get ' : 
    System.String AuthenticationMethodNotSupported 'get ' : 
    System.String BadVersionFormat 'get ' : 
    System.String BufferCannotBeNull 'get ' : 
    System.String BufferNotLargeEnough 'get ' : 
    System.String CancelNeeds50 'get ' : 
    System.String CancelNotSupported 'get ' : 
    System.String CanNotDeriveParametersForTextCommands 'get ' : 
    System.String CBMultiTableNotSupported 'get ' : 
    System.String CBNoKeyColumn 'get ' : 
    System.String ChaosNotSupported 'get ' : 
    System.String CommandTextNotInitialized 'get ' : 
    System.String CompressionNotSupported 'get ' : 
    System.String ConnectionAlreadyOpen 'get ' : 
    System.String ConnectionBroken 'get ' : 
    System.String ConnectionMustBeOpen 'get ' : 
    System.String ConnectionNotOpen 'get ' : 
    System.String ConnectionNotSet 'get ' : 
    System.String CouldNotFindColumnName 'get ' : 
    System.String CountCannotBeNegative 'get ' : 
    System.String CSNoSetLength 'get ' : 
    System.String DataNotInSupportedFormat 'get ' : 
    System.String DataReaderOpen 'get ' : 
    System.String DefaultEncodingNotFound 'get ' : 
    System.String DistributedTxnNotSupported 'get ' : 
    System.String DnsSrvInvalidConnOptionMultihost 'get ' : 
    System.String DnsSrvInvalidConnOptionPort 'get ' : 
    System.String DnsSrvInvalidConnOptionUnixSocket 'get ' : 
    System.String DnsSrvNoHostsAvailable 'get ' : 
    System.String DuplicatedConnectionOption 'get ' : 
    System.String DuplicatedSslConnectionOption 'get ' : 
    System.String EncodingError 'get ' : 
    System.String ErrorCreatingSocket 'get ' : 
    System.String FatalErrorDuringExecute 'get ' : 
    System.String FatalErrorDuringRead 'get ' : 
    System.String FatalErrorReadingResult 'get ' : 
    System.String FileBasedCertificateNotSupported 'get ' : 
    System.String FileIsNotACertificate 'get ' : 
    System.String FileIsNotAKey 'get ' : 
    System.String FileNotFound 'get ' : 
    System.String FilePathNotSet 'get ' : 
    System.String FromAndLengthTooBig 'get ' : 
    System.String FromIndexMustBeValid 'get ' : 
    System.String GetHostEntryFailed 'get ' : 
    System.String HardProcQuery 'get ' : 
    System.String ImproperValueFormat 'get ' : 
    System.String IncorrectTransmission 'get ' : 
    System.String IndexAndLengthTooBig 'get ' : 
    System.String IndexMustBeValid 'get ' : 
    System.String InvalidCertificateKey 'get ' : 
    System.String InvalidColumnOrdinal 'get ' : 
    System.String InvalidConnectionStringValue 'get ' : 
    System.String InvalidHostNameOrAddress 'get ' : 
    System.String InvalidMicrosecondValue 'get ' : 
    System.String InvalidMillisecondValue 'get ' : 
    System.String InvalidOptionWhenSslDisabled 'get ' : 
    System.String InvalidProcName 'get ' : 
    System.String InvalidSslCertificate 'get ' : 
    System.String InvalidSslCertificateSignature 'get ' : 
    System.String InvalidSslCertificateSignatureGeneral 'get ' : 
    System.String InvalidSslMode 'get ' : 
    System.String InvalidTlsVersionAndSslModeOption 'get ' : 
    System.String InvalidTlsVersionOption 'get ' : 
    System.String InvalidValueForBoolean 'get ' : 
    System.String KeywordNoNull 'get ' : 
    System.String KeywordNotSupported 'get ' : 
    System.String keywords 'get ' : 
    System.String LocalInfileDisabled 'get ' : 
    System.String MixedParameterNamingNotAllowed 'get ' : 
    System.String MoreThanOneOPRow 'get ' : 
    System.String MultipleConnectionsInTransactionNotSupported 'get ' : 
    System.String NamedPipeNoSeek 'get ' : 
    System.String NamedPipeNoSetLength 'get ' : 
    System.String NewValueShouldBeMySqlParameter 'get ' : 
    System.String NextResultIsClosed 'get ' : 
    System.String NoBodiesAndTypeNotSet 'get ' : 
    System.String NoNestedTransactions 'get ' : 
    System.String NoServerSSLSupport 'get ' : 
    System.String NoUnixSocketsOnWindows 'get ' : 
    System.String NoWindowsIdentity 'get ' : 
    System.String ObjectDisposed 'get ' : 
    System.String OffsetCannotBeNegative 'get ' : 
    System.String OffsetMustBeValid 'get ' : 
    System.String OldPasswordsNotSupported 'get ' : 
    System.String OptionNotCurrentlySupported 'get ' : 
    System.String ParameterAlreadyDefined 'get ' : 
    System.String ParameterCannotBeNegative 'get ' : 
    System.String ParameterCannotBeNull 'get ' : 
    System.String ParameterCannotBeNullOrEmpty 'get ' : 
    System.String ParameterIndexNotFound 'get ' : 
    System.String ParameterIsInvalid 'get ' : 
    System.String ParameterMustBeDefined 'get ' : 
    System.String ParameterNotFoundDuringPrepare 'get ' : 
    System.String ParameterNullOrEmpty 'get ' : 
    System.String PasswordMustHaveLegalChars 'get ' : 
    System.String PerfMonCategoryHelp 'get ' : 
    System.String PerfMonCategoryName 'get ' : 
    System.String PerfMonHardProcHelp 'get ' : 
    System.String PerfMonHardProcName 'get ' : 
    System.String PerfMonSoftProcHelp 'get ' : 
    System.String PerfMonSoftProcName 'get ' : 
    System.String ProcAndFuncSameName 'get ' : 
    System.String QueryTooLarge 'get ' : 
    System.String ReadFromStreamFailed 'get ' : 
    System.String ReadingPriorColumnUsingSeqAccess 'get ' : 
    System.String ReplicatedConnectionsAllowOnlyReadonlyStatements 'get ' : 
    System.String Replication_ConnectionAttemptFailed 'get ' : 
    System.String Replication_NoAvailableServer 'get ' : 
    System.String ReplicationGroupNotFound 'get ' : 
    System.String ReplicationServerNotFound 'get ' : 
    System.String RoutineNotFound 'get ' : 
    System.String RoutineRequiresReturnParameter 'get ' : 
    System.String RSAPublicKeyRetrievalNotEnabled 'get ' : 
    System.String ServerTooOld 'get ' : 
    System.String SnapshotNotSupported 'get ' : 
    System.String SocketNoSeek 'get ' : 
    System.String SoftProcQuery 'get ' : 
    System.String SPNotSupported 'get ' : 
    System.String SshAuthenticationModeNotSet 'get ' : 
    System.String SshInvalidPassphrase 'get ' : 
    System.String SslCertificateCAMismatch 'get ' : 
    System.String SslCertificateHostNameMismatch 'get ' : 
    System.String SslCertificateIsNotCA 'get ' : 
    System.String SslConnectionError 'get ' : 
    System.String StreamAlreadyClosed 'get ' : 
    System.String StreamNoRead 'get ' : 
    System.String StreamNoWrite 'get ' : 
    System.String StringEmpty 'get ' : 
    System.String Timeout 'get ' : 
    System.String TimeoutGettingConnection 'get ' : 
    System.String TimeOutMultipleHost 'get ' : 
    System.String Tlsv13NotSupported 'get ' : 
    System.String TlsVersionNotSupported 'get ' : 
    System.String TraceCloseConnection 'get ' : 
    System.String TraceErrorMoreThanMaxValueConnections 'get ' : 
    System.String TraceFetchError 'get ' : 
    System.String TraceOpenConnection 'get ' : 
    System.String TraceOpenResultError 'get ' : 
    System.String TraceQueryDone 'get ' : 
    System.String TraceQueryNormalized 'get ' : 
    System.String TraceQueryOpened 'get ' : 
    System.String TraceResult 'get ' : 
    System.String TraceResultClosed 'get ' : 
    System.String TraceSetDatabase 'get ' : 
    System.String TraceStatementClosed 'get ' : 
    System.String TraceStatementExecuted 'get ' : 
    System.String TraceStatementPrepared 'get ' : 
    System.String TraceUAWarningBadIndex 'get ' : 
    System.String TraceUAWarningFieldConversion 'get ' : 
    System.String TraceUAWarningNoIndex 'get ' : 
    System.String TraceUAWarningSkippedColumns 'get ' : 
    System.String TraceUAWarningSkippedRows 'get ' : 
    System.String TraceWarning 'get ' : 
    System.String TypeIsNotCommandInterceptor 'get ' : 
    System.String TypeIsNotExceptionInterceptor 'get ' : 
    System.String UnableToConnectToHost 'get ' : 
    System.String UnableToCreateAuthPlugin 'get ' : 
    System.String UnableToDeriveParameters 'get ' : 
    System.String UnableToEnableQueryAnalysis 'get ' : 
    System.String UnableToEnumerateUDF 'get ' : 
    System.String UnableToExecuteSP 'get ' : 
    System.String UnableToParseFK 'get ' : 
    System.String UnableToReadRSAKey 'get ' : 
    System.String UnableToRetrieveParameters 'get ' : 
    System.String UnableToStartSecondAsyncOp 'get ' : 
    System.String UnixSocketsNotSupported 'get ' : 
    System.String UnknownAuthenticationMethod 'get ' : 
    System.String UnknownConnectionProtocol 'get ' : 
    System.String ValueNotCorrectType 'get ' : 
    System.String ValueNotSupportedForGuid 'get ' : 
    System.String WinAuthNotSupportOnPlatform 'get ' : 
    System.String WriteToStreamFailed 'get ' : 
    System.String WrongParameterName 'get ' : 
  Methods:
    get_UnableToRetrieveParameters(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToStartSecondAsyncOp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnixSocketsNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnknownAuthenticationMethod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnknownConnectionProtocol(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ValueNotCorrectType(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ValueNotSupportedForGuid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WinAuthNotSupportOnPlatform(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WriteToStreamFailed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WrongParameterName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoUnixSocketsOnWindows(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoWindowsIdentity(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ObjectDisposed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OffsetCannotBeNegative(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OffsetMustBeValid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OldPasswordsNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OptionNotCurrentlySupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterAlreadyDefined(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterCannotBeNegative(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterCannotBeNull(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterCannotBeNullOrEmpty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterIndexNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterIsInvalid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterMustBeDefined(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterNotFoundDuringPrepare(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParameterNullOrEmpty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PasswordMustHaveLegalChars(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PerfMonCategoryHelp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PerfMonCategoryName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PerfMonHardProcHelp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PerfMonHardProcName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PerfMonSoftProcHelp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PerfMonSoftProcName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ProcAndFuncSameName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_QueryTooLarge(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ReadFromStreamFailed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ReadingPriorColumnUsingSeqAccess(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ReplicatedConnectionsAllowOnlyReadonlyStatements(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Replication_ConnectionAttemptFailed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Replication_NoAvailableServer(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ReplicationGroupNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ReplicationServerNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RoutineNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RoutineRequiresReturnParameter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RSAPublicKeyRetrievalNotEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ServerTooOld(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SnapshotNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SocketNoSeek(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SoftProcQuery(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SPNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SshAuthenticationModeNotSet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SshInvalidPassphrase(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SslCertificateCAMismatch(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SslCertificateHostNameMismatch(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SslCertificateIsNotCA(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SslConnectionError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StreamAlreadyClosed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StreamNoRead(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StreamNoWrite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StringEmpty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Timeout(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TimeoutGettingConnection(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TimeOutMultipleHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tlsv13NotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TlsVersionNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceCloseConnection(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceErrorMoreThanMaxValueConnections(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceFetchError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceOpenConnection(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceOpenResultError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceQueryDone(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceQueryNormalized(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceQueryOpened(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceResult(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceResultClosed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceSetDatabase(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceStatementClosed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceStatementExecuted(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceStatementPrepared(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceUAWarningBadIndex(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceUAWarningFieldConversion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceUAWarningNoIndex(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceUAWarningSkippedColumns(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceUAWarningSkippedRows(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TraceWarning(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TypeIsNotCommandInterceptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TypeIsNotExceptionInterceptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToConnectToHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToCreateAuthPlugin(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToDeriveParameters(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToEnableQueryAnalysis(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToEnumerateUDF(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToExecuteSP(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToParseFK(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToReadRSAKey(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ResourceManager(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AdapterIsNull(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AdapterSelectIsNull(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AttemptToAccessBeforeRead(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AuthenticationFailed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AuthenticationMethodNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BadVersionFormat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BufferCannotBeNull(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BufferNotLargeEnough(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CancelNeeds50(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CancelNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CanNotDeriveParametersForTextCommands(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CBMultiTableNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CBNoKeyColumn(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ChaosNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CommandTextNotInitialized(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConnectionAlreadyOpen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConnectionBroken(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConnectionMustBeOpen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConnectionNotOpen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConnectionNotSet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CouldNotFindColumnName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CountCannotBeNegative(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CSNoSetLength(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DataNotInSupportedFormat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DataReaderOpen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultEncodingNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DistributedTxnNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DnsSrvInvalidConnOptionMultihost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DnsSrvInvalidConnOptionPort(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DnsSrvInvalidConnOptionUnixSocket(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DnsSrvNoHostsAvailable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DuplicatedConnectionOption(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DuplicatedSslConnectionOption(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EncodingError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ErrorCreatingSocket(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FatalErrorDuringExecute(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FatalErrorDuringRead(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FatalErrorReadingResult(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FileBasedCertificateNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FileIsNotACertificate(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FileIsNotAKey(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FileNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FilePathNotSet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FromAndLengthTooBig(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FromIndexMustBeValid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GetHostEntryFailed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HardProcQuery(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ImproperValueFormat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IncorrectTransmission(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IndexAndLengthTooBig(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IndexMustBeValid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidCertificateKey(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidColumnOrdinal(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidConnectionStringValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidHostNameOrAddress(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidMicrosecondValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidMillisecondValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidOptionWhenSslDisabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidProcName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidSslCertificate(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidSslCertificateSignature(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidSslCertificateSignatureGeneral(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidSslMode(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidTlsVersionAndSslModeOption(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidTlsVersionOption(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidValueForBoolean(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KeywordNoNull(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KeywordNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_keywords(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LocalInfileDisabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MixedParameterNamingNotAllowed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MoreThanOneOPRow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MultipleConnectionsInTransactionNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NamedPipeNoSeek(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NamedPipeNoSetLength(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NewValueShouldBeMySqlParameter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NextResultIsClosed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoBodiesAndTypeNotSet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoNestedTransactions(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoServerSSLSupport(): PrivateScope, Public, Static, HideBySig, SpecialName
Class MySql.Data.ResourcesX: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String AppdataNotDefined 'get ' : 
    System.String AuthenticationFailed 'get ' : 
    System.String ClientIsClosed 'get ' : 
    System.String ClientOptionInvalidValue 'get ' : 
    System.String ClientOptionNotValid 'get ' : 
    System.String CollectionTableDoesNotExist 'get ' : 
    System.String DnsSrvConflictingOptions 'get ' : 
    System.String DnsSrvInvalidScheme 'get ' : 
    System.String CompressionAlgorithmNegotiationFailed 'get ' : 
    System.String CompressionAlgorithmNotSupported 'get ' : 
    System.String CompressionFailedToLoadLibzstdAssembly 'get ' : 
    System.String CompressionForSpecificAlgorithmNotSupportedInNetFramework 'get ' : 
    System.String CompressionInvalidValue 'get ' : 
    System.String CompressionNotEnabled 'get ' : 
    System.String CompressionNotSupportedByServer 'get ' : 
    System.String CompressionPendingMessagesToProcess 'get ' : 
    System.String DuplicateUserDefinedAttribute 'get ' : 
    System.String EmptyKeyConnectionAttribute 'get ' : 
    System.String EmptyOptions 'get ' : 
    System.String FeatureNotSupported 'get ' : 
    System.String FunctionalityNotSupported 'get ' : 
    System.String InvalidCollationId 'get ' : 
    System.String InvalidConnectionAttributes 'get ' : 
    System.String InvalidConnectionData 'get ' : 
    System.String InvalidConnectionString 'get ' : 
    System.String InvalidConnectionStringAttribute 'get ' : 
    System.String InvalidConnectionTimeoutValue 'get ' : 
    System.String InvalidDecimalFormat 'get ' : 
    System.String InvalidFieldType 'get ' : 
    System.String InvalidIndexType 'get ' : 
    System.String InvalidJsonDocument 'get ' : 
    System.String InvalidNameIndex 'get ' : 
    System.String InvalidRowIndex 'get ' : 
    System.String InvalidSession 'get ' : 
    System.String InvalidUriData 'get ' : 
    System.String InvalidUriQuery 'get ' : 
    System.String InvalidUserDefinedAttribute 'get ' : 
    System.String JsonUriOrHost 'get ' : 
    System.String KeywordNotFound 'get ' : 
    System.String KeywordNotSupported 'get ' : 
    System.String MandatoryFieldNotFound 'get ' : 
    System.String MissingSchemaOption 'get ' : 
    System.String MoreThanOneDocumentId 'get ' : 
    System.String NoDataAtIndex 'get ' : 
    System.String NoHost 'get ' : 
    System.String NoMoreData 'get ' : 
    System.String NoObjectFound 'get ' : 
    System.String NoPlaceholders 'get ' : 
    System.String NumberNotGreaterThanZero 'get ' : 
    System.String PathNotFound 'get ' : 
    System.String PoolingQueueTimeout 'get ' : 
    System.String PortNotSupported 'get ' : 
    System.String PriorityForAllOrNoHosts 'get ' : 
    System.String PriorityOutOfLimits 'get ' : 
    System.String ProgramDataNotDefined 'get ' : 
    System.String SchemaCreateCollectionMsg 'get ' : 
    System.String ThrowingAwayResults 'get ' : 
    System.String TimeOutMultipleHost 'get ' : 
    System.String TimeOutMultipleHost0ms 'get ' : 
    System.String TimeOutSingleHost 'get ' : 
    System.String TimeOutSingleHost0ms 'get ' : 
    System.String UnableToConnect 'get ' : 
    System.String UnableToDecodeDataValue 'get ' : 
    System.String UnableToOpenSession 'get ' : 
    System.String UnexpectedEndOfPacketFound 'get ' : 
    System.String UnexpectedField 'get ' : 
    System.String UnknownPlaceholder 'get ' : 
    System.String ValueNotCorrectType 'get ' : 
  Methods:
    get_ResourceManager(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AppdataNotDefined(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AuthenticationFailed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ClientIsClosed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ClientOptionInvalidValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ClientOptionNotValid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CollectionTableDoesNotExist(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DnsSrvConflictingOptions(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DnsSrvInvalidScheme(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionAlgorithmNegotiationFailed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionAlgorithmNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionFailedToLoadLibzstdAssembly(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionForSpecificAlgorithmNotSupportedInNetFramework(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionInvalidValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionNotEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionNotSupportedByServer(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CompressionPendingMessagesToProcess(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DuplicateUserDefinedAttribute(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EmptyKeyConnectionAttribute(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EmptyOptions(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FeatureNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FunctionalityNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidCollationId(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidConnectionAttributes(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidConnectionData(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidConnectionString(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidConnectionStringAttribute(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidConnectionTimeoutValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidDecimalFormat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidFieldType(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidIndexType(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidJsonDocument(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidNameIndex(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidRowIndex(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidSession(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidUriData(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidUriQuery(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidUserDefinedAttribute(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_JsonUriOrHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KeywordNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KeywordNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MandatoryFieldNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MissingSchemaOption(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MoreThanOneDocumentId(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoDataAtIndex(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoMoreData(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoObjectFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NoPlaceholders(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NumberNotGreaterThanZero(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PathNotFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PoolingQueueTimeout(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PortNotSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PriorityForAllOrNoHosts(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PriorityOutOfLimits(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ProgramDataNotDefined(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SchemaCreateCollectionMsg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ThrowingAwayResults(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TimeOutMultipleHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TimeOutMultipleHost0ms(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TimeOutSingleHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TimeOutSingleHost0ms(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToConnect(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToDecodeDataValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnableToOpenSession(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnexpectedEndOfPacketFound(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnexpectedField(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnknownPlaceholder(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ValueNotCorrectType(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MySql.Data.X.XDevAPI.Common.CreateCollectionOptions: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Boolean ReuseExisting 'get set' : 
    MySql.Data.X.XDevAPI.Common.Validation Validation 'get set' : 
  Methods:
    get_ReuseExisting(): PrivateScope, Public, HideBySig, SpecialName
    set_ReuseExisting(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Validation(): PrivateScope, Public, HideBySig, SpecialName
    set_Validation(Validation): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.X.XDevAPI.Common.ModifyCollectionOptions: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    MySql.Data.X.XDevAPI.Common.Validation Validation 'get set' : 
  Methods:
    get_Validation(): PrivateScope, Public, HideBySig, SpecialName
    set_Validation(Validation): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.X.XDevAPI.Common.Validation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    System.Nullable`1[MySql.Data.X.XDevAPI.Common.ValidationLevel] Level 'get set' : 
    System.String Schema 'get set' : 
  Methods:
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    set_Level(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(String): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.X.XDevAPI.Common.ValidationLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.X.XDevAPI.Common.ValidationLevel OFF = 0 : Public, Static, Literal, HasDefault
    MySql.Data.X.XDevAPI.Common.ValidationLevel STRICT = 1 : Public, Static, Literal, HasDefault
Class MySql.Data.X.Communication.XCompressionController: NotPublic
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ALGORITHMS_SUBKEY = algorithm : Assembly, Static, Literal, HasDefault
    System.String COMPRESSION_KEY = compression : Assembly, Static, Literal, HasDefault
    Int32 COMPRESSION_THRESHOLD = 1000 : Assembly, Static, Literal, HasDefault
    Boolean DEFAULT_SERVER_COMBINE_MIXED_MESSAGES_VALUE = True : Assembly, Static, Literal, HasDefault
    Int32 DEFAULT_SERVER_MAX_COMBINE_MESSAGES_VALUE = 100 : Assembly, Static, Literal, HasDefault
    System.String DEFLATE_STREAM_COMPRESSION_ALGORITHM = deflate_stream : Assembly, Static, Literal, HasDefault
    System.String LZ4_MESSAGE_COMPRESSION_ALGORITHM = lz4_message : Assembly, Static, Literal, HasDefault
    System.String SERVER_COMBINE_MIXED_MESSAGES_SUBKEY = server_combine_mixed_messages : Assembly, Static, Literal, HasDefault
    System.String SERVER_MAX_COMBINE_MESSAGES_SUBKEY = server_max_combine_messages : Assembly, Static, Literal, HasDefault
    System.String ZSTD_STREAM_COMPRESSION_ALGORITHM = zstd_stream : Assembly, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.List`1[MySqlX.Communication.ClientMessageId] ClientSupportedCompressedMessages 'get set' : 
    System.String[] ClientSupportedCompressionAlgorithms 'get set' : 
    System.String CompressionAlgorithm 'get set' : 
    Boolean IsCompressionEnabled 'get ' : 
    Boolean LastMessageContainsMultipleMessages 'get set' : 
  Methods:
    get_ClientSupportedCompressedMessages(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ClientSupportedCompressionAlgorithms(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_CompressionAlgorithm(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsCompressionEnabled(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LastMessageContainsMultipleMessages(): PrivateScope, Assembly, HideBySig, SpecialName
    Compress(Byte[]): PrivateScope, Assembly, HideBySig
    CompressUsingDeflateStream(Byte[]): PrivateScope, Public, HideBySig
    Decompress(Byte[], Int32): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Assembly, HideBySig
    ReadNextBufferedMessage(): PrivateScope, Assembly, HideBySig
    ReadNextBufferedMessageAsCommunicationPacket(): PrivateScope, Assembly, HideBySig
    LoadLibzstdLibrary(): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.X.common.UnmanagedLibraryLoader: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    LoadUnmanagedLibraryFromEmbeddedResources(String, String): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.Types.MetaData: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsNumericType(String): PrivateScope, Public, Static, HideBySig
    IsTextType(String): PrivateScope, Public, Static, HideBySig
    SupportScale(String): PrivateScope, Public, Static, HideBySig
    NameToType(String, Boolean, Boolean, MySqlConnection): PrivateScope, Public, Static, HideBySig
Struct MySql.Data.Types.MySqlBinary: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Byte[] Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Public, Static, HideBySig
Struct MySql.Data.Types.MySqlBit: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean ReadAsString 'get set' : 
    Boolean IsNull 'get set' : 
  Methods:
    get_ReadAsString(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadAsString(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    WriteValue(MySqlPacket, Boolean, Object, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadValue(MySqlPacket, Int64, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SkipValue(MySqlPacket): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlByte: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    SByte Value 'get set' : 
    Boolean TreatAsBoolean 'get set' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(SByte): PrivateScope, Public, HideBySig, SpecialName
    get_TreatAsBoolean(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TreatAsBoolean(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.Types.MySqlConversionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct MySql.Data.Types.MySqlDateTime: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.Types.MySqlDateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, System.DateTime): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
    System.IComparable
    System.IConvertible
  Fields:
    Int32 TimezoneOffset : Public
  Properties:
    Boolean IsValidDateTime 'get ' : 
    Int32 Year 'get set' : 
    Int32 Month 'get set' : 
    Int32 Day  'get set' : 
    Int32 Hour 'get set' : 
    Int32 Minute 'get set' : 
    Int32 Second 'get set' : 
    Int32 Millisecond 'get set' : 
    Int32 Microsecond 'get set' : 
    Boolean IsNull 'get ' : 
    System.DateTime Value 'get ' : 
  Methods:
    get_IsValidDateTime(): PrivateScope, Public, HideBySig, SpecialName
    get_Year(): PrivateScope, Public, HideBySig, SpecialName
    set_Year(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Month(): PrivateScope, Public, HideBySig, SpecialName
    set_Month(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Day(): PrivateScope, Public, HideBySig, SpecialName
    set_Day(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Hour(): PrivateScope, Public, HideBySig, SpecialName
    set_Hour(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Minute(): PrivateScope, Public, HideBySig, SpecialName
    set_Minute(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Second(): PrivateScope, Public, HideBySig, SpecialName
    set_Second(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Millisecond(): PrivateScope, Public, HideBySig, SpecialName
    set_Millisecond(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Microsecond(): PrivateScope, Public, HideBySig, SpecialName
    set_Microsecond(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Parse(String): PrivateScope, Assembly, Static, HideBySig
    Parse(String, DBVersion): PrivateScope, Assembly, Static, HideBySig
    GetDateTime(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Explicit(MySqlDateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlDecimal: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Byte Precision 'get set' : 
    Byte Scale 'get set' : 
    System.Decimal Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Precision(): PrivateScope, Public, HideBySig, SpecialName
    set_Precision(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    ToDouble(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlDouble: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Double Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlGeometry: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Double, Double, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    System.Nullable`1[System.Double] XCoordinate 'get ' : 
    System.Nullable`1[System.Double] YCoordinate 'get ' : 
    System.Nullable`1[System.Int32] SRID 'get ' : 
    Boolean IsNull 'get ' : 
    Byte[] Value 'get ' : 
  Methods:
    get_XCoordinate(): PrivateScope, Public, HideBySig, SpecialName
    get_YCoordinate(): PrivateScope, Public, HideBySig, SpecialName
    get_SRID(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    TryParse(String, MySqlGeometry&(Out)): PrivateScope, Public, Static, HideBySig
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Public, Static, HideBySig
    GetWKT(): PrivateScope, Public, HideBySig
Struct MySql.Data.Types.MySqlGuid: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Byte[] Bytes 'get ' : 
    Boolean OldGuids 'get set' : 
    Boolean IsNull 'get set' : 
    System.Guid Value 'get set' : 
  Methods:
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    get_OldGuids(): PrivateScope, Public, HideBySig, SpecialName
    set_OldGuids(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Public, Static, HideBySig
Struct MySql.Data.Types.MySqlInt16: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Int16 Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlInt32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Int32 Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlInt64: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Int64 Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlSingle: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Single Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlString: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    System.String Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlTimeSpan: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get set' : 
    System.TimeSpan Value 'get set' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct MySql.Data.Types.MySqlUByte: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    Byte Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlUInt16: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    UInt16 Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlUInt32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDbType, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    UInt32 Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Types.MySqlUInt64: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.Types.IMySqlValue
  Properties:
    Boolean IsNull 'get ' : 
    UInt64 Value 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetDSInfo(MySqlSchemaCollection): PrivateScope, Assembly, Static, HideBySig
Interface MySql.Data.Types.IMySqlValue: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Boolean IsNull 'get ' : 
    MySql.Data.MySqlClient.MySqlDbType MySqlDbType 'get ' : 
    System.Object Value 'get ' : 
    System.Type SystemType 'get ' : 
    System.String MySqlTypeName 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MySqlDbType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SystemType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MySqlTypeName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    WriteValue(MySqlPacket, Boolean, Object, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadValue(MySqlPacket, Int64, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SkipValue(MySqlPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MySql.Data.Failover.FailoverGroup: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(System.Collections.Generic.List`1[MySql.Data.Failover.FailoverServer]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class MySql.Data.Failover.FailoverManager: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    MySql.Data.Failover.FailoverGroup FailoverGroup 'get set' : 
  Methods:
    get_FailoverGroup(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Reset(): PrivateScope, Assembly, Static, HideBySig
    SetHostList(List`1, FailoverMethod): PrivateScope, Assembly, Static, HideBySig
    AttemptConnectionXProtocol(String, String&(Out), Boolean, Client(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    AttemptConnection(MySqlConnection, String, String&(Out), Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    ParseHostList(String, Boolean, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.Failover.FailoverMethod: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.Failover.FailoverMethod Sequential = 0 : Public, Static, Literal, HasDefault
    MySql.Data.Failover.FailoverMethod Priority = 1 : Public, Static, Literal, HasDefault
    MySql.Data.Failover.FailoverMethod Random = 2 : Public, Static, Literal, HasDefault
Class MySql.Data.Failover.FailoverServer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, Int32, System.Nullable`1[System.Int32]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MySql.Data.Failover.FailoverServer]
  Properties:
    System.String Host 'get set' : 
    Int32 Port 'get set' : 
    Int32 Priority 'get set' : 
    Boolean IsActive 'get set' : 
    Boolean Attempted 'get set' : 
    System.DateTime DemotedTime 'get set' : 
  Methods:
    get_Host(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Port(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Priority(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsActive(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IsActive(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Attempted(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Attempted(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_DemotedTime(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DemotedTime(DateTime): PrivateScope, Assembly, HideBySig, SpecialName
    Equals(FailoverServer): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.Failover.RandomFailoverGroup: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.Failover.FailoverGroup
    Void .ctor(System.Collections.Generic.List`1[MySql.Data.Failover.FailoverServer]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MySql.Data.Failover.SequentialFailoverGroup: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.Failover.FailoverGroup
    Void .ctor(System.Collections.Generic.List`1[MySql.Data.Failover.FailoverServer]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MySql.Data.common.MySqlConnectionStringOption: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.String, System.Type, System.Object, Boolean, SetterDelegate, GetterDelegate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Type, System.Object, Boolean, ClassicSetterDelegate, ClassicGetterDelegate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Type, System.Object, Boolean, XSetterDelegate, XGetterDelegate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Type, System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type BaseType 'get set' : 
    Boolean IsCustomized 'get ' : 
    System.String[] Synonyms 'get set' : 
    Boolean Obsolete 'get set' : 
    System.String Keyword 'get set' : 
    System.Object DefaultValue 'get set' : 
    SetterDelegate Setter 'get set' : 
    GetterDelegate Getter 'get set' : 
    ClassicSetterDelegate ClassicSetter 'get set' : 
    ClassicGetterDelegate ClassicGetter 'get set' : 
    XSetterDelegate XSetter 'get set' : 
    XGetterDelegate XGetter 'get set' : 
  Methods:
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCustomized(): PrivateScope, Public, HideBySig, SpecialName
    get_Synonyms(): PrivateScope, Public, HideBySig, SpecialName
    get_Obsolete(): PrivateScope, Public, HideBySig, SpecialName
    get_Keyword(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Setter(): PrivateScope, Public, HideBySig, SpecialName
    get_Getter(): PrivateScope, Public, HideBySig, SpecialName
    get_ClassicSetter(): PrivateScope, Public, HideBySig, SpecialName
    get_ClassicGetter(): PrivateScope, Public, HideBySig, SpecialName
    get_XSetter(): PrivateScope, Public, HideBySig, SpecialName
    get_XGetter(): PrivateScope, Public, HideBySig, SpecialName
    HasKeyword(String): PrivateScope, Public, HideBySig
    Clean(DbConnectionStringBuilder): PrivateScope, Public, HideBySig
    ValidateValue(Object&, String(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ValidateValue(Object&, String): PrivateScope, Public, HideBySig
Class MySql.Data.common.MySqlConnectionStringOptionCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[System.String,MySql.Data.common.MySqlConnectionStringOption]
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[MySql.Data.common.MySqlConnectionStringOption] Options 'get ' : 
  Methods:
    get_Options(): PrivateScope, Assembly, HideBySig, SpecialName
    Add(MySqlConnectionStringOption): PrivateScope, Assembly, HideBySig
    Get(String): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, HideBySig
Class MySql.Data.common.SslPemCertificateValidator: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ValidateCertificate(X509Certificate, MySqlBaseConnectionStringBuilder): PrivateScope, Public, Static, HideBySig
Class MySql.Data.Common.Cache`2[TKeyType,TValueType]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKeyType
  Type parameter: TValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TValueType Item [TKeyType] 'get set' : 
  Methods:
    get_Item(TKeyType): PrivateScope, Public, HideBySig, SpecialName
    set_Item(TKeyType, TValueType): PrivateScope, Public, HideBySig, SpecialName
    Add(TKeyType, TValueType): PrivateScope, Public, HideBySig
Class MySql.Data.Common.ContextString: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ContextMarkers 'get set' : 
  Methods:
    get_ContextMarkers(): PrivateScope, Public, HideBySig, SpecialName
    set_ContextMarkers(String): PrivateScope, Public, HideBySig, SpecialName
    IndexOf(String, String): PrivateScope, Public, HideBySig
    IndexOf(String, String, Int32): PrivateScope, Public, HideBySig
    IndexOf(String, Char): PrivateScope, Public, HideBySig
    Split(String, String): PrivateScope, Public, HideBySig
Class MySql.Data.Common.DnsResolver: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String ServiceName 'get set' : 
  Methods:
    get_ServiceName(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CreateResolver(String, TransportType(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    GetDnsSrvRecords(String): PrivateScope, Assembly, Static, HideBySig
    SortSrvRecords(List`1): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.Common.DnsSrvRecord: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, System.String, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Ubiety.Dns.Core.Records.RecordSrv): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[MySql.Data.Common.DnsSrvRecord]
  Properties:
    Int32 Port 'get ' : 
    Int32 Priority 'get ' : 
    System.String Target 'get ' : 
    Int32 Weight 'get ' : 
  Methods:
    get_Port(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Priority(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Target(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Weight(): PrivateScope, Assembly, HideBySig, SpecialName
    Compare(DnsSrvRecord, DnsSrvRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Implicit(RecordSrv): PrivateScope, Public, Static, HideBySig, SpecialName
Class MySql.Data.Common.LowResolutionStopwatch: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 Frequency : Public, Static, InitOnly
    Boolean IsHighResolution : Public, Static, InitOnly
  Properties:
    Int64 ElapsedMilliseconds 'get set' : 
    System.TimeSpan Elapsed 'get ' : 
  Methods:
    get_ElapsedMilliseconds(): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    get_Elapsed(): PrivateScope, Public, HideBySig, SpecialName
    StartNew(): PrivateScope, Public, Static, HideBySig
    GetTimestamp(): PrivateScope, Public, Static, HideBySig
Class MySql.Data.Common.MyNetworkStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Net.Sockets.NetworkStream
    Void .ctor(System.Net.Sockets.Socket, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    CreateStream(String, UInt32, UInt32, UInt32, Boolean): PrivateScope, Public, Static, HideBySig
Class MySql.Data.Common.MySqlSshClientManager: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Renci.SshNet.SshClient CurrentSshClient 'get set' : 
  Methods:
    get_CurrentSshClient(): PrivateScope, Public, Static, HideBySig, SpecialName
    SetupSshClient(String, String, String, String, String, UInt32, String, UInt32, Boolean): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.Common.MySqlTokenizer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
    Boolean AnsiQuotes 'get set' : 
    Boolean BackslashEscapes 'get set' : 
    Boolean MultiLine 'get set' : 
    Boolean SqlServerMode 'get set' : 
    Boolean Quoted 'get set' : 
    Boolean IsComment 'get set' : 
    Int32 StartIndex 'get set' : 
    Int32 StopIndex 'get set' : 
    Int32 Position 'get set' : 
    Boolean ReturnComments 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_AnsiQuotes(): PrivateScope, Public, HideBySig, SpecialName
    set_AnsiQuotes(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BackslashEscapes(): PrivateScope, Public, HideBySig, SpecialName
    set_BackslashEscapes(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MultiLine(): PrivateScope, Public, HideBySig, SpecialName
    set_MultiLine(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SqlServerMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SqlServerMode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Quoted(): PrivateScope, Public, HideBySig, SpecialName
    get_IsComment(): PrivateScope, Public, HideBySig, SpecialName
    get_StartIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_StartIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StopIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_StopIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnComments(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnComments(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetAllTokens(): PrivateScope, Public, HideBySig
    NextToken(): PrivateScope, Public, HideBySig
    IsParameter(String): PrivateScope, Public, Static, HideBySig
    NextParameter(): PrivateScope, Public, HideBySig
    FindToken(): PrivateScope, Public, HideBySig
    ReadParenthesis(): PrivateScope, Public, HideBySig
Class MySql.Data.Common.NativeMethods: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Fields:
    UInt32 GENERIC_READ = 2147483648 : Public, Static, Literal, HasDefault
    UInt32 GENERIC_WRITE = 1073741824 : Public, Static, Literal, HasDefault
    Int32 INVALIDpipeHandle_VALUE = -1 : Public, Static, Literal, HasDefault
    UInt32 FILE_FLAG_OVERLAPPED = 1073741824 : Public, Static, Literal, HasDefault
    UInt32 FILE_FLAG_NO_BUFFERING = 536870912 : Public, Static, Literal, HasDefault
    UInt32 OPEN_EXISTING = 3 : Public, Static, Literal, HasDefault
  Methods:
    CreateFile(String, UInt32, UInt32, SecurityAttributes, UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    PeekNamedPipe(IntPtr, Byte[], UInt32, UInt32&, UInt32&, UInt32&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ReadFile(IntPtr, Byte[](Out), UInt32, UInt32&(Out), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    WriteFile(IntPtr, Byte[](In), UInt32, UInt32&(Out), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CloseHandle(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CancelIo(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FlushFileBuffers(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    OpenEvent(UInt32, Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    OpenFileMapping(UInt32, Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MapViewOfFile(IntPtr, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    UnmapViewOfFile(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FlushViewOfFile(IntPtr, UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    WaitNamedPipe(String, UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    socket(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ioctlsocket(IntPtr, UInt32, UInt32&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    WSAIoctl(IntPtr, UInt32, Byte[], UInt32, Byte[], UInt32, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    WSAGetLastError(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    connect(IntPtr, Byte[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    recv(IntPtr, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    send(IntPtr, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class MySql.Data.Common.SharedMemory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    IntPtr View 'get ' : 
  Methods:
    get_View(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.Common.SharedMemoryStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Boolean CanTimeout 'get ' : 
    Int32 ReadTimeout 'get set' : 
    Int32 WriteTimeout 'get set' : 
  Methods:
    Open(UInt32): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    get_CanTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReadTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WriteTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_WriteTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MySql.Data.Common.Platform: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    IsWindows(): PrivateScope, Public, Static, HideBySig
    IsMacOSX(): PrivateScope, Public, Static, HideBySig
    IsMono(): PrivateScope, Public, Static, HideBySig
Class MySql.Data.Common.QueryNormalizer: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String QueryType 'get ' : 
  Methods:
    get_QueryType(): PrivateScope, Public, HideBySig, SpecialName
    Normalize(String): PrivateScope, Public, HideBySig
Class MySql.Data.Common.Token: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.Common.TokenType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySql.Data.Common.TokenType Type : Public
    System.String Text : Public
    Boolean Output : Public
  Properties:
    Boolean IsRealToken 'get ' : 
  Methods:
    get_IsRealToken(): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.Common.TokenType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.Common.TokenType Keyword = 0 : Public, Static, Literal, HasDefault
    MySql.Data.Common.TokenType String = 1 : Public, Static, Literal, HasDefault
    MySql.Data.Common.TokenType Number = 2 : Public, Static, Literal, HasDefault
    MySql.Data.Common.TokenType Symbol = 3 : Public, Static, Literal, HasDefault
    MySql.Data.Common.TokenType Identifier = 4 : Public, Static, Literal, HasDefault
    MySql.Data.Common.TokenType Comment = 5 : Public, Static, Literal, HasDefault
    MySql.Data.Common.TokenType CommandComment = 6 : Public, Static, Literal, HasDefault
    MySql.Data.Common.TokenType Whitespace = 7 : Public, Static, Literal, HasDefault
Class MySql.Data.Common.Ssh: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String, System.String, System.String, UInt32, System.String, UInt32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    StartClient(): PrivateScope, Assembly, HideBySig
    StopClient(): PrivateScope, Assembly, HideBySig
Class MySql.Data.Common.Ssl: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlSslMode, System.String, MySql.Data.MySqlClient.MySqlCertificateStoreLocation, System.String, System.String, System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    StartSSL(Stream&, Encoding, String): PrivateScope, Public, HideBySig
Class MySql.Data.Common.StreamCreator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, UInt32, System.String, UInt32, MySql.Data.Common.DBVersion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStream(String, UInt32, String, UInt32, DBVersion, UInt32): PrivateScope, Public, Static, HideBySig
    GetStream(MySqlConnectionStringBuilder): PrivateScope, Public, Static, HideBySig
    GetUnixSocketStream(MySqlConnectionStringBuilder): PrivateScope, Assembly, Static, HideBySig
    GetUnixSocket(String, UInt32, UInt32): PrivateScope, Assembly, Static, HideBySig
    SetKeepAlive(Socket, UInt32): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.Common.StringUtility: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToUpperInvariant(String): PrivateScope, Public, Static, HideBySig
    ToLowerInvariant(String): PrivateScope, Public, Static, HideBySig
Class MySql.Data.Common.UnixEndPoint: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Net.EndPoint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SocketName 'get set' : 
  Methods:
    get_SocketName(): PrivateScope, Public, HideBySig, SpecialName
    Create(SocketAddress): PrivateScope, Public, Virtual, HideBySig
    Serialize(): PrivateScope, Public, Virtual, HideBySig
Struct MySql.Data.Common.DBVersion: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Major 'get ' : 
    Int32 Minor 'get ' : 
    Int32 Build 'get ' : 
    Boolean IsEnterprise 'get set' : 
  Methods:
    get_Major(): PrivateScope, Public, HideBySig, SpecialName
    get_Minor(): PrivateScope, Public, HideBySig, SpecialName
    get_Build(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnterprise(): PrivateScope, Public, HideBySig, SpecialName
    Parse(String): PrivateScope, Public, Static, HideBySig
    isAtLeast(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlBulkLoader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlConnection Connection 'get set' : 
    System.String FieldTerminator 'get set' : 
    System.String LineTerminator 'get set' : 
    System.String TableName 'get set' : 
    System.String CharacterSet 'get set' : 
    System.String FileName 'get set' : 
    Int32 Timeout 'get set' : 
    Boolean Local 'get set' : 
    Int32 NumberOfLinesToSkip 'get set' : 
    System.String LinePrefix 'get set' : 
    Char FieldQuotationCharacter 'get set' : 
    Boolean FieldQuotationOptional 'get set' : 
    Char EscapeCharacter 'get set' : 
    MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption ConflictOption 'get set' : 
    MySql.Data.MySqlClient.MySqlBulkLoaderPriority Priority 'get set' : 
    System.Collections.Generic.List`1[System.String] Columns 'get ' : 
    System.Collections.Generic.List`1[System.String] Expressions 'get ' : 
  Methods:
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    set_Connection(MySqlConnection): PrivateScope, Public, HideBySig, SpecialName
    get_FieldTerminator(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldTerminator(String): PrivateScope, Public, HideBySig, SpecialName
    get_LineTerminator(): PrivateScope, Public, HideBySig, SpecialName
    set_LineTerminator(String): PrivateScope, Public, HideBySig, SpecialName
    get_TableName(): PrivateScope, Public, HideBySig, SpecialName
    set_TableName(String): PrivateScope, Public, HideBySig, SpecialName
    get_CharacterSet(): PrivateScope, Public, HideBySig, SpecialName
    set_CharacterSet(String): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Timeout(): PrivateScope, Public, HideBySig, SpecialName
    set_Timeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Local(): PrivateScope, Public, HideBySig, SpecialName
    set_Local(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfLinesToSkip(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfLinesToSkip(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LinePrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_LinePrefix(String): PrivateScope, Public, HideBySig, SpecialName
    get_FieldQuotationCharacter(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldQuotationCharacter(Char): PrivateScope, Public, HideBySig, SpecialName
    get_FieldQuotationOptional(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldQuotationOptional(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeCharacter(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeCharacter(Char): PrivateScope, Public, HideBySig, SpecialName
    get_ConflictOption(): PrivateScope, Public, HideBySig, SpecialName
    set_ConflictOption(MySqlBulkLoaderConflictOption): PrivateScope, Public, HideBySig, SpecialName
    get_Priority(): PrivateScope, Public, HideBySig, SpecialName
    set_Priority(MySqlBulkLoaderPriority): PrivateScope, Public, HideBySig, SpecialName
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_Expressions(): PrivateScope, Public, HideBySig, SpecialName
    Load(): PrivateScope, Public, HideBySig
    LoadAsync(): PrivateScope, Public, HideBySig
    LoadAsync(CancellationToken): PrivateScope, Public, HideBySig
Struct MySql.Data.MySqlClient.MySqlBulkLoaderPriority: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlBulkLoaderPriority None = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlBulkLoaderPriority Low = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlBulkLoaderPriority Concurrent = 2 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption None = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption Replace = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption Ignore = 2 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.CharSetMap: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCharacterSet(DBVersion, String): PrivateScope, Public, Static, HideBySig
    GetEncoding(DBVersion, String): PrivateScope, Public, Static, HideBySig
    InitCollections(MySqlConnection): PrivateScope, Assembly, Static, HideBySig
    GetDefaultCollation(String, MySqlConnection): PrivateScope, Assembly, Static, HideBySig
    GetMaxLength(String, MySqlConnection): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.MySqlClient.CharacterSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String name : Public
    Int32 byteCount : Public
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlCommand: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbCommand
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlConnection, MySql.Data.MySqlClient.MySqlTransaction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    AsyncDelegate Caller : Assembly
    System.Exception thrownException : Assembly
  Properties:
    Int64 LastInsertedId 'get set' : 
    System.String CommandText 'get set' : 
    Int32 CommandTimeout 'get set' : 
    System.Data.CommandType CommandType 'get set' : 
    Boolean IsPrepared 'get ' : 
    MySql.Data.MySqlClient.MySqlConnection Connection 'get set' : 
    MySql.Data.MySqlClient.MySqlParameterCollection Parameters 'get ' : 
    MySql.Data.MySqlClient.MySqlTransaction Transaction 'get set' : 
    Boolean EnableCaching 'get set' : 
    Int32 CacheAge 'get set' : 
    System.Collections.Generic.List`1[MySql.Data.MySqlClient.MySqlCommand] Batch 'get set' : 
    Boolean Canceled 'get set' : 
    System.String BatchableCommandText 'get set' : 
    Boolean InternallyCreated 'get set' : 
    System.Data.UpdateRowSource UpdatedRowSource 'get set' : 
    Boolean DesignTimeVisible 'get set' : 
  Methods:
    get_LastInsertedId(): PrivateScope, Public, HideBySig, SpecialName
    set_LastInsertedId(Int64): PrivateScope, Assembly, HideBySig, SpecialName
    get_CommandText(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CommandText(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CommandTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CommandTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CommandType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CommandType(CommandType): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsPrepared(): PrivateScope, Public, HideBySig, SpecialName
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    set_Connection(MySqlConnection): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Transaction(): PrivateScope, Public, HideBySig, SpecialName
    set_Transaction(MySqlTransaction): PrivateScope, Public, HideBySig, SpecialName
    get_EnableCaching(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableCaching(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CacheAge(): PrivateScope, Public, HideBySig, SpecialName
    set_CacheAge(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Batch(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Canceled(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BatchableCommandText(): PrivateScope, Assembly, HideBySig, SpecialName
    get_InternallyCreated(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InternallyCreated(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_UpdatedRowSource(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_UpdatedRowSource(UpdateRowSource): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DesignTimeVisible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DesignTimeVisible(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Cancel(): PrivateScope, Public, Virtual, HideBySig
    CreateParameter(): PrivateScope, Public, HideBySig
    ExecuteNonQuery(): PrivateScope, Public, Virtual, HideBySig
    ClearCommandTimer(): PrivateScope, Assembly, HideBySig
    Close(MySqlDataReader): PrivateScope, Assembly, HideBySig
    ResetSqlSelectLimit(): PrivateScope, Assembly, HideBySig
    ExecuteReader(): PrivateScope, Public, HideBySig
    ExecuteReader(CommandBehavior): PrivateScope, Public, HideBySig
    ExecuteScalar(): PrivateScope, Public, Virtual, HideBySig
    Prepare(): PrivateScope, Public, Virtual, HideBySig
    AsyncExecuteWrapper(Int32, CommandBehavior): PrivateScope, Assembly, HideBySig
    BeginExecuteReader(): PrivateScope, Public, HideBySig
    BeginExecuteReader(CommandBehavior): PrivateScope, Public, HideBySig
    EndExecuteReader(IAsyncResult): PrivateScope, Public, HideBySig
    BeginExecuteNonQuery(AsyncCallback, Object): PrivateScope, Public, HideBySig
    BeginExecuteNonQuery(): PrivateScope, Public, HideBySig
    EndExecuteNonQuery(IAsyncResult): PrivateScope, Public, HideBySig
    EstimatedSize(): PrivateScope, Assembly, HideBySig
    AddToBatch(MySqlCommand): PrivateScope, Assembly, HideBySig
    GetCommandTextForBatching(): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.CompressedStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Boolean CanTimeout 'get ' : 
    Int32 ReadTimeout 'get set' : 
    Int32 WriteTimeout 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    get_CanTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReadTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WriteTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_WriteTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlConnection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbConnection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    System.Data.ConnectionState connectionState : Assembly
    MySql.Data.MySqlClient.Driver driver : Assembly
    Boolean hasBeenOpen : Assembly
    MySql.Data.MySqlClient.CommandInterceptor commandInterceptor : Assembly
  Properties:
    MySql.Data.MySqlClient.PerformanceMonitor PerfMonitor 'get set' : 
    MySql.Data.MySqlClient.ProcedureCache ProcedureCache 'get set' : 
    MySql.Data.MySqlClient.MySqlConnectionStringBuilder Settings 'get set' : 
    MySql.Data.MySqlClient.MySqlDataReader Reader 'get set' : 
    Boolean SoftClosed 'get ' : 
    Boolean IsInUse 'get set' : 
    Boolean IsClone 'get set' : 
    Boolean ParentHasbeenOpen 'get set' : 
    Int32 ServerThread 'get ' : 
    System.String DataSource 'get ' : 
    Int32 ConnectionTimeout 'get ' : 
    System.String Database 'get ' : 
    Boolean UseCompression 'get ' : 
    System.Data.ConnectionState State 'get ' : 
    System.String ServerVersion 'get ' : 
    System.String ConnectionString 'get set' : 
    Boolean IsPasswordExpired 'get ' : 
  Events:
    MySql.Data.MySqlClient.MySqlInfoMessageEventHandler InfoMessage: 
  Methods:
    add_InfoMessage(MySqlInfoMessageEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_InfoMessage(MySqlInfoMessageEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_PerfMonitor(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ProcedureCache(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Settings(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Reader(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Reader(MySqlDataReader): PrivateScope, Assembly, HideBySig, SpecialName
    OnInfoMessage(MySqlInfoMessageEventArgs): PrivateScope, Assembly, HideBySig
    get_SoftClosed(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsInUse(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IsInUse(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsClone(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IsClone(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ParentHasbeenOpen(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ParentHasbeenOpen(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ServerThread(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ConnectionTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Database(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UseCompression(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ServerVersion(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ConnectionString(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ConnectionString(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsPasswordExpired(): PrivateScope, Public, HideBySig, SpecialName
    BeginTransaction(): PrivateScope, Public, HideBySig
    BeginTransaction(IsolationLevel): PrivateScope, Public, HideBySig
    ChangeDatabase(String): PrivateScope, Public, Virtual, HideBySig
    SetState(ConnectionState, Boolean): PrivateScope, Assembly, HideBySig
    Ping(): PrivateScope, Public, HideBySig
    Open(): PrivateScope, Public, Virtual, HideBySig
    CreateCommand(): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Assembly, HideBySig
    CloseFully(): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    CurrentDatabase(): PrivateScope, Assembly, HideBySig
    HandleTimeoutOrThreadAbort(Exception): PrivateScope, Assembly, HideBySig
    CancelQuery(Int32): PrivateScope, Public, HideBySig
    SetCommandTimeout(Int32): PrivateScope, Assembly, HideBySig
    ClearCommandTimeout(): PrivateScope, Assembly, HideBySig
    GetSchemaCollection(String, String[]): PrivateScope, Public, HideBySig
    ClearPool(MySqlConnection): PrivateScope, Public, Static, HideBySig
    ClearAllPools(): PrivateScope, Public, Static, HideBySig
    Throw(Exception): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, HideBySig
    BeginTransactionAsync(): PrivateScope, Public, HideBySig
    BeginTransactionAsync(CancellationToken): PrivateScope, Public, HideBySig
    BeginTransactionAsync(IsolationLevel): PrivateScope, Public, HideBySig
    BeginTransactionAsync(IsolationLevel, CancellationToken): PrivateScope, Public, HideBySig
    ChangeDataBaseAsync(String): PrivateScope, Public, HideBySig
    ChangeDataBaseAsync(String, CancellationToken): PrivateScope, Public, HideBySig
    CloseAsync(): PrivateScope, Public, HideBySig
    CloseAsync(CancellationToken): PrivateScope, Public, HideBySig
    ClearPoolAsync(MySqlConnection): PrivateScope, Public, HideBySig
    ClearPoolAsync(MySqlConnection, CancellationToken): PrivateScope, Public, HideBySig
    ClearAllPoolsAsync(): PrivateScope, Public, HideBySig
    ClearAllPoolsAsync(CancellationToken): PrivateScope, Public, HideBySig
    GetSchemaCollectionAsync(String, String[]): PrivateScope, Public, HideBySig
    GetSchemaCollectionAsync(String, String[], CancellationToken): PrivateScope, Public, HideBySig
    GetSchema(): PrivateScope, Public, Virtual, HideBySig
    GetSchema(String): PrivateScope, Public, Virtual, HideBySig
    GetSchema(String, String[]): PrivateScope, Public, Virtual, HideBySig
    EnlistTransaction(Transaction): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.MySqlInfoMessageEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, MySqlInfoMessageEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, MySqlInfoMessageEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.MySqlInfoMessageEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlError[] errors 'get set' : 
  Methods:
    get_errors(): PrivateScope, Public, HideBySig, SpecialName
    set_errors(MySqlError[]): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.CommandTimer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.Crypt: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Get411Password(String, String): PrivateScope, Public, Static, HideBySig
    EncryptPassword(String, String, Boolean): PrivateScope, Public, Static, HideBySig
Class MySql.Data.MySqlClient.MySqlDataReader: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbDataReader
    Void .ctor(MySql.Data.MySqlClient.MySqlCommand, MySql.Data.MySqlClient.PreparableStatement, System.Data.CommandBehavior): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 affectedRows : Assembly
    MySql.Data.MySqlClient.Driver driver : Assembly
  Properties:
    MySql.Data.MySqlClient.PreparableStatement Statement 'get ' : 
    MySql.Data.MySqlClient.MySqlCommand Command 'get set' : 
    MySql.Data.MySqlClient.ResultSet ResultSet 'get set' : 
    System.Data.CommandBehavior CommandBehavior 'get set' : 
    Int32 FieldCount 'get ' : 
    Boolean HasRows 'get ' : 
    Boolean IsClosed 'get ' : 
    Int32 RecordsAffected 'get ' : 
    System.Object Item [Int32] 'get ' : 
    System.Object Item [System.String] 'get ' : 
    Int32 Depth 'get ' : 
  Methods:
    get_Statement(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Command(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ResultSet(): PrivateScope, Assembly, HideBySig, SpecialName
    get_CommandBehavior(): PrivateScope, Assembly, HideBySig, SpecialName
    get_FieldCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HasRows(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsClosed(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RecordsAffected(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    GetBoolean(String): PrivateScope, Public, HideBySig
    GetBoolean(Int32): PrivateScope, Public, Virtual, HideBySig
    GetByte(String): PrivateScope, Public, HideBySig
    GetByte(Int32): PrivateScope, Public, Virtual, HideBySig
    GetSByte(String): PrivateScope, Public, HideBySig
    GetSByte(Int32): PrivateScope, Public, HideBySig
    GetBytes(Int32, Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetChar(String): PrivateScope, Public, HideBySig
    GetChar(Int32): PrivateScope, Public, Virtual, HideBySig
    GetChars(Int32, Int64, Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetDataTypeName(Int32): PrivateScope, Public, Virtual, HideBySig
    GetMySqlDateTime(String): PrivateScope, Public, HideBySig
    GetMySqlDateTime(Int32): PrivateScope, Public, HideBySig
    GetDateTime(String): PrivateScope, Public, HideBySig
    GetDateTime(Int32): PrivateScope, Public, Virtual, HideBySig
    GetMySqlDecimal(String): PrivateScope, Public, HideBySig
    GetMySqlDecimal(Int32): PrivateScope, Public, HideBySig
    GetDecimal(String): PrivateScope, Public, HideBySig
    GetDecimal(Int32): PrivateScope, Public, Virtual, HideBySig
    GetDouble(String): PrivateScope, Public, HideBySig
    GetDouble(Int32): PrivateScope, Public, Virtual, HideBySig
    GetFieldType(String): PrivateScope, Public, HideBySig
    GetFieldType(Int32): PrivateScope, Public, Virtual, HideBySig
    GetFloat(String): PrivateScope, Public, HideBySig
    GetFloat(Int32): PrivateScope, Public, Virtual, HideBySig
    GetGuid(String): PrivateScope, Public, HideBySig
    GetGuid(Int32): PrivateScope, Public, Virtual, HideBySig
    GetInt16(String): PrivateScope, Public, HideBySig
    GetInt16(Int32): PrivateScope, Public, Virtual, HideBySig
    GetInt32(String): PrivateScope, Public, HideBySig
    GetInt32(Int32): PrivateScope, Public, Virtual, HideBySig
    GetInt64(String): PrivateScope, Public, HideBySig
    GetInt64(Int32): PrivateScope, Public, Virtual, HideBySig
    GetName(Int32): PrivateScope, Public, Virtual, HideBySig
    GetOrdinal(String): PrivateScope, Public, Virtual, HideBySig
    GetString(String): PrivateScope, Public, HideBySig
    GetString(Int32): PrivateScope, Public, Virtual, HideBySig
    GetTimeSpan(String): PrivateScope, Public, HideBySig
    GetTimeSpan(Int32): PrivateScope, Public, HideBySig
    GetValue(Int32): PrivateScope, Public, Virtual, HideBySig
    GetValues(Object[]): PrivateScope, Public, Virtual, HideBySig
    GetUInt16(String): PrivateScope, Public, HideBySig
    GetUInt16(Int32): PrivateScope, Public, HideBySig
    GetUInt32(String): PrivateScope, Public, HideBySig
    GetUInt32(Int32): PrivateScope, Public, HideBySig
    GetUInt64(String): PrivateScope, Public, HideBySig
    GetUInt64(Int32): PrivateScope, Public, HideBySig
    IsDBNull(Int32): PrivateScope, Public, Virtual, HideBySig
    NextResult(): PrivateScope, Public, Virtual, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
    GetMySqlGeometry(Int32): PrivateScope, Public, HideBySig
    GetMySqlGeometry(String): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    GetFieldValue(Int32): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(Boolean): PrivateScope, Assembly, HideBySig
    GetSchemaTable(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.Driver: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 timeZoneOffset : Assembly
    MySql.Data.MySqlClient.MySqlDataReader reader : Assembly
  Properties:
    System.DateTime IdleSince 'get set' : 
    Int32 ThreadID 'get ' : 
    MySql.Data.Common.DBVersion Version 'get ' : 
    MySql.Data.MySqlClient.MySqlConnectionStringBuilder Settings 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    MySql.Data.MySqlClient.MySqlPromotableTransaction currentTransaction 'get set' : 
    Boolean IsInActiveUse 'get set' : 
    Boolean IsOpen 'get set' : 
    MySql.Data.MySqlClient.MySqlPool Pool 'get set' : 
    Int64 MaxPacketSize 'get set' : 
    Boolean SupportsOutputParameters 'get ' : 
    Boolean SupportsBatch 'get ' : 
    Boolean SupportsConnectAttrs 'get ' : 
    Boolean SupportsPasswordExpiration 'get ' : 
    Boolean IsPasswordExpired 'get set' : 
  Methods:
    get_IdleSince(): PrivateScope, Public, HideBySig, SpecialName
    set_IdleSince(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_ThreadID(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    set_Settings(MySqlConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_currentTransaction(): PrivateScope, Public, HideBySig, SpecialName
    set_currentTransaction(MySqlPromotableTransaction): PrivateScope, Public, HideBySig, SpecialName
    get_IsInActiveUse(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInActiveUse(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
    get_Pool(): PrivateScope, Public, HideBySig, SpecialName
    set_Pool(MySqlPool): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPacketSize(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsOutputParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsBatch(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsConnectAttrs(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsPasswordExpiration(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPasswordExpired(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPasswordExpired(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Property(String): PrivateScope, Public, HideBySig
    ConnectionLifetimeExpired(): PrivateScope, Public, HideBySig
    Create(MySqlConnectionStringBuilder): PrivateScope, Public, Static, HideBySig
    HasStatus(ServerStatusFlags): PrivateScope, Public, HideBySig
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Configure(MySqlConnection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReportWarnings(MySqlConnection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SendQuery(MySqlPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextResult(Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FetchDataRow(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipDataRow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteDirect(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColumns(Int32): PrivateScope, Public, HideBySig
    PrepareStatement(String, MySqlField[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadColumnValue(Int32, MySqlField, IMySqlValue): PrivateScope, Public, HideBySig
    SkipColumnValue(IMySqlValue): PrivateScope, Public, HideBySig
    ResetTimeout(Int32): PrivateScope, Public, HideBySig
    Ping(): PrivateScope, Public, HideBySig
    SetDatabase(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteStatement(MySqlPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloseStatement(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloseQuery(MySqlConnection, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface MySql.Data.MySqlClient.IDriver: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Int32 ThreadId 'get ' : 
    MySql.Data.Common.DBVersion Version 'get ' : 
    MySql.Data.MySqlClient.ServerStatusFlags ServerStatus 'get ' : 
    MySql.Data.MySqlClient.ClientFlags Flags 'get ' : 
    Int32 WarningCount 'get ' : 
  Methods:
    get_ThreadId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ServerStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Flags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Configure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SendQuery(MySqlPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Ping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetResult(Int32&, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FetchDataRow(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PrepareStatement(String, MySqlField[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ExecuteStatement(MySqlPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseStatement(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDatabase(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadColumnValue(Int32, MySqlField, IMySqlValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SkipColumnValue(IMySqlValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetColumnsData(MySqlField[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WarningCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class MySql.Data.MySqlClient.MySqlException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Data.Common.DbException
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Number 'get ' : 
    Boolean IsFatal 'get ' : 
    Boolean IsQueryAborted 'get ' : 
    System.String SqlState 'get set' : 
    UInt32 Code 'get set' : 
  Methods:
    get_Number(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFatal(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsQueryAborted(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SqlState(): PrivateScope, Public, HideBySig, SpecialName
    get_Code(): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.MySqlClient.ColumnFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.ColumnFlags NOT_NULL = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags PRIMARY_KEY = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags UNIQUE_KEY = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags MULTIPLE_KEY = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags BLOB = 16 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags UNSIGNED = 32 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags ZERO_FILL = 64 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags BINARY = 128 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags ENUM = 256 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags AUTO_INCREMENT = 512 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags TIMESTAMP = 1024 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags SET = 2048 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ColumnFlags NUMBER = 32768 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.MySqlField: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.Driver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String CatalogName : Public
    Int32 ColumnLength : Public
    System.String ColumnName : Public
    System.String OriginalColumnName : Public
    System.String TableName : Public
    System.String RealTableName : Public
    System.String DatabaseName : Public
    System.Text.Encoding Encoding : Public
    MySql.Data.MySqlClient.Driver driver : Assembly
  Properties:
    Int32 CharacterSetIndex 'get set' : 
    MySql.Data.MySqlClient.MySqlDbType Type 'get set' : 
    Byte Precision 'get set' : 
    Byte Scale 'get set' : 
    Int32 MaxLength 'get set' : 
    MySql.Data.MySqlClient.ColumnFlags Flags 'get set' : 
    Boolean IsAutoIncrement 'get ' : 
    Boolean IsNumeric 'get ' : 
    Boolean AllowsNull 'get ' : 
    Boolean IsUnique 'get ' : 
    Boolean IsPrimaryKey 'get ' : 
    Boolean IsBlob 'get ' : 
    Boolean IsBinary 'get ' : 
    Boolean IsUnsigned 'get ' : 
    Boolean IsTextField 'get ' : 
    System.Collections.Generic.List`1[System.Type] TypeConversions 'get ' : 
  Methods:
    get_CharacterSetIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_CharacterSetIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Precision(): PrivateScope, Public, HideBySig, SpecialName
    set_Precision(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoIncrement(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNumeric(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowsNull(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnique(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrimaryKey(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBlob(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBinary(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnsigned(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTextField(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeConversions(): PrivateScope, Public, HideBySig, SpecialName
    SetTypeAndFlags(MySqlDbType, ColumnFlags): PrivateScope, Public, HideBySig
    AddTypeConversion(Type): PrivateScope, Public, HideBySig
    GetValueObject(): PrivateScope, Public, HideBySig
    GetIMySqlValue(MySqlDbType): PrivateScope, Public, Static, HideBySig
Class MySql.Data.MySqlClient.CustomInstaller: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Configuration.Install.Installer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Install(IDictionary): PrivateScope, Public, Virtual, HideBySig
    UpdateMachineConfigs(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Uninstall(IDictionary): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.SystemPerformanceMonitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.PerformanceMonitor
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddHardProcedureQuery(): PrivateScope, Public, Virtual, HideBySig
    AddSoftProcedureQuery(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlCommandBuilder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbCommandBuilder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlDataAdapter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlDataAdapter DataAdapter 'get set' : 
  Methods:
    get_DataAdapter(): PrivateScope, Public, HideBySig, SpecialName
    set_DataAdapter(MySqlDataAdapter): PrivateScope, Public, HideBySig, SpecialName
    DeriveParameters(MySqlCommand): PrivateScope, Public, Static, HideBySig
    GetDeleteCommand(): PrivateScope, Public, HideBySig
    GetUpdateCommand(): PrivateScope, Public, HideBySig
    GetInsertCommand(): PrivateScope, Public, HideBySig
    QuoteIdentifier(String): PrivateScope, Public, Virtual, HideBySig
    UnquoteIdentifier(String): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlDataAdapter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbDataAdapter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlCommand): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlCommand DeleteCommand 'get set' : 
    MySql.Data.MySqlClient.MySqlCommand InsertCommand 'get set' : 
    MySql.Data.MySqlClient.MySqlCommand SelectCommand 'get set' : 
    MySql.Data.MySqlClient.MySqlCommand UpdateCommand 'get set' : 
    Boolean LoadDefaults 'get set' : 
    Int32 UpdateBatchSize 'get set' : 
  Events:
    MySql.Data.MySqlClient.MySqlRowUpdatingEventHandler RowUpdating: 
    MySql.Data.MySqlClient.MySqlRowUpdatedEventHandler RowUpdated: 
  Methods:
    add_RowUpdating(MySqlRowUpdatingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_RowUpdating(MySqlRowUpdatingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_RowUpdated(MySqlRowUpdatedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_RowUpdated(MySqlRowUpdatedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_DeleteCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_DeleteCommand(MySqlCommand): PrivateScope, Public, HideBySig, SpecialName
    get_InsertCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_InsertCommand(MySqlCommand): PrivateScope, Public, HideBySig, SpecialName
    get_SelectCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectCommand(MySqlCommand): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_UpdateCommand(MySqlCommand): PrivateScope, Public, HideBySig, SpecialName
    get_LoadDefaults(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LoadDefaults(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_UpdateBatchSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_UpdateBatchSize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FillAsync(DataSet): PrivateScope, Public, HideBySig
    FillAsync(DataSet, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(DataTable): PrivateScope, Public, HideBySig
    FillAsync(DataTable, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(DataSet, String): PrivateScope, Public, HideBySig
    FillAsync(DataSet, String, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(DataTable, IDataReader): PrivateScope, Public, HideBySig
    FillAsync(DataTable, IDataReader, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(DataTable, IDbCommand, CommandBehavior): PrivateScope, Public, HideBySig
    FillAsync(DataTable, IDbCommand, CommandBehavior, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(Int32, Int32, DataTable[]): PrivateScope, Public, HideBySig
    FillAsync(Int32, Int32, CancellationToken, DataTable[]): PrivateScope, Public, HideBySig
    FillAsync(DataSet, Int32, Int32, String): PrivateScope, Public, HideBySig
    FillAsync(DataSet, Int32, Int32, String, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(DataSet, String, IDataReader, Int32, Int32): PrivateScope, Public, HideBySig
    FillAsync(DataSet, String, IDataReader, Int32, Int32, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(DataTable[], Int32, Int32, IDbCommand, CommandBehavior): PrivateScope, Public, HideBySig
    FillAsync(DataTable[], Int32, Int32, IDbCommand, CommandBehavior, CancellationToken): PrivateScope, Public, HideBySig
    FillAsync(DataSet, Int32, Int32, String, IDbCommand, CommandBehavior): PrivateScope, Public, HideBySig
    FillAsync(DataSet, Int32, Int32, String, IDbCommand, CommandBehavior, CancellationToken): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType, CancellationToken): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType, String): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType, String, CancellationToken): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType, String, IDataReader): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType, String, IDataReader, CancellationToken): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType, IDbCommand, String, CommandBehavior): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataSet, SchemaType, IDbCommand, String, CommandBehavior, CancellationToken): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataTable, SchemaType): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataTable, SchemaType, CancellationToken): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataTable, SchemaType, IDataReader): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataTable, SchemaType, IDataReader, CancellationToken): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataTable, SchemaType, IDbCommand, CommandBehavior): PrivateScope, Public, HideBySig
    FillSchemaAsync(DataTable, SchemaType, IDbCommand, CommandBehavior, CancellationToken): PrivateScope, Public, HideBySig
    UpdateAsync(DataRow[]): PrivateScope, Public, HideBySig
    UpdateAsync(DataRow[], CancellationToken): PrivateScope, Public, HideBySig
    UpdateAsync(DataSet): PrivateScope, Public, HideBySig
    UpdateAsync(DataSet, CancellationToken): PrivateScope, Public, HideBySig
    UpdateAsync(DataTable): PrivateScope, Public, HideBySig
    UpdateAsync(DataTable, CancellationToken): PrivateScope, Public, HideBySig
    UpdateAsync(DataRow[], DataTableMapping): PrivateScope, Public, HideBySig
    UpdateAsync(DataRow[], DataTableMapping, CancellationToken): PrivateScope, Public, HideBySig
    UpdateAsync(DataSet, String): PrivateScope, Public, HideBySig
    UpdateAsync(DataSet, String, CancellationToken): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.MySqlRowUpdatingEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, MySqlRowUpdatingEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, MySqlRowUpdatingEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.MySqlRowUpdatedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, MySqlRowUpdatedEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, MySqlRowUpdatedEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.MySqlRowUpdatingEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.RowUpdatingEventArgs
    Void .ctor(System.Data.DataRow, System.Data.IDbCommand, System.Data.StatementType, System.Data.Common.DataTableMapping): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlCommand Command 'get set' : 
  Methods:
    get_Command(): PrivateScope, Public, HideBySig, SpecialName
    set_Command(MySqlCommand): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.MySqlRowUpdatedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.RowUpdatedEventArgs
    Void .ctor(System.Data.DataRow, System.Data.IDbCommand, System.Data.StatementType, System.Data.Common.DataTableMapping): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlCommand Command 'get ' : 
  Methods:
    get_Command(): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.MySqlClientPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Data.Common.DBDataPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlClientPermissionAttribute): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.Common.DBDataPermission): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(String, String, KeyRestrictionBehavior): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlClientPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Data.Common.DBDataPermissionAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlConfiguration: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Configuration.ConfigurationSection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlConfiguration Settings 'get ' : 
    MySql.Data.MySqlClient.GenericConfigurationElementCollection`1[MySql.Data.MySqlClient.InterceptorConfigurationElement] ExceptionInterceptors 'get ' : 
    MySql.Data.MySqlClient.GenericConfigurationElementCollection`1[MySql.Data.MySqlClient.InterceptorConfigurationElement] CommandInterceptors 'get ' : 
    MySql.Data.MySqlClient.GenericConfigurationElementCollection`1[MySql.Data.MySqlClient.AuthenticationPluginConfigurationElement] AuthenticationPlugins 'get ' : 
    MySql.Data.MySqlClient.ReplicationConfigurationElement Replication 'get set' : 
  Methods:
    get_Settings(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExceptionInterceptors(): PrivateScope, Public, HideBySig, SpecialName
    get_CommandInterceptors(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthenticationPlugins(): PrivateScope, Public, HideBySig, SpecialName
    get_Replication(): PrivateScope, Public, HideBySig, SpecialName
    set_Replication(ReplicationConfigurationElement): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.AuthenticationPluginConfigurationElement: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Configuration.ConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Type 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(String): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.InterceptorConfigurationElement: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Configuration.ConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Type 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(String): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.GenericConfigurationElementCollection`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: T, System.Configuration.ConfigurationElement,  DefaultConstructor
  :System.Configuration.ConfigurationElementCollection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.MySqlHelper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    ExecuteDataRowAsync(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteDataRowAsync(String, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteDataRow(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteDataset(String, String): PrivateScope, Public, Static, HideBySig
    ExecuteDataset(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteDataset(MySqlConnection, String): PrivateScope, Public, Static, HideBySig
    ExecuteDataset(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    UpdateDataSet(String, String, DataSet, String): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(String, String): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(String, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(String, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(MySqlConnection, String): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(MySqlConnection, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteDatasetAsync(MySqlConnection, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    UpdateDataSetAsync(String, String, DataSet, String): PrivateScope, Public, Static, HideBySig
    UpdateDataSetAsync(String, String, DataSet, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    ExecuteNonQuery(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteNonQuery(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteReader(String, String): PrivateScope, Public, Static, HideBySig
    ExecuteReader(MySqlConnection, String): PrivateScope, Public, Static, HideBySig
    ExecuteReader(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteReader(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteScalar(String, String): PrivateScope, Public, Static, HideBySig
    ExecuteScalar(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteScalar(MySqlConnection, String): PrivateScope, Public, Static, HideBySig
    ExecuteScalar(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    EscapeString(String): PrivateScope, Public, Static, HideBySig
    DoubleQuoteString(String): PrivateScope, Public, Static, HideBySig
    ExecuteNonQueryAsync(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteNonQueryAsync(MySqlConnection, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteNonQueryAsync(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteNonQueryAsync(String, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(String, String): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(String, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(MySqlConnection, String): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(MySqlConnection, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(String, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteReaderAsync(MySqlConnection, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(String, String): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(String, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(String, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(String, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(MySqlConnection, String): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(MySqlConnection, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(MySqlConnection, String, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
    ExecuteScalarAsync(MySqlConnection, String, CancellationToken, MySqlParameter[]): PrivateScope, Public, Static, HideBySig
Class MySql.Data.MySqlClient.MySqlParameter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbParameter
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlDbType, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlDbType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlDbType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlDbType, Int32, System.Data.ParameterDirection, Boolean, Byte, Byte, System.String, System.Data.DataRowVersion, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MySql.Data.MySqlClient.MySqlDbType, System.Data.ParameterDirection, System.String, System.Data.DataRowVersion, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    System.Data.DataRowVersion SourceVersion 'get set' : 
    System.String ParameterName 'get set' : 
    MySql.Data.MySqlClient.MySqlParameterCollection Collection 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    Boolean TypeHasBeenSet 'get ' : 
    System.String BaseName 'get ' : 
    System.Data.ParameterDirection Direction 'get set' : 
    Boolean IsNullable 'get set' : 
    MySql.Data.MySqlClient.MySqlDbType MySqlDbType 'get set' : 
    Byte Precision 'get set' : 
    Byte Scale 'get set' : 
    Int32 Size 'get set' : 
    System.Object Value 'get set' : 
    MySql.Data.Types.IMySqlValue ValueObject 'get set' : 
    System.Collections.IList PossibleValues 'get set' : 
    System.String SourceColumn 'get set' : 
    Boolean SourceColumnNullMapping 'get set' : 
    System.Data.DbType DbType 'get set' : 
  Methods:
    get_SourceVersion(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SourceVersion(DataRowVersion): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    get_ParameterName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ParameterName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Collection(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Collection(MySqlParameterCollection): PrivateScope, Assembly, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Assembly, HideBySig, SpecialName
    get_TypeHasBeenSet(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BaseName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Direction(ParameterDirection): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsNullable(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsNullable(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MySqlDbType(): PrivateScope, Public, HideBySig, SpecialName
    set_MySqlDbType(MySqlDbType): PrivateScope, Public, HideBySig, SpecialName
    get_Precision(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Precision(Byte): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Scale(Byte): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ValueObject(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PossibleValues(): PrivateScope, Public, HideBySig, SpecialName
    set_PossibleValues(IList): PrivateScope, Assembly, HideBySig, SpecialName
    get_SourceColumn(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SourceColumn(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SourceColumnNullMapping(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SourceColumnNullMapping(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DbType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DbType(DbType): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetPSType(): PrivateScope, Assembly, HideBySig
    Serialize(MySqlPacket, Boolean, MySqlConnectionStringBuilder): PrivateScope, Assembly, HideBySig
    EstimatedSize(): PrivateScope, Assembly, HideBySig
    ResetDbType(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlParameterCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbParameterCollection
    Void .ctor(MySql.Data.MySqlClient.MySqlCommand): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean containsUnnamedParameters : Assembly
  Properties:
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Int32 Count 'get ' : 
    MySql.Data.MySqlClient.MySqlParameter Item [Int32] 'get set' : 
    MySql.Data.MySqlClient.MySqlParameter Item [System.String] 'get set' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, MySqlParameter): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String, MySqlParameter): PrivateScope, Public, HideBySig, SpecialName
    Add(String, MySqlDbType, Int32, String): PrivateScope, Public, HideBySig
    Add(MySqlParameter): PrivateScope, Public, HideBySig
    AddWithValue(String, Object): PrivateScope, Public, HideBySig
    Add(String, MySqlDbType): PrivateScope, Public, HideBySig
    Add(String, MySqlDbType, Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    IndexOf(String): PrivateScope, Public, Virtual, HideBySig
    IndexOf(Object): PrivateScope, Public, Virtual, HideBySig
    ParameterNameChanged(MySqlParameter, String, String): PrivateScope, Assembly, HideBySig
    GetParameterFlexible(String, Boolean): PrivateScope, Assembly, HideBySig
    AddRange(Array): PrivateScope, Public, Virtual, HideBySig
    Add(Object): PrivateScope, Public, Virtual, HideBySig
    Contains(String): PrivateScope, Public, Virtual, HideBySig
    Contains(Object): PrivateScope, Public, Virtual, HideBySig
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    Insert(Int32, Object): PrivateScope, Public, Virtual, HideBySig
    Remove(Object): PrivateScope, Public, Virtual, HideBySig
    RemoveAt(String): PrivateScope, Public, Virtual, HideBySig
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MySql.Data.MySqlClient.MySqlTransactionScope: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection, System.Transactions.Transaction, MySql.Data.MySqlClient.MySqlTransaction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySql.Data.MySqlClient.MySqlConnection connection : Public
    System.Transactions.Transaction baseTransaction : Public
    MySql.Data.MySqlClient.MySqlTransaction simpleTransaction : Public
    Int32 rollbackThreadId : Public
  Methods:
    Rollback(SinglePhaseEnlistment): PrivateScope, Public, HideBySig
    SinglePhaseCommit(SinglePhaseEnlistment): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.MySqlPromotableTransaction: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection, System.Transactions.Transaction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Transactions.IPromotableSinglePhaseNotification
    System.Transactions.ITransactionPromoter
  Properties:
    System.Transactions.Transaction BaseTransaction 'get ' : 
    Boolean InRollback 'get ' : 
  Methods:
    get_BaseTransaction(): PrivateScope, Public, HideBySig, SpecialName
    get_InRollback(): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.DriverTransactionManager: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDriverInTransaction(Transaction): PrivateScope, Public, Static, HideBySig
    SetDriverInTransaction(Driver): PrivateScope, Public, Static, HideBySig
    RemoveDriverInTransaction(Transaction): PrivateScope, Public, Static, HideBySig
Class MySql.Data.MySqlClient.MySqlSecurityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MarshalByRefObject
  Methods:
    CreatePermissionSet(Boolean): PrivateScope, Public, Static, HideBySig
Class MySql.Data.MySqlClient.BaseCommandInterceptor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    ExecuteScalar(String, Object&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNonQuery(String, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteReader(String, CommandBehavior, MySqlDataReader&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(MySqlConnection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.CommandInterceptor: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MySql.Data.MySqlClient.Interceptor
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ExecuteScalar(String, Object&): PrivateScope, Public, HideBySig
    ExecuteNonQuery(String, Int32&): PrivateScope, Public, HideBySig
    ExecuteReader(String, CommandBehavior, MySqlDataReader&): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.Interceptor: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
Class MySql.Data.MySqlClient.ISSchemaProvider: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.SchemaProvider
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDatabases(String[]): PrivateScope, Public, Virtual, HideBySig
    GetTables(String[]): PrivateScope, Public, Virtual, HideBySig
    GetColumns(String[]): PrivateScope, Public, Virtual, HideBySig
    GetProcedures(String[]): PrivateScope, Public, Virtual, HideBySig
    CreateParametersTable(): PrivateScope, Assembly, HideBySig
    GetProcedureParameters(String[], MySqlSchemaCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetForeignKeys(String[]): PrivateScope, Public, Virtual, HideBySig
    GetForeignKeyColumns(String[]): PrivateScope, Public, Virtual, HideBySig
    GetParametersFromShowCreate(MySqlSchemaCollection, String[], MySqlSchemaCollection): PrivateScope, Assembly, HideBySig
Class MySql.Data.MySqlClient.MySqlBaseConnectionStringBuilder: AutoLayout, AnsiClass, Class, Public, Abstract
  :System.Data.Common.DbConnectionStringBuilder
  Fields:
    MySql.Data.common.MySqlConnectionStringOptionCollection Options : Assembly, Static, InitOnly
  Properties:
    Boolean HasProcAccess 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Object] values 'get set' : 
    System.String Server 'get set' : 
    System.String Database 'get set' : 
    MySql.Data.MySqlClient.MySqlConnectionProtocol ConnectionProtocol 'get set' : 
    UInt32 Port 'get set' : 
    Boolean DnsSrv 'get set' : 
    System.String UserID 'get set' : 
    System.String Password 'get set' : 
    System.String CertificateFile 'get set' : 
    System.String CertificatePassword 'get set' : 
    MySql.Data.MySqlClient.MySqlCertificateStoreLocation CertificateStoreLocation 'get set' : 
    System.String CertificateThumbprint 'get set' : 
    MySql.Data.MySqlClient.MySqlSslMode SslMode 'get set' : 
    System.String SslCa 'get set' : 
    System.String TlsVersion 'get set' : 
    System.String SslKey 'get set' : 
    System.String SslCert 'get set' : 
    System.String SshHostName 'get set' : 
    UInt32 SshPort 'get set' : 
    System.String SshUserName 'get set' : 
    System.String SshPassword 'get set' : 
    System.String SshKeyFile 'get set' : 
    System.String SshPassphrase 'get set' : 
    UInt32 Keepalive 'get set' : 
    System.String CharacterSet 'get set' : 
  Methods:
    get_HasProcAccess(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HasProcAccess(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_values(): PrivateScope, Assembly, HideBySig, SpecialName
    set_values(Dictionary`2): PrivateScope, Assembly, HideBySig, SpecialName
    get_Server(): PrivateScope, Public, HideBySig, SpecialName
    set_Server(String): PrivateScope, Public, HideBySig, SpecialName
    get_Database(): PrivateScope, Public, HideBySig, SpecialName
    set_Database(String): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionProtocol(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionProtocol(MySqlConnectionProtocol): PrivateScope, Public, HideBySig, SpecialName
    get_Port(): PrivateScope, Public, HideBySig, SpecialName
    set_Port(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DnsSrv(): PrivateScope, Public, HideBySig, SpecialName
    set_DnsSrv(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UserID(): PrivateScope, Public, HideBySig, SpecialName
    set_UserID(String): PrivateScope, Public, HideBySig, SpecialName
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    set_Password(String): PrivateScope, Public, HideBySig, SpecialName
    get_CertificateFile(): PrivateScope, Public, HideBySig, SpecialName
    set_CertificateFile(String): PrivateScope, Public, HideBySig, SpecialName
    get_CertificatePassword(): PrivateScope, Public, HideBySig, SpecialName
    set_CertificatePassword(String): PrivateScope, Public, HideBySig, SpecialName
    get_CertificateStoreLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_CertificateStoreLocation(MySqlCertificateStoreLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CertificateThumbprint(): PrivateScope, Public, HideBySig, SpecialName
    set_CertificateThumbprint(String): PrivateScope, Public, HideBySig, SpecialName
    get_SslMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SslMode(MySqlSslMode): PrivateScope, Public, HideBySig, SpecialName
    get_SslCa(): PrivateScope, Public, HideBySig, SpecialName
    set_SslCa(String): PrivateScope, Public, HideBySig, SpecialName
    get_TlsVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_TlsVersion(String): PrivateScope, Public, HideBySig, SpecialName
    get_SslKey(): PrivateScope, Public, HideBySig, SpecialName
    set_SslKey(String): PrivateScope, Public, HideBySig, SpecialName
    get_SslCert(): PrivateScope, Public, HideBySig, SpecialName
    set_SslCert(String): PrivateScope, Public, HideBySig, SpecialName
    get_SshHostName(): PrivateScope, Public, HideBySig, SpecialName
    set_SshHostName(String): PrivateScope, Public, HideBySig, SpecialName
    get_SshPort(): PrivateScope, Public, HideBySig, SpecialName
    set_SshPort(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_SshUserName(): PrivateScope, Public, HideBySig, SpecialName
    set_SshUserName(String): PrivateScope, Public, HideBySig, SpecialName
    get_SshPassword(): PrivateScope, Public, HideBySig, SpecialName
    set_SshPassword(String): PrivateScope, Public, HideBySig, SpecialName
    get_SshKeyFile(): PrivateScope, Public, HideBySig, SpecialName
    set_SshKeyFile(String): PrivateScope, Public, HideBySig, SpecialName
    get_SshPassphrase(): PrivateScope, Public, HideBySig, SpecialName
    set_SshPassphrase(String): PrivateScope, Public, HideBySig, SpecialName
    get_Keepalive(): PrivateScope, Public, HideBySig, SpecialName
    set_Keepalive(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CharacterSet(): PrivateScope, Public, HideBySig, SpecialName
    set_CharacterSet(String): PrivateScope, Public, HideBySig, SpecialName
    AnalyzeConnectionString(String, Boolean, Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    GetConnectionString(Boolean): PrivateScope, Public, HideBySig
    GetOption(String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    IsSshEnabled(): PrivateScope, Assembly, HideBySig
    SetValue(String, Object, String(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    SetInternalValue(String, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
Class MySql.Data.MySqlClient.MySqlClientFactory: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Data.Common.DbProviderFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IServiceProvider
  Fields:
    MySql.Data.MySqlClient.MySqlClientFactory Instance : Public, Static
  Methods:
    CreateCommand(): PrivateScope, Public, Virtual, HideBySig
    CreateConnection(): PrivateScope, Public, Virtual, HideBySig
    CreateParameter(): PrivateScope, Public, Virtual, HideBySig
    CreateConnectionStringBuilder(): PrivateScope, Public, Virtual, HideBySig
    CreateCommandBuilder(): PrivateScope, Public, Virtual, HideBySig
    CreateDataAdapter(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlConnectionStringBuilder: AutoLayout, AnsiClass, Class, Public, Sealed
  :MySql.Data.MySqlClient.MySqlBaseConnectionStringBuilder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySql.Data.common.MySqlConnectionStringOptionCollection Options : Assembly, Static, InitOnly
  Properties:
    System.String PipeName 'get set' : 
    Boolean UseCompression 'get set' : 
    Boolean AllowBatch 'get set' : 
    Boolean Logging 'get set' : 
    System.String SharedMemoryName 'get set' : 
    UInt32 DefaultCommandTimeout 'get set' : 
    UInt32 ConnectionTimeout 'get set' : 
    Boolean AllowLoadLocalInfile 'get set' : 
    Boolean PersistSecurityInfo 'get set' : 
    Boolean IntegratedSecurity 'get set' : 
    Boolean AllowPublicKeyRetrieval 'get set' : 
    Boolean AllowZeroDateTime 'get set' : 
    Boolean ConvertZeroDateTime 'get set' : 
    Boolean UseUsageAdvisor 'get set' : 
    UInt32 ProcedureCacheSize 'get set' : 
    Boolean UsePerformanceMonitor 'get set' : 
    Boolean IgnorePrepare 'get set' : 
    Boolean AutoEnlist 'get set' : 
    Boolean IncludeSecurityAsserts 'get set' : 
    Boolean RespectBinaryFlags 'get set' : 
    Boolean TreatTinyAsBoolean 'get set' : 
    Boolean AllowUserVariables 'get set' : 
    Boolean InteractiveSession 'get set' : 
    Boolean FunctionsReturnString 'get set' : 
    Boolean UseAffectedRows 'get set' : 
    Boolean OldGuids 'get set' : 
    Boolean SqlServerMode 'get set' : 
    Boolean TableCaching 'get set' : 
    Int32 DefaultTableCacheAge 'get set' : 
    Boolean CheckParameters 'get set' : 
    Boolean Replication 'get set' : 
    System.String ExceptionInterceptors 'get set' : 
    System.String CommandInterceptors 'get set' : 
    UInt32 ConnectionLifeTime 'get set' : 
    Boolean Pooling 'get set' : 
    UInt32 MinimumPoolSize 'get set' : 
    UInt32 MaximumPoolSize 'get set' : 
    Boolean ConnectionReset 'get set' : 
    Boolean CacheServerProperties 'get set' : 
    Boolean TreatBlobsAsUTF8 'get set' : 
    System.String BlobAsUTF8IncludePattern 'get set' : 
    System.String BlobAsUTF8ExcludePattern 'get set' : 
    Boolean UseDefaultCommandTimeoutForEF 'get set' : 
    System.Object Item [System.String] 'get set' : 
  Methods:
    set_BlobAsUTF8ExcludePattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_UseDefaultCommandTimeoutForEF(): PrivateScope, Public, HideBySig, SpecialName
    set_UseDefaultCommandTimeoutForEF(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(String, Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig
    ContainsKey(String): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetBlobAsUTF8IncludeRegex(): PrivateScope, Assembly, HideBySig
    GetBlobAsUTF8ExcludeRegex(): PrivateScope, Assembly, HideBySig
    GetOption(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Remove(String): PrivateScope, Public, Virtual, HideBySig
    SetInternalValue(String, Object): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_PipeName(): PrivateScope, Public, HideBySig, SpecialName
    set_PipeName(String): PrivateScope, Public, HideBySig, SpecialName
    get_UseCompression(): PrivateScope, Public, HideBySig, SpecialName
    set_UseCompression(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowBatch(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowBatch(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Logging(): PrivateScope, Public, HideBySig, SpecialName
    set_Logging(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SharedMemoryName(): PrivateScope, Public, HideBySig, SpecialName
    set_SharedMemoryName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultCommandTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCommandTimeout(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionTimeout(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_AllowLoadLocalInfile(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowLoadLocalInfile(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PersistSecurityInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_PersistSecurityInfo(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IntegratedSecurity(): PrivateScope, Public, HideBySig, SpecialName
    set_IntegratedSecurity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowPublicKeyRetrieval(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowPublicKeyRetrieval(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowZeroDateTime(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowZeroDateTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ConvertZeroDateTime(): PrivateScope, Public, HideBySig, SpecialName
    set_ConvertZeroDateTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseUsageAdvisor(): PrivateScope, Public, HideBySig, SpecialName
    set_UseUsageAdvisor(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ProcedureCacheSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ProcedureCacheSize(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_UsePerformanceMonitor(): PrivateScope, Public, HideBySig, SpecialName
    set_UsePerformanceMonitor(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnorePrepare(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnorePrepare(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoEnlist(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoEnlist(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeSecurityAsserts(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeSecurityAsserts(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RespectBinaryFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_RespectBinaryFlags(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TreatTinyAsBoolean(): PrivateScope, Public, HideBySig, SpecialName
    set_TreatTinyAsBoolean(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowUserVariables(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowUserVariables(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InteractiveSession(): PrivateScope, Public, HideBySig, SpecialName
    set_InteractiveSession(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionsReturnString(): PrivateScope, Public, HideBySig, SpecialName
    set_FunctionsReturnString(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseAffectedRows(): PrivateScope, Public, HideBySig, SpecialName
    set_UseAffectedRows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OldGuids(): PrivateScope, Public, HideBySig, SpecialName
    set_OldGuids(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SqlServerMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SqlServerMode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TableCaching(): PrivateScope, Public, HideBySig, SpecialName
    set_TableCaching(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultTableCacheAge(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultTableCacheAge(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CheckParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckParameters(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Replication(): PrivateScope, Public, HideBySig, SpecialName
    set_Replication(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionInterceptors(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptionInterceptors(String): PrivateScope, Public, HideBySig, SpecialName
    get_CommandInterceptors(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandInterceptors(String): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionLifeTime(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionLifeTime(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Pooling(): PrivateScope, Public, HideBySig, SpecialName
    set_Pooling(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumPoolSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumPoolSize(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumPoolSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumPoolSize(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionReset(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionReset(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CacheServerProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_CacheServerProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TreatBlobsAsUTF8(): PrivateScope, Public, HideBySig, SpecialName
    set_TreatBlobsAsUTF8(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BlobAsUTF8IncludePattern(): PrivateScope, Public, HideBySig, SpecialName
    set_BlobAsUTF8IncludePattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_BlobAsUTF8ExcludePattern(): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.MySqlClient.ClientFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt64 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.ClientFlags LONG_PASSWORD = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags FOUND_ROWS = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags LONG_FLAG = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags CONNECT_WITH_DB = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags NO_SCHEMA = 16 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags COMPRESS = 32 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags ODBC = 64 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags LOCAL_FILES = 128 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags IGNORE_SPACE = 256 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags PROTOCOL_41 = 512 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags INTERACTIVE = 1024 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags SSL = 2048 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags IGNORE_SIGPIPE = 4096 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags TRANSACTIONS = 8192 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags RESERVED = 16384 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags SECURE_CONNECTION = 32768 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags MULTI_STATEMENTS = 65536 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags MULTI_RESULTS = 131072 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags PS_MULTI_RESULTS = 262144 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags PLUGIN_AUTH = 524288 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags CONNECT_ATTRS = 1048576 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags CAN_HANDLE_EXPIRED_PASSWORD = 4194304 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags CLIENT_SSL_VERIFY_SERVER_CERT = 1073741824 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ClientFlags CLIENT_REMEMBER_OPTIONS = 2147483648 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.ServerStatusFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.ServerStatusFlags InTransaction = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags AutoCommitMode = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags MoreResults = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags AnotherQuery = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags BadIndex = 16 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags NoIndex = 32 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags CursorExists = 64 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags LastRowSent = 128 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.ServerStatusFlags OutputParameters = 4096 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.DBCmd: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.DBCmd SLEEP = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd QUIT = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd INIT_DB = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd QUERY = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd FIELD_LIST = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd CREATE_DB = 5 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd DROP_DB = 6 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd RELOAD = 7 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd SHUTDOWN = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd STATISTICS = 9 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd PROCESS_INFO = 10 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd CONNECT = 11 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd PROCESS_KILL = 12 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd DEBUG = 13 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd PING = 14 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd TIME = 15 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd DELAYED_INSERT = 16 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd CHANGE_USER = 17 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd BINLOG_DUMP = 18 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd TABLE_DUMP = 19 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd CONNECT_OUT = 20 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd REGISTER_SLAVE = 21 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd PREPARE = 22 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd EXECUTE = 23 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd LONG_DATA = 24 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd CLOSE_STMT = 25 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd RESET_STMT = 26 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd SET_OPTION = 27 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.DBCmd FETCH = 28 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlDbType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlDbType Decimal = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Byte = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Int16 = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Int24 = 9 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Int32 = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Int64 = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Float = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Double = 5 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Timestamp = 7 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Date = 10 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Time = 11 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType DateTime = 12 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Datetime = 12 : Public, Static, Literal, HasDefault (Obsolete)
    MySql.Data.MySqlClient.MySqlDbType Year = 13 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Newdate = 14 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType VarString = 15 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Bit = 16 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType JSON = 245 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType NewDecimal = 246 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Enum = 247 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Set = 248 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType TinyBlob = 249 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType MediumBlob = 250 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType LongBlob = 251 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Blob = 252 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType VarChar = 253 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType String = 254 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Geometry = 255 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType UByte = 501 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType UInt16 = 502 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType UInt24 = 509 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType UInt32 = 503 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType UInt64 = 508 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Binary = 754 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType VarBinary = 753 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType TinyText = 749 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType MediumText = 750 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType LongText = 751 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Text = 752 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDbType Guid = 854 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.Field_Type: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.Field_Type DECIMAL = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type BYTE = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type SHORT = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type LONG = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type FLOAT = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type DOUBLE = 5 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type NULL = 6 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type TIMESTAMP = 7 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type LONGLONG = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type INT24 = 9 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type DATE = 10 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type TIME = 11 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type DATETIME = 12 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type YEAR = 13 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type NEWDATE = 14 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type ENUM = 247 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type SET = 248 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type TINY_BLOB = 249 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type MEDIUM_BLOB = 250 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type LONG_BLOB = 251 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type BLOB = 252 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type VAR_STRING = 253 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Field_Type STRING = 254 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlConnectionProtocol: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlConnectionProtocol Sockets = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol Socket = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol Tcp = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol Pipe = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol NamedPipe = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol UnixSocket = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol Unix = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol SharedMemory = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlConnectionProtocol Memory = 4 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlSslMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlSslMode None = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlSslMode Preferred = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlSslMode Prefered = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlSslMode Required = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlSslMode VerifyCA = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlSslMode VerifyFull = 4 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlDriverType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlDriverType Native = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDriverType Client = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlDriverType Embedded = 2 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlCertificateStoreLocation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlCertificateStoreLocation None = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlCertificateStoreLocation CurrentUser = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlCertificateStoreLocation LocalMachine = 2 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlAuthenticationMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlAuthenticationMode Default = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlAuthenticationMode AUTO = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlAuthenticationMode PLAIN = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlAuthenticationMode MYSQL41 = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlAuthenticationMode EXTERNAL = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlAuthenticationMode SHA256_MEMORY = 4 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.LockContention: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.LockContention Default = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.LockContention NoWait = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.LockContention SkipLocked = 2 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.CompressionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.CompressionType Preferred = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.CompressionType Required = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.CompressionType Disabled = 2 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.MySqlConnectAttrs: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ClientName 'get ' : 
    System.String ClientLicence 'get ' : 
    System.String PID 'get ' : 
    System.String ClientVersion 'get ' : 
    System.String OS 'get ' : 
    System.String Thread 'get ' : 
    System.String Platform 'get ' : 
    System.String OSDetails 'get ' : 
    System.String OSName 'get ' : 
    System.String Framework 'get ' : 
  Methods:
    get_ClientName(): PrivateScope, Public, HideBySig, SpecialName
    get_ClientLicence(): PrivateScope, Public, HideBySig, SpecialName
    get_PID(): PrivateScope, Public, HideBySig, SpecialName
    get_ClientVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_OS(): PrivateScope, Public, HideBySig, SpecialName
    get_Thread(): PrivateScope, Public, HideBySig, SpecialName
    get_Platform(): PrivateScope, Public, HideBySig, SpecialName
    get_OSDetails(): PrivateScope, Public, HideBySig, SpecialName
    get_OSName(): PrivateScope, Public, HideBySig, SpecialName
    get_Framework(): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.MySqlError: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Level 'get ' : 
    Int32 Code 'get ' : 
    System.String Message 'get ' : 
  Methods:
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    get_Code(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.MySqlClient.MySqlErrorCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlErrorCode None = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode HashCheck = 1000 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ISAMCheck = 1001 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode No = 1002 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode Yes = 1003 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateFile = 1004 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateTable = 1005 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateDatabase = 1006 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DatabaseCreateExists = 1007 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DatabaseDropExists = 1008 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DatabaseDropDelete = 1009 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DatabaseDropRemoveDir = 1010 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotDeleteFile = 1011 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotFindSystemRecord = 1012 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotGetStatus = 1013 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotGetWorkingDirectory = 1014 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotLock = 1015 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotOpenFile = 1016 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileNotFound = 1017 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotReadDirectory = 1018 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotSetWorkingDirectory = 1019 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CheckRead = 1020 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DiskFull = 1021 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateKey = 1022 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorOnClose = 1023 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorOnRead = 1024 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorOnRename = 1025 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorOnWrite = 1026 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileUsed = 1027 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileSortAborted = 1028 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FormNotFound = 1029 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode GetErrorNumber = 1030 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IllegalHA = 1031 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode KeyNotFound = 1032 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NotFormFile = 1033 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NotKeyFile = 1034 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OldKeyFile = 1035 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OpenAsReadOnly = 1036 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OutOfMemory = 1037 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OutOfSortMemory = 1038 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnexepectedEOF = 1039 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ConnectionCountError = 1040 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OutOfResources = 1041 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnableToConnectToHost = 1042 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode HandshakeError = 1043 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DatabaseAccessDenied = 1044 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AccessDenied = 1045 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoDatabaseSelected = 1046 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownCommand = 1047 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ColumnCannotBeNull = 1048 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownDatabase = 1049 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableExists = 1050 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BadTable = 1051 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonUnique = 1052 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ServerShutdown = 1053 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BadFieldError = 1054 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongFieldWithGroup = 1055 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongGroupField = 1056 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongSumSelected = 1057 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongValueCount = 1058 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooLongIdentifier = 1059 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateFieldName = 1060 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateKeyName = 1061 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateKeyEntry = 1062 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongFieldSpecifier = 1063 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ParseError = 1064 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EmptyQuery = 1065 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonUniqueTable = 1066 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InvalidDefault = 1067 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MultiplePrimaryKey = 1068 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyKeys = 1069 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyKeysParts = 1070 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooLongKey = 1071 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode KeyColumnDoesNotExist = 1072 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BlobUsedAsKey = 1073 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigFieldLength = 1074 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongAutoKey = 1075 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode Ready = 1076 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NormalShutdown = 1077 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode GotSignal = 1078 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ShutdownComplete = 1079 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForcingClose = 1080 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IPSocketError = 1081 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoSuchIndex = 1082 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongFieldTerminators = 1083 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BlobsAndNoTerminated = 1084 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TextFileNotReadable = 1085 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileExists = 1086 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LoadInfo = 1087 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AlterInfo = 1088 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongSubKey = 1089 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotRemoveAllFields = 1090 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotDropFieldOrKey = 1091 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InsertInfo = 1092 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UpdateTableUsed = 1093 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoSuchThread = 1094 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode KillDenied = 1095 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoTablesUsed = 1096 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigSet = 1097 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoUniqueLogFile = 1098 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableNotLockedForWrite = 1099 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableNotLocked = 1100 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BlobCannotHaveDefault = 1101 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongDatabaseName = 1102 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongTableName = 1103 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigSelect = 1104 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownError = 1105 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownProcedure = 1106 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongParameterCountToProcedure = 1107 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongParametersToProcedure = 1108 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownTable = 1109 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FieldSpecifiedTwice = 1110 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InvalidGroupFunctionUse = 1111 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnsupportedExtenstion = 1112 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableMustHaveColumns = 1113 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RecordFileFull = 1114 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownCharacterSet = 1115 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyTables = 1116 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyFields = 1117 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigRowSize = 1118 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StackOverrun = 1119 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongOuterJoin = 1120 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NullColumnInIndex = 1121 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotFindUDF = 1122 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotInitializeUDF = 1123 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UDFNoPaths = 1124 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UDFExists = 1125 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotOpenLibrary = 1126 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotFindDLEntry = 1127 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FunctionNotDefined = 1128 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode HostIsBlocked = 1129 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode HostNotPrivileged = 1130 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AnonymousUser = 1131 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PasswordNotAllowed = 1132 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PasswordNoMatch = 1133 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UpdateInfo = 1134 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateThread = 1135 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongValueCountOnRow = 1136 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotReopenTable = 1137 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InvalidUseOfNull = 1138 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RegExpError = 1139 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MixOfGroupFunctionAndFields = 1140 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonExistingGrant = 1141 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableAccessDenied = 1142 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ColumnAccessDenied = 1143 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IllegalGrantForTable = 1144 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode GrantWrongHostOrUser = 1145 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoSuchTable = 1146 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonExistingTableGrant = 1147 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NotAllowedCommand = 1148 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SyntaxError = 1149 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DelayedCannotChangeLock = 1150 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyDelayedThreads = 1151 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AbortingConnection = 1152 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PacketTooLarge = 1153 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetReadErrorFromPipe = 1154 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetFCntlError = 1155 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetPacketsOutOfOrder = 1156 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetUncompressError = 1157 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetReadError = 1158 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetReadInterrupted = 1159 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetErrorOnWrite = 1160 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NetWriteInterrupted = 1161 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooLongString = 1162 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableCannotHandleBlob = 1163 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableCannotHandleAutoIncrement = 1164 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DelayedInsertTableLocked = 1165 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongColumnName = 1166 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongKeyColumn = 1167 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongMergeTable = 1168 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateUnique = 1169 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BlobKeyWithoutLength = 1170 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PrimaryCannotHaveNull = 1171 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyRows = 1172 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RequiresPrimaryKey = 1173 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoRAIDCompiled = 1174 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UpdateWithoutKeysInSafeMode = 1175 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode KeyDoesNotExist = 1176 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CheckNoSuchTable = 1177 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CheckNotImplemented = 1178 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotDoThisDuringATransaction = 1179 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorDuringCommit = 1180 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorDuringRollback = 1181 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorDuringFlushLogs = 1182 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorDuringCheckpoint = 1183 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NewAbortingConnection = 1184 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DumpNotImplemented = 1185 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FlushMasterBinLogClosed = 1186 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IndexRebuild = 1187 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MasterError = 1188 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MasterNetRead = 1189 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MasterNetWrite = 1190 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FullTextMatchingKeyNotFound = 1191 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LockOrActiveTransaction = 1192 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownSystemVariable = 1193 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CrashedOnUsage = 1194 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CrashedOnRepair = 1195 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningNotCompleteRollback = 1196 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TransactionCacheFull = 1197 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveMustStop = 1198 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveNotRunning = 1199 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BadSlave = 1200 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MasterInfo = 1201 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveThread = 1202 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyUserConnections = 1203 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SetConstantsOnly = 1204 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LockWaitTimeout = 1205 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LockTableFull = 1206 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ReadOnlyTransaction = 1207 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DropDatabaseWithReadLock = 1208 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CreateDatabaseWithReadLock = 1209 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongArguments = 1210 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoPermissionToCreateUser = 1211 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnionTablesInDifferentDirectory = 1212 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LockDeadlock = 1213 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableCannotHandleFullText = 1214 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotAddForeignConstraint = 1215 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoReferencedRow = 1216 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RowIsReferenced = 1217 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ConnectToMaster = 1218 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode QueryOnMaster = 1219 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorWhenExecutingCommand = 1220 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongUsage = 1221 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongNumberOfColumnsInSelect = 1222 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotUpdateWithReadLock = 1223 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MixingNotAllowed = 1224 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateArgument = 1225 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UserLimitReached = 1226 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SpecifiedAccessDeniedError = 1227 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LocalVariableError = 1228 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode GlobalVariableError = 1229 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NotDefaultError = 1230 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongValueForVariable = 1231 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongTypeForVariable = 1232 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode VariableCannotBeRead = 1233 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotUseOptionHere = 1234 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NotSupportedYet = 1235 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MasterFatalErrorReadingBinLog = 1236 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveIgnoredTable = 1237 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IncorrectGlobalLocalVariable = 1238 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongForeignKeyDefinition = 1239 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode KeyReferenceDoesNotMatchTableReference = 1240 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OpearnColumnsError = 1241 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SubQueryNoOneRow = 1242 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownStatementHandler = 1243 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CorruptHelpDatabase = 1244 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CyclicReference = 1245 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AutoConvert = 1246 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IllegalReference = 1247 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DerivedMustHaveAlias = 1248 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SelectReduced = 1249 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableNameNotAllowedHere = 1250 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NotSupportedAuthMode = 1251 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SpatialCannotHaveNull = 1252 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CollationCharsetMismatch = 1253 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveWasRunning = 1254 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveWasNotRunning = 1255 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigForUncompress = 1256 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ZipLibMemoryError = 1257 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ZipLibBufferError = 1258 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ZipLibDataError = 1259 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CutValueGroupConcat = 1260 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningTooFewRecords = 1261 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningTooManyRecords = 1262 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningNullToNotNull = 1263 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningDataOutOfRange = 1264 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WaningDataTruncated = 1265 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WaningUsingOtherHandler = 1266 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotAggregateTwoCollations = 1267 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DropUserError = 1268 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RevokeGrantsError = 1269 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotAggregateThreeCollations = 1270 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotAggregateNCollations = 1271 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode VariableIsNotStructure = 1272 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownCollation = 1273 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveIgnoreSSLParameters = 1274 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ServerIsInSecureAuthMode = 1275 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WaningFieldResolved = 1276 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BadSlaveUntilCondition = 1277 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MissingSkipSlave = 1278 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorUntilConditionIgnored = 1279 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongNameForIndex = 1280 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongNameForCatalog = 1281 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningQueryCacheResize = 1282 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BadFullTextColumn = 1283 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownKeyCache = 1284 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningHostnameWillNotWork = 1285 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownStorageEngine = 1286 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WaningDeprecatedSyntax = 1287 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonUpdateableTable = 1288 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FeatureDisabled = 1289 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OptionPreventsStatement = 1290 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicatedValueInType = 1291 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TruncatedWrongValue = 1292 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooMuchAutoTimestampColumns = 1293 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InvalidOnUpdate = 1294 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnsupportedPreparedStatement = 1295 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode GetErroMessage = 1296 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode GetTemporaryErrorMessage = 1297 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownTimeZone = 1298 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningInvalidTimestamp = 1299 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InvalidCharacterString = 1300 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningAllowedPacketOverflowed = 1301 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ConflictingDeclarations = 1302 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNoRecursiveCreate = 1303 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureAlreadyExists = 1304 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureDoesNotExist = 1305 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureDropFailed = 1306 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureStoreFailed = 1307 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureLiLabelMismatch = 1308 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureLabelRedefine = 1309 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureLabelMismatch = 1310 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureUninitializedVariable = 1311 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureBadSelect = 1312 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureBadReturn = 1313 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureBadStatement = 1314 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UpdateLogDeprecatedIgnored = 1315 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UpdateLogDeprecatedTranslated = 1316 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode QueryInterrupted = 1317 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNumberOfArguments = 1318 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureConditionMismatch = 1319 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNoReturn = 1320 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNoReturnEnd = 1321 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureBadCursorQuery = 1322 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureBadCursorSelect = 1323 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureCursorMismatch = 1324 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureAlreadyOpen = 1325 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureCursorNotOpen = 1326 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureUndeclaredVariabel = 1327 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureWrongNumberOfFetchArguments = 1328 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureFetchNoData = 1329 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureDuplicateParameter = 1330 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureDuplicateVariable = 1331 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureDuplicateCondition = 1332 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureDuplicateCursor = 1333 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureCannotAlter = 1334 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureSubSelectNYI = 1335 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StatementNotAllowedInStoredFunctionOrTrigger = 1336 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureVariableConditionAfterCursorHandler = 1337 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureCursorAfterHandler = 1338 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureCaseNotFound = 1339 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileParserTooBigFile = 1340 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileParserBadHeader = 1341 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileParserEOFInComment = 1342 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileParserErrorInParameter = 1343 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileParserEOFInUnknownParameter = 1344 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewNoExplain = 1345 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FrmUnknownType = 1346 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongObject = 1347 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonUpdateableColumn = 1348 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewSelectDerived = 1349 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewSelectClause = 1350 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewSelectVariable = 1351 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewSelectTempTable = 1352 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewWrongList = 1353 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningViewMerge = 1354 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningViewWithoutKey = 1355 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewInvalid = 1356 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNoDropStoredProcedure = 1357 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureGotoInHandler = 1358 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerAlreadyExists = 1359 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerDoesNotExist = 1360 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerOnViewOrTempTable = 1361 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerCannotChangeRow = 1362 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerNoSuchRowInTrigger = 1363 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoDefaultForField = 1364 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DivisionByZero = 1365 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TruncatedWrongValueForField = 1366 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IllegalValueForType = 1367 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewNonUpdatableCheck = 1368 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewCheckFailed = 1369 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PrecedureAccessDenied = 1370 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RelayLogFail = 1371 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PasswordLength = 1372 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnknownTargetBinLog = 1373 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IOErrorLogIndexRead = 1374 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogPurgeProhibited = 1375 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FSeekFail = 1376 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogPurgeFatalError = 1377 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LogInUse = 1378 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LogPurgeUnknownError = 1379 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RelayLogInit = 1380 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoBinaryLogging = 1381 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ReservedSyntax = 1382 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WSAStartupFailed = 1383 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DifferentGroupsProcedure = 1384 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoGroupForProcedure = 1385 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OrderWithProcedure = 1386 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LoggingProhibitsChangingOf = 1387 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoFileMapping = 1388 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongMagic = 1389 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PreparedStatementManyParameters = 1390 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode KeyPartZero = 1391 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewChecksum = 1392 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewMultiUpdate = 1393 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewNoInsertFieldList = 1394 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewDeleteMergeView = 1395 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotUser = 1396 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XAERNotA = 1397 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XAERInvalid = 1398 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XAERRemoveFail = 1399 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XAEROutside = 1400 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XAERRemoveError = 1401 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XARBRollback = 1402 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonExistingProcedureGrant = 1403 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ProcedureAutoGrantFail = 1404 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ProcedureAutoRevokeFail = 1405 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DataTooLong = 1406 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureSQLState = 1407 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StartupError = 1408 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LoadFromFixedSizeRowsToVariable = 1409 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateUserWithGrant = 1410 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongValueForType = 1411 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableDefinitionChanged = 1412 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureDuplicateHandler = 1413 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNotVariableArgument = 1414 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNoReturnSet = 1415 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateGeometryObject = 1416 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FailedRoutineBreaksBinLog = 1417 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogUnsafeRoutine = 1418 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogCreateRoutineNeedSuper = 1419 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ExecuteStatementWithOpenCursor = 1420 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StatementHasNoOpenCursor = 1421 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CommitNotAllowedIfStoredFunctionOrTrigger = 1422 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoDefaultForViewField = 1423 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNoRecursion = 1424 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigScale = 1425 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigPrecision = 1426 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MBiggerThanD = 1427 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongLockOfSystemTable = 1428 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ConnectToForeignDataSource = 1429 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode QueryOnForeignDataSource = 1430 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForeignDataSourceDoesNotExist = 1431 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForeignDataStringInvalidCannotCreate = 1432 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForeignDataStringInvalid = 1433 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateFederatedTable = 1434 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerInWrongSchema = 1435 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StackOverrunNeedMore = 1436 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooLongBody = 1437 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningCannotDropDefaultKeyCache = 1438 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooBigDisplayWidth = 1439 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XAERDuplicateID = 1440 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DateTimeFunctionOverflow = 1441 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotUpdateUsedTableInStoredFunctionOrTrigger = 1442 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewPreventUpdate = 1443 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PreparedStatementNoRecursion = 1444 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureCannotSetAutoCommit = 1445 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MalformedDefiner = 1446 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewFrmNoUser = 1447 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewOtherUser = 1448 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoSuchUser = 1449 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForbidSchemaChange = 1450 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RowIsReferenced2 = 1451 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoReferencedRow2 = 1452 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureBadVariableShadow = 1453 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerNoDefiner = 1454 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OldFileFormat = 1455 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureRecursionLimit = 1456 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureTableCorrupt = 1457 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureWrongName = 1458 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableNeedsUpgrade = 1459 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredProcedureNoAggregate = 1460 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MaxPreparedStatementCountReached = 1461 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewRecursive = 1462 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonGroupingFieldUsed = 1463 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableCannotHandleSpatialKeys = 1464 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoTriggersOnSystemSchema = 1465 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RemovedSpaces = 1466 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AutoIncrementReadFailed = 1467 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UserNameError = 1468 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode HostNameError = 1469 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongStringLength = 1470 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NonInsertableTable = 1471 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AdminWrongMergeTable = 1472 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooHighLevelOfNestingForSelect = 1473 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NameBecomesEmpty = 1474 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AmbiguousFieldTerm = 1475 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForeignServerExists = 1476 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForeignServerDoesNotExist = 1477 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode IllegalHACreateOption = 1478 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionRequiresValues = 1479 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionWrongValues = 1480 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionMaxValue = 1481 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionSubPartition = 1482 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionSubPartMix = 1483 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionWrongNoPart = 1484 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionWrongNoSubPart = 1485 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongExpressionInParitionFunction = 1486 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoConstantExpressionInRangeOrListError = 1487 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FieldNotFoundPartitionErrror = 1488 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ListOfFieldsOnlyInHash = 1489 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InconsistentPartitionInfo = 1490 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionFunctionNotAllowed = 1491 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionsMustBeDefined = 1492 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RangeNotIncreasing = 1493 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode InconsistentTypeOfFunctions = 1494 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MultipleDefinitionsConstantInListPartition = 1495 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionEntryError = 1496 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode MixHandlerError = 1497 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionNotDefined = 1498 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyPartitions = 1499 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SubPartitionError = 1500 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotCreateHandlerFile = 1501 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BlobFieldInPartitionFunction = 1502 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UniqueKeyNeedAllFieldsInPartitioningFunction = 1503 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoPartitions = 1504 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionManagementOnNoPartitioned = 1505 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForeignKeyOnPartitioned = 1506 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DropPartitionNonExistent = 1507 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DropLastPartition = 1508 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CoalesceOnlyOnHashPartition = 1509 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ReorganizeHashOnlyOnSameNumber = 1510 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ReorganizeNoParameter = 1511 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OnlyOnRangeListPartition = 1512 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AddPartitionSubPartition = 1513 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AddPartitionNoNewPartition = 1514 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CoalescePartitionNoPartition = 1515 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ReorganizePartitionNotExist = 1516 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SameNamePartition = 1517 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoBinLog = 1518 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ConsecutiveReorganizePartitions = 1519 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ReorganizeOutsideRange = 1520 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionFunctionFailure = 1521 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionStateError = 1522 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LimitedPartitionRange = 1523 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PluginIsNotLoaded = 1524 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongValue = 1525 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoPartitionForGivenValue = 1526 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FileGroupOptionOnlyOnce = 1527 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CreateFileGroupFailed = 1528 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DropFileGroupFailed = 1529 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableSpaceAutoExtend = 1530 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongSizeNumber = 1531 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SizeOverflow = 1532 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode AlterFileGroupFailed = 1533 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogRowLogginFailed = 1534 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogRowWrongTableDefinition = 1535 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogRowRBRToSBR = 1536 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventAlreadyExists = 1537 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventStoreFailed = 1538 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventDoesNotExist = 1539 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventCannotAlter = 1540 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventDropFailed = 1541 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventIntervalNotPositiveOrTooBig = 1542 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventEndsBeforeStarts = 1543 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventExecTimeInThePast = 1544 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventOpenTableFailed = 1545 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventNeitherMExpresssionNorMAt = 1546 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ColumnCountDoesNotMatchCorrupted = 1547 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotLoadFromTable = 1548 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventCannotDelete = 1549 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventCompileError = 1550 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventSameName = 1551 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventDataTooLong = 1552 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DropIndexForeignKey = 1553 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningDeprecatedSyntaxWithVersion = 1554 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotWriteLockLogTable = 1555 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotLockLogTable = 1556 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ForeignDuplicateKey = 1557 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ColumnCountDoesNotMatchPleaseUpdate = 1558 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TemoraryTablePreventSwitchOutOfRBR = 1559 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredFunctionPreventsSwitchBinLogFormat = 1560 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NDBCannotSwitchBinLogFormat = 1561 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionNoTemporary = 1562 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionConstantDomain = 1563 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionFunctionIsNotAllowed = 1564 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DDLLogError = 1565 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NullInValuesLessThan = 1566 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongPartitionName = 1567 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotChangeTransactionIsolation = 1568 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateEntryAutoIncrementCase = 1569 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventModifyQueueError = 1570 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventSetVariableError = 1571 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionMergeError = 1572 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotActivateLog = 1573 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RBRNotAvailable = 1574 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode Base64DecodeError = 1575 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventRecursionForbidden = 1576 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventsDatabaseError = 1577 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode OnlyIntegersAllowed = 1578 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode UnsupportedLogEngine = 1579 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BadLogStatement = 1580 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannotRenameLogTable = 1581 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongParameterCountToNativeFCT = 1582 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongParametersToNativeFCT = 1583 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WrongParametersToStoredFCT = 1584 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NativeFCTNameCollision = 1585 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DuplicateEntryWithKeyName = 1586 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogPurgeEMFile = 1587 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventCannotCreateInThePast = 1588 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventCannotAlterInThePast = 1589 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveIncident = 1590 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoPartitionForGivenValueSilent = 1591 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogUnsafeStatement = 1592 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveFatalError = 1593 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveRelayLogReadFailure = 1594 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveRelayLogWriteFailure = 1595 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveCreateEventFailure = 1596 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveMasterComFailure = 1597 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode BinLogLoggingImpossible = 1598 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewNoCreationContext = 1599 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ViewInvalidCreationContext = 1600 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode StoredRoutineInvalidCreateionContext = 1601 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TiggerCorruptedFile = 1602 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerNoCreationContext = 1603 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerInvalidCreationContext = 1604 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode EventInvalidCreationContext = 1605 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TriggerCannotOpenTable = 1606 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode CannoCreateSubRoutine = 1607 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveAmbiguousExecMode = 1608 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NoFormatDescriptionEventBeforeBinLogStatement = 1609 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveCorruptEvent = 1610 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LoadDataInvalidColumn = 1611 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode LogPurgeNoFile = 1612 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XARBTimeout = 1613 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode XARBDeadlock = 1614 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NeedRePrepare = 1615 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DelayedNotSupported = 1616 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningNoMasterInfo = 1617 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningOptionIgnored = 1618 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningPluginDeleteBuiltIn = 1619 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningPluginBusy = 1620 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode VariableIsReadonly = 1621 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningEngineTransactionRollback = 1622 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveHeartbeatFailure = 1623 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SlaveHeartbeatValueOutOfRange = 1624 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode NDBReplicationSchemaError = 1625 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ConflictFunctionParseError = 1626 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ExcepionsWriteError = 1627 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooLongTableComment = 1628 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooLongFieldComment = 1629 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode FunctionInExistentNameCollision = 1630 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DatabaseNameError = 1631 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TableNameErrror = 1632 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode PartitionNameError = 1633 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode SubPartitionNameError = 1634 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TemporaryNameError = 1635 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode RenamedNameError = 1636 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode TooManyConcurrentTransactions = 1637 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode WarningNonASCIISeparatorNotImplemented = 1638 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DebugSyncTimeout = 1639 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode DebugSyncHitLimit = 1640 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlErrorCode ErrorLast = 1640 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.MySqlPacket: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.MemoryStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Text.Encoding Encoding 'get set' : 
    Boolean HasMoreData 'get ' : 
    Int32 Position 'get set' : 
    Int32 Length 'get set' : 
    Boolean IsLastPacket 'get ' : 
    Byte[] Buffer 'get ' : 
    MySql.Data.Common.DBVersion Version 'get set' : 
  Methods:
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_HasMoreData(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsLastPacket(): PrivateScope, Public, HideBySig, SpecialName
    get_Buffer(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(DBVersion): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    ReadByte(): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    WriteByte(Byte): PrivateScope, Public, HideBySig
    Write(Byte[]): PrivateScope, Public, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    ReadNBytes(): PrivateScope, Public, HideBySig
    SetByte(Int64, Byte): PrivateScope, Public, HideBySig
    ReadFieldLength(): PrivateScope, Public, HideBySig
    ReadBitValue(Int32): PrivateScope, Public, HideBySig
    ReadLong(Int32): PrivateScope, Public, HideBySig
    ReadULong(Int32): PrivateScope, Public, HideBySig
    Read3ByteInt(): PrivateScope, Public, HideBySig
    ReadInteger(Int32): PrivateScope, Public, HideBySig
    WriteInteger(Int64, Int32): PrivateScope, Public, HideBySig
    ReadPackedInteger(): PrivateScope, Public, HideBySig
    WriteLength(Int64): PrivateScope, Public, HideBySig
    WriteLenString(String): PrivateScope, Public, HideBySig
    WriteStringNoNull(String): PrivateScope, Public, HideBySig
    WriteString(String): PrivateScope, Public, HideBySig
    ReadLenString(): PrivateScope, Public, HideBySig
    ReadAsciiString(Int64): PrivateScope, Public, HideBySig
    ReadString(Int64): PrivateScope, Public, HideBySig
    ReadString(): PrivateScope, Public, HideBySig
    ReadString(Encoding): PrivateScope, Public, HideBySig
    ReadStringAsBytes(): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.MySqlPool: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlConnectionStringBuilder Settings 'get set' : 
    MySql.Data.MySqlClient.ProcedureCache ProcedureCache 'get ' : 
    Boolean BeingCleared 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,System.String] ServerProperties 'get set' : 
  Methods:
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    set_Settings(MySqlConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName
    get_ProcedureCache(): PrivateScope, Public, HideBySig, SpecialName
    get_BeingCleared(): PrivateScope, Public, HideBySig, SpecialName
    get_ServerProperties(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ServerProperties(Dictionary`2): PrivateScope, Assembly, HideBySig, SpecialName
    ReleaseConnection(Driver): PrivateScope, Public, HideBySig
    RemoveConnection(Driver): PrivateScope, Public, HideBySig
    GetConnection(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Assembly, HideBySig
    RemoveOldIdleConnections(): PrivateScope, Assembly, HideBySig
Class MySql.Data.MySqlClient.MySqlPoolManager: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 maxConnectionIdleTime : Assembly, Static
    Int32 DEMOTED_TIMEOUT = 120000 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Collections.Concurrent.ConcurrentQueue`1[MySql.Data.Failover.FailoverServer] DemotedHosts 'get set' : 
    System.Collections.Generic.List`1[MySql.Data.Failover.FailoverServer] Hosts 'get set' : 
    System.Threading.Timer DemotedServersTimer 'get set' : 
  Methods:
    get_DemotedHosts(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_DemotedHosts(ConcurrentQueue`1): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Hosts(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_Hosts(List`1): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DemotedServersTimer(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_DemotedServersTimer(Timer): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetPool(MySqlConnectionStringBuilder): PrivateScope, Public, Static, HideBySig
    RemoveConnection(Driver): PrivateScope, Public, Static, HideBySig
    ReleaseConnection(Driver): PrivateScope, Public, Static, HideBySig
    ClearPool(MySqlConnectionStringBuilder): PrivateScope, Public, Static, HideBySig
    ClearAllPools(): PrivateScope, Public, Static, HideBySig
    RemoveClearedPool(MySqlPool): PrivateScope, Public, Static, HideBySig
    CleanIdleConnections(Object): PrivateScope, Public, Static, HideBySig
    ReleaseDemotedHosts(Object): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.MySqlClient.MySqlScript: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlConnection Connection 'get set' : 
    System.String Query 'get set' : 
    System.String Delimiter 'get set' : 
  Events:
    MySql.Data.MySqlClient.MySqlStatementExecutedEventHandler StatementExecuted: 
    MySql.Data.MySqlClient.MySqlScriptErrorEventHandler Error: 
    System.EventHandler ScriptCompleted: 
  Methods:
    add_StatementExecuted(MySqlStatementExecutedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_StatementExecuted(MySqlStatementExecutedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Error(MySqlScriptErrorEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Error(MySqlScriptErrorEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ScriptCompleted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ScriptCompleted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    set_Connection(MySqlConnection): PrivateScope, Public, HideBySig, SpecialName
    get_Query(): PrivateScope, Public, HideBySig, SpecialName
    set_Query(String): PrivateScope, Public, HideBySig, SpecialName
    get_Delimiter(): PrivateScope, Public, HideBySig, SpecialName
    set_Delimiter(String): PrivateScope, Public, HideBySig, SpecialName
    Execute(): PrivateScope, Public, HideBySig
    ExecuteAsync(): PrivateScope, Public, HideBySig
    ExecuteAsync(CancellationToken): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.MySqlStatementExecutedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, MySqlScriptEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, MySqlScriptEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.MySqlScriptErrorEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, MySqlScriptErrorEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, MySqlScriptErrorEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.MySqlScriptEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.ScriptStatement Statement 'get set' : 
    System.String StatementText 'get ' : 
    Int32 Line 'get ' : 
    Int32 Position 'get ' : 
  Methods:
    get_Statement(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Statement(ScriptStatement): PrivateScope, Assembly, HideBySig, SpecialName
    get_StatementText(): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.MySqlScriptErrorEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySql.Data.MySqlClient.MySqlScriptEventArgs
    Void .ctor(System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Exception Exception 'get ' : 
    Boolean Ignore 'get set' : 
  Methods:
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
    get_Ignore(): PrivateScope, Public, HideBySig, SpecialName
    set_Ignore(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct MySql.Data.MySqlClient.ScriptStatement: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String text : Public
    Int32 line : Public
    Int32 position : Public
Class MySql.Data.MySqlClient.MySqlStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Stream BaseStream 'get ' : 
    System.Text.Encoding Encoding 'get set' : 
    Byte SequenceByte 'get set' : 
    Int32 MaxBlockSize 'get set' : 
    UInt64 MaxPacketSize 'get set' : 
  Methods:
    get_BaseStream(): PrivateScope, Assembly, HideBySig, SpecialName
    Close(): PrivateScope, Public, HideBySig
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    ResetTimeout(Int32): PrivateScope, Public, HideBySig
    get_SequenceByte(): PrivateScope, Public, HideBySig, SpecialName
    set_SequenceByte(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_MaxBlockSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxBlockSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPacketSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxPacketSize(UInt64): PrivateScope, Public, HideBySig, SpecialName
    ReadPacket(): PrivateScope, Public, HideBySig
    ReadFully(Stream, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    LoadPacket(): PrivateScope, Public, HideBySig
    SendPacket(MySqlPacket): PrivateScope, Public, HideBySig
    SendEntirePacketDirectly(Byte[], Int32): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.MySqlTrace: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Diagnostics.TraceListenerCollection Listeners 'get ' : 
    System.Diagnostics.SourceSwitch Switch 'get set' : 
    Boolean QueryAnalysisEnabled 'get set' : 
    System.Diagnostics.TraceSource Source 'get ' : 
  Methods:
    get_Listeners(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Switch(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Switch(SourceSwitch): PrivateScope, Public, Static, HideBySig, SpecialName
    get_QueryAnalysisEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_QueryAnalysisEnabled(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    EnableQueryAnalyzer(String, Int32): PrivateScope, Public, Static, HideBySig
    DisableQueryAnalyzer(): PrivateScope, Public, Static, HideBySig
    get_Source(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    LogInformation(Int32, String): PrivateScope, Assembly, Static, HideBySig
    LogWarning(Int32, String): PrivateScope, Assembly, Static, HideBySig
    LogError(Int32, String): PrivateScope, Assembly, Static, HideBySig
    TraceEvent(TraceEventType, MySqlTraceEventType, String, Object[]): PrivateScope, Assembly, Static, HideBySig
Struct MySql.Data.MySqlClient.UsageAdvisorWarningFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.UsageAdvisorWarningFlags NoIndex = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.UsageAdvisorWarningFlags BadIndex = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.UsageAdvisorWarningFlags SkippedRows = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.UsageAdvisorWarningFlags SkippedColumns = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.UsageAdvisorWarningFlags FieldConversion = 5 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.MySqlTraceEventType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.MySqlTraceEventType ConnectionOpened = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType ConnectionClosed = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType QueryOpened = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType ResultOpened = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType ResultClosed = 5 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType QueryClosed = 6 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType StatementPrepared = 7 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType StatementExecuted = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType StatementClosed = 9 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType NonQuery = 10 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType UsageAdvisorWarning = 11 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType Warning = 12 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType Error = 13 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.MySqlTraceEventType QueryNormalized = 14 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.NativeDriver: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.Driver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MySql.Data.MySqlClient.IDriver
  Properties:
    MySql.Data.MySqlClient.ClientFlags Flags 'get ' : 
    Int32 ThreadId 'get ' : 
    MySql.Data.Common.DBVersion Version 'get ' : 
    MySql.Data.MySqlClient.ServerStatusFlags ServerStatus 'get ' : 
    Int32 WarningCount 'get ' : 
    MySql.Data.MySqlClient.MySqlPacket Packet 'get ' : 
    MySql.Data.MySqlClient.MySqlConnectionStringBuilder Settings 'get ' : 
    System.Text.Encoding Encoding 'get ' : 
  Methods:
    get_Flags(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ThreadId(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Version(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ServerStatus(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_WarningCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Packet(): PrivateScope, Public, HideBySig, SpecialName
    get_Settings(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Assembly, HideBySig, SpecialName
    SendPacket(MySqlPacket): PrivateScope, Assembly, HideBySig
    SendEmptyPacket(): PrivateScope, Assembly, HideBySig
    ReadPacket(): PrivateScope, Assembly, HideBySig
    ReadOk(Boolean): PrivateScope, Assembly, HideBySig
    SetDatabase(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Configure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Open(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Authenticate(String, Boolean): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SendQuery(MySqlPacket): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Close(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Ping(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetResult(Int32&, Int64&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadColumnValue(Int32, MySqlField, IMySqlValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SkipColumnValue(IMySqlValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetColumnsData(MySqlField[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ExecuteStatement(MySqlPacket): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PrepareStatement(String, MySqlField[]&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FetchDataRow(Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseStatement(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetTimeout(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetConnectAttrs(): PrivateScope, Assembly, HideBySig
Class MySql.Data.MySqlClient.MySqlParameterConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.PerformanceMonitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlConnection Connection 'get set' : 
  Methods:
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    AddHardProcedureQuery(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSoftProcedureQuery(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.PreparableStatement: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.Statement
    Void .ctor(MySql.Data.MySqlClient.MySqlCommand, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ExecutionCount 'get set' : 
    Boolean IsPrepared 'get ' : 
    Int32 StatementId 'get set' : 
  Methods:
    get_ExecutionCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ExecutionCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrepared(): PrivateScope, Public, HideBySig, SpecialName
    get_StatementId(): PrivateScope, Public, HideBySig, SpecialName
    Prepare(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Execute(): PrivateScope, Public, Virtual, HideBySig
    ExecuteNext(): PrivateScope, Public, Virtual, HideBySig
    CloseStatement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.ProcedureCacheEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySql.Data.MySqlClient.MySqlSchemaCollection procedure : Public
    MySql.Data.MySqlClient.MySqlSchemaCollection parameters : Public
Class MySql.Data.MySqlClient.ProcedureCache: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetProcedure(MySqlConnection, String, String): PrivateScope, Public, HideBySig
    GetCacheKey(String, ProcedureCacheEntry): PrivateScope, Assembly, HideBySig
Class MySql.Data.MySqlClient.ReplicationConfigurationElement: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Configuration.ConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.GenericConfigurationElementCollection`1[MySql.Data.MySqlClient.ReplicationServerGroupConfigurationElement] ServerGroups 'get ' : 
  Methods:
    get_ServerGroups(): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.ReplicationServerGroupConfigurationElement: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Configuration.ConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String GroupType 'get set' : 
    Int32 RetryTime 'get set' : 
    MySql.Data.MySqlClient.GenericConfigurationElementCollection`1[MySql.Data.MySqlClient.ReplicationServerConfigurationElement] Servers 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_GroupType(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupType(String): PrivateScope, Public, HideBySig, SpecialName
    get_RetryTime(): PrivateScope, Public, HideBySig, SpecialName
    set_RetryTime(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Servers(): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.ReplicationServerConfigurationElement: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Configuration.ConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Boolean IsMaster 'get set' : 
    System.String ConnectionString 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsMaster(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMaster(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionString(String): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.ResultSet: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MySql.Data.MySqlClient.Driver, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasRows 'get ' : 
    Int32 Size 'get ' : 
    MySql.Data.MySqlClient.MySqlField[] Fields 'get set' : 
    MySql.Data.Types.IMySqlValue[] Values 'get set' : 
    Boolean IsOutputParameters 'get set' : 
    Int32 AffectedRows 'get set' : 
    Int64 InsertedId 'get set' : 
    Int32 TotalRows 'get set' : 
    Int32 SkippedRows 'get set' : 
    Boolean Cached 'get set' : 
    MySql.Data.Types.IMySqlValue Item [Int32] 'get ' : 
  Methods:
    get_HasRows(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Fields(): PrivateScope, Public, HideBySig, SpecialName
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOutputParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOutputParameters(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AffectedRows(): PrivateScope, Public, HideBySig, SpecialName
    get_InsertedId(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalRows(): PrivateScope, Public, HideBySig, SpecialName
    get_SkippedRows(): PrivateScope, Public, HideBySig, SpecialName
    get_Cached(): PrivateScope, Public, HideBySig, SpecialName
    set_Cached(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetOrdinal(String): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    NextRow(CommandBehavior): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    FieldRead(Int32): PrivateScope, Public, HideBySig
    SetValueObject(Int32, IMySqlValue): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.MySqlSchemaCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DataTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] Mapping : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,System.Int32] LogicalMappings : Assembly
  Properties:
    System.String Name 'get set' : 
    System.Collections.Generic.IList`1[MySql.Data.MySqlClient.SchemaColumn] Columns 'get ' : 
    System.Collections.Generic.IList`1[MySql.Data.MySqlClient.MySqlSchemaRow] Rows 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    AddColumn(String, Type): PrivateScope, Assembly, HideBySig
    ColumnIndex(String): PrivateScope, Assembly, HideBySig
    RemoveColumn(String): PrivateScope, Assembly, HideBySig
    ContainsColumn(String): PrivateScope, Assembly, HideBySig
    AddRow(): PrivateScope, Assembly, HideBySig
    NewRow(): PrivateScope, Assembly, HideBySig
    AsDataTable(): PrivateScope, Assembly, HideBySig
Class MySql.Data.MySqlClient.MySqlSchemaRow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlSchemaCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlSchemaCollection Collection 'get ' : 
    System.Object Item [System.String] 'get set' : 
    System.Object Item [Int32] 'get set' : 
  Methods:
    InitMetadata(): PrivateScope, Assembly, HideBySig
    get_Collection(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Item(String): PrivateScope, Assembly, HideBySig, SpecialName
    set_Item(String, Object): PrivateScope, Assembly, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    set_Item(Int32, Object): PrivateScope, Assembly, HideBySig, SpecialName
    CopyRow(MySqlSchemaRow): PrivateScope, Assembly, HideBySig
Class MySql.Data.MySqlClient.SchemaColumn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.Type Type 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.SchemaProvider: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String MetaCollection : Public, Static
  Methods:
    GetSchema(String, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDatabases(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTables(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColumns(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIndexes(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIndexColumns(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetForeignKeys(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetForeignKeyColumns(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUsers(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetProcedures(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUDF(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CleanRestrictions(String[]): PrivateScope, Assembly, HideBySig
Class MySql.Data.MySqlClient.Statement: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    System.String ResolvedCommandText 'get ' : 
  Methods:
    get_ResolvedCommandText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(MySqlDataReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resolve(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Execute(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.StoredProcedure: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.PreparableStatement
    Void .ctor(MySql.Data.MySqlClient.MySqlCommand, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ParameterPrefix = _cnet_param_ : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean ServerProvidingOutputParameters 'get set' : 
    System.String ResolvedCommandText 'get ' : 
  Methods:
    get_ServerProvidingOutputParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_ResolvedCommandText(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetCacheKey(String): PrivateScope, Assembly, HideBySig
    GetFlags(String): PrivateScope, Public, Static, HideBySig
    Resolve(Boolean): PrivateScope, Public, Virtual, HideBySig
    ProcessOutputParameters(MySqlDataReader): PrivateScope, Assembly, HideBySig
    Close(MySqlDataReader): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.TableCache: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddToCache(String, ResultSet): PrivateScope, Public, Static, HideBySig
    RetrieveFromCache(String, Int32): PrivateScope, Public, Static, HideBySig
    RemoveFromCache(String): PrivateScope, Public, Static, HideBySig
    DumpCache(): PrivateScope, Public, Static, HideBySig
Class MySql.Data.MySqlClient.BaseTableCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddToCache(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RetrieveFromCache(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveFromCache(String): PrivateScope, Public, HideBySig
    Dump(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.TimedStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsClosed 'get set' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Boolean CanTimeout 'get ' : 
    Int32 ReadTimeout 'get set' : 
    Int32 WriteTimeout 'get set' : 
  Methods:
    get_IsClosed(): PrivateScope, Assembly, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReadTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WriteTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_WriteTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    ResetTimeout(Int32): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.TracingDriver: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.Driver
    Void .ctor(MySql.Data.MySqlClient.MySqlConnectionStringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Open(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    SendQuery(MySqlPacket): PrivateScope, Public, Virtual, HideBySig
    NextResult(Int32, Boolean): PrivateScope, Public, Virtual, HideBySig
    PrepareStatement(String, MySqlField[]&): PrivateScope, Public, Virtual, HideBySig
    CloseStatement(Int32): PrivateScope, Public, Virtual, HideBySig
    SetDatabase(String): PrivateScope, Public, Virtual, HideBySig
    ExecuteStatement(MySqlPacket): PrivateScope, Public, Virtual, HideBySig
    FetchDataRow(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    CloseQuery(MySqlConnection, Int32): PrivateScope, Public, Virtual, HideBySig
    ReportWarnings(MySqlConnection): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.MySqlTransaction: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbTransaction
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection, System.Data.IsolationLevel): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    MySql.Data.MySqlClient.MySqlConnection Connection 'get ' : 
    System.Data.IsolationLevel IsolationLevel 'get ' : 
  Methods:
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    get_IsolationLevel(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Commit(): PrivateScope, Public, Virtual, HideBySig
    Rollback(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.Utils: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadResource(String): PrivateScope, Public, Static, HideBySig
    ReadResourceInternal(String): PrivateScope, Public, Static, HideBySig
Struct MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Bit = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Tinyint = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Smallint = 3 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Mediumint = 4 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Int = 5 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Bigint = 6 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Float = 7 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Decimal = 8 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Double = 9 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Json = 10 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType String = 11 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Bytes = 12 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Time = 13 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Date = 14 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType DateTime = 15 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Timestamp = 16 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Set = 17 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Enum = 18 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnType Geometry = 19 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnContentType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnContentType Geometry = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnContentType Json = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.X.XDevAPI.Common.ColumnContentType Xml = 3 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.Replication.ReplicationManager: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    System.Collections.Generic.IList`1[MySql.Data.MySqlClient.Replication.ReplicationServerGroup] Groups 'get set' : 
  Methods:
    get_Groups(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    AddGroup(String, Int32): PrivateScope, Assembly, Static, HideBySig
    AddGroup(String, String, Int32): PrivateScope, Assembly, Static, HideBySig
    GetServer(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetGroup(String): PrivateScope, Assembly, Static, HideBySig
    IsReplicationGroup(String): PrivateScope, Assembly, Static, HideBySig
    GetNewConnection(String, Boolean, MySqlConnection): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.MySqlClient.Replication.ReplicationRoundRobinServerGroup: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySql.Data.MySqlClient.Replication.ReplicationServerGroup
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MySql.Data.MySqlClient.Replication.ReplicationServer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Boolean IsMaster 'get set' : 
    System.String ConnectionString 'get set' : 
    Boolean IsAvailable 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMaster(): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionString(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsAvailable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAvailable(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.Replication.ReplicationServerGroup: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Int32 RetryTime 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_RetryTime(): PrivateScope, Public, HideBySig, SpecialName
Class MySql.Data.MySqlClient.Memcached.BinaryClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySql.Data.MySqlClient.Memcached.Client
    Void .ctor(System.String, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig
    Append(String, Object): PrivateScope, Public, Virtual, HideBySig
    Cas(String, Object, TimeSpan, UInt64): PrivateScope, Public, Virtual, HideBySig
    Decrement(String, Int32): PrivateScope, Public, Virtual, HideBySig
    Delete(String): PrivateScope, Public, Virtual, HideBySig
    FlushAll(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    Get(String): PrivateScope, Public, Virtual, HideBySig
    Increment(String, Int32): PrivateScope, Public, Virtual, HideBySig
    Prepend(String, Object): PrivateScope, Public, Virtual, HideBySig
    Replace(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig
    Set(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.Memcached.Client: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    GetInstance(String, UInt32, MemcachedFlags): PrivateScope, Public, Static, HideBySig
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Append(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Cas(String, Object, TimeSpan, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Decrement(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Delete(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FlushAll(TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Get(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Increment(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Prepend(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Replace(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Set(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MySql.Data.MySqlClient.Memcached.MemcachedFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.Memcached.MemcachedFlags TextProtocol = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Memcached.MemcachedFlags BinaryProtocol = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Memcached.MemcachedFlags Tcp = 4 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.Memcached.MemcachedException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MySql.Data.MySqlClient.Memcached.TextClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySql.Data.MySqlClient.Memcached.Client
  Methods:
    Add(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig
    Append(String, Object): PrivateScope, Public, Virtual, HideBySig
    Cas(String, Object, TimeSpan, UInt64): PrivateScope, Public, Virtual, HideBySig
    Decrement(String, Int32): PrivateScope, Public, Virtual, HideBySig
    Delete(String): PrivateScope, Public, Virtual, HideBySig
    FlushAll(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    Get(String): PrivateScope, Public, Virtual, HideBySig
    Increment(String, Int32): PrivateScope, Public, Virtual, HideBySig
    Prepend(String, Object): PrivateScope, Public, Virtual, HideBySig
    Replace(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig
    Set(String, Object, TimeSpan): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.Interceptors.BaseExceptionInterceptor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    InterceptException(Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Init(MySqlConnection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.Interceptors.StandardExceptionInterceptor: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MySql.Data.MySqlClient.Interceptors.BaseExceptionInterceptor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InterceptException(Exception): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.Interceptors.ExceptionInterceptor: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MySql.Data.MySqlClient.Interceptor
    Void .ctor(MySql.Data.MySqlClient.MySqlConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Throw(Exception): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.Common.NamedPipeStream: AutoLayout, AnsiClass, Class, HasSecurity, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.String, System.IO.FileAccess, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Boolean CanTimeout 'get ' : 
    Int32 ReadTimeout 'get set' : 
    Int32 WriteTimeout 'get set' : 
  Methods:
    Open(String, FileAccess, UInt32): PrivateScope, Public, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    get_CanTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReadTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WriteTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_WriteTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    Create(String, String, UInt32): PrivateScope, Assembly, Static, HideBySig
Class MySql.Data.MySqlClient.Authentication.AuthenticationPluginManager: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPlugin(String): PrivateScope, Public, Static, HideBySig
Struct MySql.Data.MySqlClient.Authentication.PluginInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Type : Public
    System.Reflection.Assembly Assembly : Public
Class MySql.Data.MySqlClient.Authentication.CachingSha2AuthenticationPlugin: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.Authentication.Sha256AuthenticationPlugin
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MySql.Data.MySqlClient.Authentication.AuthStage _authStage : Assembly, Static
  Properties:
    System.String PluginName 'get ' : 
  Methods:
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPassword(): PrivateScope, Public, Virtual, HideBySig
Struct MySql.Data.MySqlClient.Authentication.AuthStage: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.Authentication.AuthStage GENERATE_SCRAMBLE = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Authentication.AuthStage REQUEST_RSA_KEY = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Authentication.AuthStage FAST_AUTH = 2 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Authentication.AuthStage FULL_AUTH = 3 : Public, Static, Literal, HasDefault
Class MySql.Data.MySqlClient.Authentication.MySqlAuthenticationPlugin: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    MySql.Data.MySqlClient.ClientFlags Flags 'get ' : 
    System.String PluginName 'get ' : 
  Methods:
    GetPlugin(String, NativeDriver, Byte[]): PrivateScope, Assembly, Static, HideBySig
    get_Flags(): PrivateScope, Assembly, HideBySig, SpecialName
    Authenticate(Boolean): PrivateScope, Assembly, HideBySig
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetUsername(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPassword(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.MySqlClient.Authentication.MySqlPemReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ConvertPemToRSAProvider(Byte[]): PrivateScope, Public, Static, HideBySig
Class MySql.Data.MySqlClient.Authentication.MySqlNativePasswordPlugin: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MySql.Data.MySqlClient.Authentication.MySqlAuthenticationPlugin
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PluginName 'get ' : 
  Methods:
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPassword(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.Authentication.Sha256AuthenticationPlugin: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.Authentication.MySqlAuthenticationPlugin
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PluginName 'get ' : 
  Methods:
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPassword(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.MySqlClient.Authentication.Sha256MemoryAuthenticationPlugin: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MySql.Data.MySqlClient.Authentication.MySqlAuthenticationPlugin
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PluginName 'get ' : 
  Methods:
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetClientHash(String, Byte[]): PrivateScope, Public, HideBySig
Class MySql.Data.MySqlClient.Authentication.MySqlWindowsAuthenticationPlugin: AutoLayout, AnsiClass, Class, HasSecurity, BeforeFieldInit
  :MySql.Data.MySqlClient.Authentication.MySqlAuthenticationPlugin
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PluginName 'get ' : 
  Methods:
    GetUsername(): PrivateScope, Public, Virtual, HideBySig
    get_PluginName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    QueryContextAttributes(SECURITY_HANDLE&, UInt32, SecPkgContext_Sizes&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FreeCredentialsHandle(SECURITY_HANDLE&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    DeleteSecurityContext(SECURITY_HANDLE&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct MySql.Data.MySqlClient.Authentication.SecBufferDesc: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 ulVersion : Public
    Int32 cBuffers : Public
    IntPtr pBuffers : Public
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSecBufferByteArray(): PrivateScope, Public, HideBySig
Struct MySql.Data.MySqlClient.Authentication.SecBufferType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MySql.Data.MySqlClient.Authentication.SecBufferType SECBUFFER_VERSION = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Authentication.SecBufferType SECBUFFER_EMPTY = 0 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Authentication.SecBufferType SECBUFFER_DATA = 1 : Public, Static, Literal, HasDefault
    MySql.Data.MySqlClient.Authentication.SecBufferType SECBUFFER_TOKEN = 2 : Public, Static, Literal, HasDefault
Struct MySql.Data.MySqlClient.Authentication.SecHandle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MySql.Data.MySqlClient.Authentication.SecBuffer: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], MySql.Data.MySqlClient.Authentication.SecBufferType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 cbBuffer : Public
    Int32 BufferType : Public
    IntPtr pvBuffer : Public
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MySql.Data.MySqlClient.Authentication.SECURITY_INTEGER: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 LowPart : Public
    Int32 HighPart : Public
Struct MySql.Data.MySqlClient.Authentication.SECURITY_HANDLE: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr LowPart : Public
    IntPtr HighPart : Public
Struct MySql.Data.MySqlClient.Authentication.SecPkgContext_Sizes: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 cbMaxToken : Public
    UInt32 cbMaxSignature : Public
    UInt32 cbBlockSize : Public
    UInt32 cbSecurityTrailer : Public
Class Mysqlx.ClientMessages+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.ServerMessages+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Error+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Resultset.ColumnMetaData+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Prepare.Prepare+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Notice.Frame+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Notice.Warning+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Notice.SessionStateChanged+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Expr.Expr+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Expr.DocumentPathItem+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Expr.Object+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Expect.Open+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Struct Mysqlx.Datatypes.Scalar+DefaultOneOfOneofCase: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DefaultOneOfOneofCase None = 0 : Public, Static, Literal, HasDefault
    DefaultOneOfOneofCase VSignedInt = 2 : Public, Static, Literal, HasDefault
    DefaultOneOfOneofCase VUnsignedInt = 3 : Public, Static, Literal, HasDefault
    DefaultOneOfOneofCase VOctets = 5 : Public, Static, Literal, HasDefault
    DefaultOneOfOneofCase VDouble = 6 : Public, Static, Literal, HasDefault
    DefaultOneOfOneofCase VFloat = 7 : Public, Static, Literal, HasDefault
    DefaultOneOfOneofCase VBool = 8 : Public, Static, Literal, HasDefault
    DefaultOneOfOneofCase VString = 9 : Public, Static, Literal, HasDefault
Class Mysqlx.Datatypes.Scalar+Types: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Datatypes.Object+Types: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Datatypes.Any+Types: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Cursor.Open+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Crud.Order+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Crud.UpdateOperation+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Crud.Find+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Crud.Insert+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Class MySqlX.XDevAPI.Client+ConnectionOptions: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    PoolingStruct Pooling 'get set' : 
  Methods:
    get_Pooling(): PrivateScope, Public, HideBySig, SpecialName
    set_Pooling(PoolingStruct): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class MySqlX.XDevAPI.CRUD.CreateIndexParams+IndexField: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Field 'get set' : 
    System.String Type 'get set' : 
    System.Nullable`1[System.Boolean] Required 'get set' : 
    System.Nullable`1[System.UInt32] Options 'get set' : 
    System.Nullable`1[System.UInt32] Srid 'get set' : 
    System.Nullable`1[System.Boolean] Array 'get set' : 
  Methods:
    get_Field(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Field(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Type(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Type(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Required(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Required(Nullable`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_Options(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Options(Nullable`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_Srid(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Srid(Nullable`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_Array(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Array(Nullable`1): PrivateScope, Assembly, HideBySig, SpecialName
Class MySqlX.Protocol.ValueDecoder+ClrDecoderDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Byte[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct MySqlX.Protocol.X.ExprParser+TokenType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TokenType NOT = 0 : Public, Static, Literal, HasDefault
    TokenType AND = 1 : Public, Static, Literal, HasDefault
    TokenType ANDAND = 2 : Public, Static, Literal, HasDefault
    TokenType OR = 3 : Public, Static, Literal, HasDefault
    TokenType OROR = 4 : Public, Static, Literal, HasDefault
    TokenType XOR = 5 : Public, Static, Literal, HasDefault
    TokenType IS = 6 : Public, Static, Literal, HasDefault
    TokenType LPAREN = 7 : Public, Static, Literal, HasDefault
    TokenType RPAREN = 8 : Public, Static, Literal, HasDefault
    TokenType LSQBRACKET = 9 : Public, Static, Literal, HasDefault
    TokenType RSQBRACKET = 10 : Public, Static, Literal, HasDefault
    TokenType BETWEEN = 11 : Public, Static, Literal, HasDefault
    TokenType TRUE = 12 : Public, Static, Literal, HasDefault
    TokenType NULL = 13 : Public, Static, Literal, HasDefault
    TokenType FALSE = 14 : Public, Static, Literal, HasDefault
    TokenType IN = 15 : Public, Static, Literal, HasDefault
    TokenType LIKE = 16 : Public, Static, Literal, HasDefault
    TokenType INTERVAL = 17 : Public, Static, Literal, HasDefault
    TokenType REGEXP = 18 : Public, Static, Literal, HasDefault
    TokenType ESCAPE = 19 : Public, Static, Literal, HasDefault
    TokenType IDENT = 20 : Public, Static, Literal, HasDefault
    TokenType LSTRING = 21 : Public, Static, Literal, HasDefault
    TokenType LNUM_INT = 22 : Public, Static, Literal, HasDefault
    TokenType LNUM_DOUBLE = 23 : Public, Static, Literal, HasDefault
    TokenType DOT = 24 : Public, Static, Literal, HasDefault
    TokenType AT = 25 : Public, Static, Literal, HasDefault
    TokenType COMMA = 26 : Public, Static, Literal, HasDefault
    TokenType EQ = 27 : Public, Static, Literal, HasDefault
    TokenType NE = 28 : Public, Static, Literal, HasDefault
    TokenType GT = 29 : Public, Static, Literal, HasDefault
    TokenType GE = 30 : Public, Static, Literal, HasDefault
    TokenType LT = 31 : Public, Static, Literal, HasDefault
    TokenType LE = 32 : Public, Static, Literal, HasDefault
    TokenType BITAND = 33 : Public, Static, Literal, HasDefault
    TokenType BITOR = 34 : Public, Static, Literal, HasDefault
    TokenType BITXOR = 35 : Public, Static, Literal, HasDefault
    TokenType LSHIFT = 36 : Public, Static, Literal, HasDefault
    TokenType RSHIFT = 37 : Public, Static, Literal, HasDefault
    TokenType PLUS = 38 : Public, Static, Literal, HasDefault
    TokenType MINUS = 39 : Public, Static, Literal, HasDefault
    TokenType STAR = 40 : Public, Static, Literal, HasDefault
    TokenType SLASH = 41 : Public, Static, Literal, HasDefault
    TokenType HEX = 42 : Public, Static, Literal, HasDefault
    TokenType BIN = 43 : Public, Static, Literal, HasDefault
    TokenType NEG = 44 : Public, Static, Literal, HasDefault
    TokenType BANG = 45 : Public, Static, Literal, HasDefault
    TokenType EROTEME = 46 : Public, Static, Literal, HasDefault
    TokenType MICROSECOND = 47 : Public, Static, Literal, HasDefault
    TokenType SECOND = 48 : Public, Static, Literal, HasDefault
    TokenType MINUTE = 49 : Public, Static, Literal, HasDefault
    TokenType HOUR = 50 : Public, Static, Literal, HasDefault
    TokenType DAY = 51 : Public, Static, Literal, HasDefault
    TokenType WEEK = 52 : Public, Static, Literal, HasDefault
    TokenType MONTH = 53 : Public, Static, Literal, HasDefault
    TokenType QUARTER = 54 : Public, Static, Literal, HasDefault
    TokenType YEAR = 55 : Public, Static, Literal, HasDefault
    TokenType SECOND_MICROSECOND = 56 : Public, Static, Literal, HasDefault
    TokenType MINUTE_MICROSECOND = 57 : Public, Static, Literal, HasDefault
    TokenType MINUTE_SECOND = 58 : Public, Static, Literal, HasDefault
    TokenType HOUR_MICROSECOND = 59 : Public, Static, Literal, HasDefault
    TokenType HOUR_SECOND = 60 : Public, Static, Literal, HasDefault
    TokenType HOUR_MINUTE = 61 : Public, Static, Literal, HasDefault
    TokenType DAY_MICROSECOND = 62 : Public, Static, Literal, HasDefault
    TokenType DAY_SECOND = 63 : Public, Static, Literal, HasDefault
    TokenType DAY_MINUTE = 64 : Public, Static, Literal, HasDefault
    TokenType DAY_HOUR = 65 : Public, Static, Literal, HasDefault
    TokenType YEAR_MONTH = 66 : Public, Static, Literal, HasDefault
    TokenType DOUBLESTAR = 67 : Public, Static, Literal, HasDefault
    TokenType MOD = 68 : Public, Static, Literal, HasDefault
    TokenType COLON = 69 : Public, Static, Literal, HasDefault
    TokenType ORDERBY_ASC = 70 : Public, Static, Literal, HasDefault
    TokenType ORDERBY_DESC = 71 : Public, Static, Literal, HasDefault
    TokenType AS = 72 : Public, Static, Literal, HasDefault
    TokenType LCURLY = 73 : Public, Static, Literal, HasDefault
    TokenType RCURLY = 74 : Public, Static, Literal, HasDefault
    TokenType DOTSTAR = 75 : Public, Static, Literal, HasDefault
    TokenType CAST = 76 : Public, Static, Literal, HasDefault
    TokenType DECIMAL = 77 : Public, Static, Literal, HasDefault
    TokenType UNSIGNED = 78 : Public, Static, Literal, HasDefault
    TokenType SIGNED = 79 : Public, Static, Literal, HasDefault
    TokenType INTEGER = 80 : Public, Static, Literal, HasDefault
    TokenType DATE = 81 : Public, Static, Literal, HasDefault
    TokenType TIME = 82 : Public, Static, Literal, HasDefault
    TokenType DATETIME = 83 : Public, Static, Literal, HasDefault
    TokenType CHAR = 84 : Public, Static, Literal, HasDefault
    TokenType BINARY = 85 : Public, Static, Literal, HasDefault
    TokenType JSON = 86 : Public, Static, Literal, HasDefault
    TokenType ARROW = 87 : Public, Static, Literal, HasDefault
    TokenType DOUBLE_ARROW = 88 : Public, Static, Literal, HasDefault
    TokenType OVERLAPS = 89 : Public, Static, Literal, HasDefault
Class MySqlX.Protocol.X.ExprParser+Token: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(TokenType, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TokenType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    TokenType type : Assembly
    System.String value : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class MySql.Data.common.MySqlConnectionStringOption+SetterDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MySqlBaseConnectionStringBuilder, MySqlConnectionStringOption, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MySqlBaseConnectionStringBuilder, MySqlConnectionStringOption, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.common.MySqlConnectionStringOption+GetterDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MySqlBaseConnectionStringBuilder, MySqlConnectionStringOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MySqlBaseConnectionStringBuilder, MySqlConnectionStringOption, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.common.MySqlConnectionStringOption+ClassicSetterDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MySqlConnectionStringBuilder, MySqlConnectionStringOption, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MySqlConnectionStringBuilder, MySqlConnectionStringOption, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.common.MySqlConnectionStringOption+ClassicGetterDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MySqlConnectionStringBuilder, MySqlConnectionStringOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MySqlConnectionStringBuilder, MySqlConnectionStringOption, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.common.MySqlConnectionStringOption+XSetterDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MySqlXConnectionStringBuilder, MySqlConnectionStringOption, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MySqlXConnectionStringBuilder, MySqlConnectionStringOption, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.common.MySqlConnectionStringOption+XGetterDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MySqlXConnectionStringBuilder, MySqlConnectionStringOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MySqlXConnectionStringBuilder, MySqlConnectionStringOption, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MySql.Data.Common.NativeMethods+SecurityAttributes: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Length : Public
    IntPtr securityDescriptor : Public
    Boolean inheritHandle : Public
Class MySql.Data.MySqlClient.MySqlCommand+AsyncDelegate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, CommandBehavior): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, CommandBehavior, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Mysqlx.ClientMessages+Types+Type: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type None = 0 : Public, Static, Literal, HasDefault
    Type ConCapabilitiesGet = 1 : Public, Static, Literal, HasDefault
    Type ConCapabilitiesSet = 2 : Public, Static, Literal, HasDefault
    Type ConClose = 3 : Public, Static, Literal, HasDefault
    Type SessAuthenticateStart = 4 : Public, Static, Literal, HasDefault
    Type SessAuthenticateContinue = 5 : Public, Static, Literal, HasDefault
    Type SessReset = 6 : Public, Static, Literal, HasDefault
    Type SessClose = 7 : Public, Static, Literal, HasDefault
    Type SqlStmtExecute = 12 : Public, Static, Literal, HasDefault
    Type CrudFind = 17 : Public, Static, Literal, HasDefault
    Type CrudInsert = 18 : Public, Static, Literal, HasDefault
    Type CrudUpdate = 19 : Public, Static, Literal, HasDefault
    Type CrudDelete = 20 : Public, Static, Literal, HasDefault
    Type ExpectOpen = 24 : Public, Static, Literal, HasDefault
    Type ExpectClose = 25 : Public, Static, Literal, HasDefault
    Type CrudCreateView = 30 : Public, Static, Literal, HasDefault
    Type CrudModifyView = 31 : Public, Static, Literal, HasDefault
    Type CrudDropView = 32 : Public, Static, Literal, HasDefault
    Type PreparePrepare = 40 : Public, Static, Literal, HasDefault
    Type PrepareExecute = 41 : Public, Static, Literal, HasDefault
    Type PrepareDeallocate = 42 : Public, Static, Literal, HasDefault
    Type CursorOpen = 43 : Public, Static, Literal, HasDefault
    Type CursorClose = 44 : Public, Static, Literal, HasDefault
    Type CursorFetch = 45 : Public, Static, Literal, HasDefault
    Type Compression = 46 : Public, Static, Literal, HasDefault
Struct Mysqlx.ServerMessages+Types+Type: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type Ok = 0 : Public, Static, Literal, HasDefault
    Type Error = 1 : Public, Static, Literal, HasDefault
    Type ConnCapabilities = 2 : Public, Static, Literal, HasDefault
    Type SessAuthenticateContinue = 3 : Public, Static, Literal, HasDefault
    Type SessAuthenticateOk = 4 : Public, Static, Literal, HasDefault
    Type Notice = 11 : Public, Static, Literal, HasDefault
    Type ResultsetColumnMetaData = 12 : Public, Static, Literal, HasDefault
    Type ResultsetRow = 13 : Public, Static, Literal, HasDefault
    Type ResultsetFetchDone = 14 : Public, Static, Literal, HasDefault
    Type ResultsetFetchSuspended = 15 : Public, Static, Literal, HasDefault
    Type ResultsetFetchDoneMoreResultsets = 16 : Public, Static, Literal, HasDefault
    Type SqlStmtExecuteOk = 17 : Public, Static, Literal, HasDefault
    Type ResultsetFetchDoneMoreOutParams = 18 : Public, Static, Literal, HasDefault
    Type Compression = 19 : Public, Static, Literal, HasDefault
Struct Mysqlx.Error+Types+Severity: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Severity Error = 0 : Public, Static, Literal, HasDefault
    Severity Fatal = 1 : Public, Static, Literal, HasDefault
Struct Mysqlx.Resultset.ColumnMetaData+Types+FieldType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    FieldType None = 0 : Public, Static, Literal, HasDefault
    FieldType Sint = 1 : Public, Static, Literal, HasDefault
    FieldType Uint = 2 : Public, Static, Literal, HasDefault
    FieldType Double = 5 : Public, Static, Literal, HasDefault
    FieldType Float = 6 : Public, Static, Literal, HasDefault
    FieldType Bytes = 7 : Public, Static, Literal, HasDefault
    FieldType Time = 10 : Public, Static, Literal, HasDefault
    FieldType Datetime = 12 : Public, Static, Literal, HasDefault
    FieldType Set = 15 : Public, Static, Literal, HasDefault
    FieldType Enum = 16 : Public, Static, Literal, HasDefault
    FieldType Bit = 17 : Public, Static, Literal, HasDefault
    FieldType Decimal = 18 : Public, Static, Literal, HasDefault
Class Mysqlx.Prepare.Prepare+Types+OneOfMessage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OneOfMessage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Prepare.Prepare+Types+OneOfMessage]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Prepare.Prepare+Types+OneOfMessage]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Prepare.Prepare+Types+OneOfMessage]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 FindFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 InsertFieldNumber = 3 : Public, Static, Literal, HasDefault
    Int32 UpdateFieldNumber = 4 : Public, Static, Literal, HasDefault
    Int32 DeleteFieldNumber = 5 : Public, Static, Literal, HasDefault
    Int32 StmtExecuteFieldNumber = 6 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Prepare.Prepare+Types+OneOfMessage] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Type Type  'get set' : 
    Mysqlx.Crud.Find Find 'get set' : 
    Mysqlx.Crud.Insert Insert 'get set' : 
    Mysqlx.Crud.Update Update 'get set' : 
    Mysqlx.Crud.Delete Delete 'get set' : 
    Mysqlx.Sql.StmtExecute StmtExecute 'get set' : 
    TypePresentOneofCase TypePresentCase 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Find(): PrivateScope, Public, HideBySig, SpecialName
    set_Find(Find): PrivateScope, Public, HideBySig, SpecialName
    get_Insert(): PrivateScope, Public, HideBySig, SpecialName
    set_Insert(Insert): PrivateScope, Public, HideBySig, SpecialName
    get_Update(): PrivateScope, Public, HideBySig, SpecialName
    set_Update(Update): PrivateScope, Public, HideBySig, SpecialName
    get_Delete(): PrivateScope, Public, HideBySig, SpecialName
    set_Delete(Delete): PrivateScope, Public, HideBySig, SpecialName
    get_StmtExecute(): PrivateScope, Public, HideBySig, SpecialName
    set_StmtExecute(StmtExecute): PrivateScope, Public, HideBySig, SpecialName
    get_TypePresentCase(): PrivateScope, Public, HideBySig, SpecialName
    ClearTypePresent(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(OneOfMessage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(OneOfMessage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mysqlx.Notice.Frame+Types+Scope: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Scope None = 0 : Public, Static, Literal, HasDefault
    Scope Global = 1 : Public, Static, Literal, HasDefault
    Scope Local = 2 : Public, Static, Literal, HasDefault
Struct Mysqlx.Notice.Frame+Types+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type NoneType = 0 : Public, Static, Literal, HasDefault
    Type Warning = 1 : Public, Static, Literal, HasDefault
    Type SessionVariableChanged = 2 : Public, Static, Literal, HasDefault
    Type SessionStateChanged = 3 : Public, Static, Literal, HasDefault
Struct Mysqlx.Notice.Warning+Types+Level: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Level None = 0 : Public, Static, Literal, HasDefault
    Level Note = 1 : Public, Static, Literal, HasDefault
    Level Warning = 2 : Public, Static, Literal, HasDefault
    Level Error = 3 : Public, Static, Literal, HasDefault
Struct Mysqlx.Notice.SessionStateChanged+Types+Parameter: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Parameter None = 0 : Public, Static, Literal, HasDefault
    Parameter CurrentSchema = 1 : Public, Static, Literal, HasDefault
    Parameter AccountExpired = 2 : Public, Static, Literal, HasDefault
    Parameter GeneratedInsertId = 3 : Public, Static, Literal, HasDefault
    Parameter RowsAffected = 4 : Public, Static, Literal, HasDefault
    Parameter RowsFound = 5 : Public, Static, Literal, HasDefault
    Parameter RowsMatched = 6 : Public, Static, Literal, HasDefault
    Parameter TrxCommitted = 7 : Public, Static, Literal, HasDefault
    Parameter TrxRolledback = 9 : Public, Static, Literal, HasDefault
    Parameter ProducedMessage = 10 : Public, Static, Literal, HasDefault
    Parameter ClientIdAssigned = 11 : Public, Static, Literal, HasDefault
    Parameter GeneratedDocumentIds = 12 : Public, Static, Literal, HasDefault
Struct Mysqlx.Expr.Expr+Types+Type: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type None = 0 : Public, Static, Literal, HasDefault
    Type Ident = 1 : Public, Static, Literal, HasDefault
    Type Literal = 2 : Public, Static, Literal, HasDefault
    Type Variable = 3 : Public, Static, Literal, HasDefault
    Type FuncCall = 4 : Public, Static, Literal, HasDefault
    Type Operator = 5 : Public, Static, Literal, HasDefault
    Type Placeholder = 6 : Public, Static, Literal, HasDefault
    Type Object = 7 : Public, Static, Literal, HasDefault
    Type Array = 8 : Public, Static, Literal, HasDefault
Struct Mysqlx.Expr.DocumentPathItem+Types+Type: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type None = 0 : Public, Static, Literal, HasDefault
    Type Member = 1 : Public, Static, Literal, HasDefault
    Type MemberAsterisk = 2 : Public, Static, Literal, HasDefault
    Type ArrayIndex = 3 : Public, Static, Literal, HasDefault
    Type ArrayIndexAsterisk = 4 : Public, Static, Literal, HasDefault
    Type DoubleAsterisk = 5 : Public, Static, Literal, HasDefault
Class Mysqlx.Expr.Object+Types+ObjectField: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ObjectField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expr.Object+Types+ObjectField]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expr.Object+Types+ObjectField]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expr.Object+Types+ObjectField]
  Fields:
    Int32 KeyFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ValueFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expr.Object+Types+ObjectField] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Key 'get set' : 
    Mysqlx.Expr.Expr Value 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    set_Key(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Expr): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ObjectField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(ObjectField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mysqlx.Expect.Open+Types+CtxOperation: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CtxOperation ExpectCtxCopyPrev = 0 : Public, Static, Literal, HasDefault
    CtxOperation ExpectCtxEmpty = 1 : Public, Static, Literal, HasDefault
Class Mysqlx.Expect.Open+Types+Condition: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Condition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Expect.Open+Types+Condition]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Expect.Open+Types+Condition]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Expect.Open+Types+Condition]
  Fields:
    Int32 ConditionKeyFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ConditionValueFieldNumber = 2 : Public, Static, Literal, HasDefault
    Int32 OpFieldNumber = 3 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Expect.Open+Types+Condition] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    UInt32 ConditionKey 'get set' : 
    Google.Protobuf.ByteString ConditionValue 'get set' : 
    ConditionOperation Op 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ConditionKey(): PrivateScope, Public, HideBySig, SpecialName
    set_ConditionKey(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ConditionValue(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_Op(): PrivateScope, Public, HideBySig, SpecialName
    set_Op(ConditionOperation): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Condition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Condition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mysqlx.Datatypes.Scalar+Types+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type None = 0 : Public, Static, Literal, HasDefault
    Type VSint = 1 : Public, Static, Literal, HasDefault
    Type VUint = 2 : Public, Static, Literal, HasDefault
    Type VNull = 3 : Public, Static, Literal, HasDefault
    Type VOctets = 4 : Public, Static, Literal, HasDefault
    Type VDouble = 5 : Public, Static, Literal, HasDefault
    Type VFloat = 6 : Public, Static, Literal, HasDefault
    Type VBool = 7 : Public, Static, Literal, HasDefault
    Type VString = 8 : Public, Static, Literal, HasDefault
Class Mysqlx.Datatypes.Scalar+Types+String: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Datatypes.Scalar+Types+String]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Datatypes.Scalar+Types+String]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Datatypes.Scalar+Types+String]
  Fields:
    Int32 ValueFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 CollationFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Datatypes.Scalar+Types+String] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.ByteString Value 'get set' : 
    UInt64 Collation 'get set' : 
    StringPresentOneofCase StringPresentCase 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_Collation(): PrivateScope, Public, HideBySig, SpecialName
    set_Collation(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_StringPresentCase(): PrivateScope, Public, HideBySig, SpecialName
    ClearStringPresent(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Datatypes.Scalar+Types+Octets: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Octets): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Datatypes.Scalar+Types+Octets]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Datatypes.Scalar+Types+Octets]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Datatypes.Scalar+Types+Octets]
  Fields:
    Int32 ValueFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ContentTypeFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Datatypes.Scalar+Types+Octets] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.ByteString Value 'get set' : 
    UInt32 ContentType 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(ByteString): PrivateScope, Public, HideBySig, SpecialName
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentType(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Octets): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(Octets): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mysqlx.Datatypes.Object+Types+ObjectField: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ObjectField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Datatypes.Object+Types+ObjectField]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Datatypes.Object+Types+ObjectField]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Datatypes.Object+Types+ObjectField]
  Fields:
    Int32 KeyFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 ValueFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Datatypes.Object+Types+ObjectField] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    System.String Key 'get set' : 
    Mysqlx.Datatypes.Any Value 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    set_Key(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Any): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ObjectField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(ObjectField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mysqlx.Datatypes.Any+Types+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type None = 0 : Public, Static, Literal, HasDefault
    Type Scalar = 1 : Public, Static, Literal, HasDefault
    Type Object = 2 : Public, Static, Literal, HasDefault
    Type Array = 3 : Public, Static, Literal, HasDefault
Class Mysqlx.Cursor.Open+Types+OneOfMessage: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OneOfMessage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Cursor.Open+Types+OneOfMessage]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Cursor.Open+Types+OneOfMessage]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Cursor.Open+Types+OneOfMessage]
  Fields:
    Int32 TypeFieldNumber = 1 : Public, Static, Literal, HasDefault
    Int32 PrepareExecuteFieldNumber = 2 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Cursor.Open+Types+OneOfMessage] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Type Type  'get set' : 
    Mysqlx.Prepare.Execute PrepareExecute 'get set' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_PrepareExecute(): PrivateScope, Public, HideBySig, SpecialName
    set_PrepareExecute(Execute): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(OneOfMessage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(OneOfMessage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mysqlx.Crud.Order+Types+Direction: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Direction NoneDirection = 0 : Public, Static, Literal, HasDefault
    Direction Asc = 1 : Public, Static, Literal, HasDefault
    Direction Desc = 2 : Public, Static, Literal, HasDefault
Struct Mysqlx.Crud.UpdateOperation+Types+UpdateType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    UpdateType NoneUpdateType = 0 : Public, Static, Literal, HasDefault
    UpdateType Set = 1 : Public, Static, Literal, HasDefault
    UpdateType ItemRemove = 2 : Public, Static, Literal, HasDefault
    UpdateType ItemSet = 3 : Public, Static, Literal, HasDefault
    UpdateType ItemReplace = 4 : Public, Static, Literal, HasDefault
    UpdateType ItemMerge = 5 : Public, Static, Literal, HasDefault
    UpdateType ArrayInsert = 6 : Public, Static, Literal, HasDefault
    UpdateType ArrayAppend = 7 : Public, Static, Literal, HasDefault
    UpdateType MergePatch = 8 : Public, Static, Literal, HasDefault
Struct Mysqlx.Crud.Find+Types+RowLock: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RowLock NoneRowLock = 0 : Public, Static, Literal, HasDefault
    RowLock SharedLock = 1 : Public, Static, Literal, HasDefault
    RowLock ExclusiveLock = 2 : Public, Static, Literal, HasDefault
Struct Mysqlx.Crud.Find+Types+RowLockOptions: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RowLockOptions NoneRowLockOptions = 0 : Public, Static, Literal, HasDefault
    RowLockOptions Nowait = 1 : Public, Static, Literal, HasDefault
    RowLockOptions SkipLocked = 2 : Public, Static, Literal, HasDefault
Class Mysqlx.Crud.Insert+Types+TypedRow: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TypedRow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Google.Protobuf.IMessage`1[Mysqlx.Crud.Insert+Types+TypedRow]
    Google.Protobuf.IMessage
    System.IEquatable`1[Mysqlx.Crud.Insert+Types+TypedRow]
    Google.Protobuf.IDeepCloneable`1[Mysqlx.Crud.Insert+Types+TypedRow]
  Fields:
    Int32 FieldFieldNumber = 1 : Public, Static, Literal, HasDefault
  Properties:
    Google.Protobuf.MessageParser`1[Mysqlx.Crud.Insert+Types+TypedRow] Parser 'get ' : 
    Google.Protobuf.Reflection.MessageDescriptor Descriptor 'get ' : 
    Google.Protobuf.Collections.RepeatedField`1[Mysqlx.Expr.Expr] Field 'get ' : 
  Methods:
    get_Parser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Field(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(TypedRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(CodedOutputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(TypedRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(CodedInputStream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MySqlX.XDevAPI.Client+ConnectionOptions+PoolingStruct: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Enabled 'get set' : 
    Int32 MaxSize 'get set' : 
    Int32 MaxIdleTime 'get set' : 
    Int32 QueueTimeout 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxIdleTime(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxIdleTime(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_QueueTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_QueueTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Mysqlx.Prepare.Prepare+Types+OneOfMessage+TypePresentOneofCase: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TypePresentOneofCase None = 0 : Public, Static, Literal, HasDefault
    TypePresentOneofCase Type = 1 : Public, Static, Literal, HasDefault
Class Mysqlx.Prepare.Prepare+Types+OneOfMessage+Types: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
Class Mysqlx.Expect.Open+Types+Condition+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Struct Mysqlx.Datatypes.Scalar+Types+String+StringPresentOneofCase: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StringPresentOneofCase None = 0 : Public, Static, Literal, HasDefault
    StringPresentOneofCase Value = 1 : Public, Static, Literal, HasDefault
    StringPresentOneofCase Collation = 2 : Public, Static, Literal, HasDefault
Class Mysqlx.Cursor.Open+Types+OneOfMessage+Types: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
Struct Mysqlx.Prepare.Prepare+Types+OneOfMessage+Types+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type Find = 0 : Public, Static, Literal, HasDefault
    Type Insert = 1 : Public, Static, Literal, HasDefault
    Type Update = 2 : Public, Static, Literal, HasDefault
    Type Delete = 4 : Public, Static, Literal, HasDefault
    Type Stmt = 5 : Public, Static, Literal, HasDefault
Struct Mysqlx.Expect.Open+Types+Condition+Types+Key: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Key None = 0 : Public, Static, Literal, HasDefault
    Key ExpectNoError = 1 : Public, Static, Literal, HasDefault
    Key ExpectFieldExist = 2 : Public, Static, Literal, HasDefault
    Key ExpectDocidGenerated = 3 : Public, Static, Literal, HasDefault
Struct Mysqlx.Expect.Open+Types+Condition+Types+ConditionOperation: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ConditionOperation ExpectOpSet = 0 : Public, Static, Literal, HasDefault
    ConditionOperation ExpectOpUnset = 1 : Public, Static, Literal, HasDefault
Struct Mysqlx.Cursor.Open+Types+OneOfMessage+Types+Type: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type PrepareExecute = 0 : Public, Static, Literal, HasDefault
